(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngx-grpc/common'), require('@ngx-grpc/core'), require('google-protobuf')) :
    typeof define === 'function' && define.amd ? define('@ondewo/nlu-client-angular', ['exports', '@angular/core', '@ngx-grpc/common', '@ngx-grpc/core', 'google-protobuf'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ondewo = global.ondewo || {}, global.ondewo['nlu-client-angular'] = {}), global.ng.core, global.common, global.i2, global.googleProtobuf));
}(this, (function (exports, i0, common, i2, googleProtobuf) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    exports.NullValue = void 0;
    (function (NullValue) {
        NullValue[NullValue["nullValue"] = 0] = "nullValue";
    })(exports.NullValue || (exports.NullValue = {}));
    exports.Struct = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Struct value
         */
        function Struct(value) {
            value = value || {};
            this.fields = Object.assign({}, (value.fields || {}));
            Struct.refineValues(this);
        }
        Struct.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Struct.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Struct.fromBinary = function (bytes) {
            var instance = new Struct();
            Struct.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Struct.refineValues = function (instance) {
            instance.fields = instance.fields || {};
        };
        Struct.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var msg_1 = {};
                        reader.readMessage(msg_1, Struct.FieldsEntry.fromBinaryReader);
                        instance.fields = instance.fields || {};
                        instance.fields[msg_1.key] = msg_1.value;
                        break;
                    default:
                        reader.skipField();
                }
            }
            Struct.refineValues(instance);
        };
        Struct.toBinaryWriter = function (instance, writer) {
            if (!!instance.fields) {
                var keys_1 = Object.keys(instance.fields);
                if (keys_1.length) {
                    var repeated_1 = keys_1
                        .map(function (key) { return ({ key: key, value: instance.fields[key] }); })
                        .reduce(function (r, v) { return __spread(r, [v]); }, []);
                    writer.writeRepeatedMessage(1, repeated_1, Struct.FieldsEntry.toBinaryWriter);
                }
            }
        };
        Object.defineProperty(Struct.prototype, "fields", {
            get: function () {
                return this._fields;
            },
            set: function (value) {
                this._fields = value;
            },
            enumerable: false,
            configurable: true
        });
        Struct.prototype.toObject = function () {
            return {
                fields: Object.assign({}, (this.fields || {}))
            };
        };
        Struct.prototype.toJSON = function () {
            return this.toObject();
        };
        return Struct;
    }());
    (function (Struct) {
        var FieldsEntry = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param FieldsEntry value
             */
            function FieldsEntry(value) {
                value = value || {};
                this.key = value.key;
                this.value = value.value ? new exports.Value(value.value) : undefined;
                FieldsEntry.refineValues(this);
            }
            FieldsEntry.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                FieldsEntry.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            FieldsEntry.fromBinary = function (bytes) {
                var instance = new FieldsEntry();
                FieldsEntry.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            FieldsEntry.refineValues = function (instance) {
                instance.key = instance.key || '';
                instance.value = instance.value || undefined;
            };
            FieldsEntry.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.key = reader.readString();
                            break;
                        case 2:
                            instance.value = new exports.Value();
                            reader.readMessage(instance.value, exports.Value.fromBinaryReader);
                            break;
                        default:
                            reader.skipField();
                    }
                }
                FieldsEntry.refineValues(instance);
            };
            FieldsEntry.toBinaryWriter = function (instance, writer) {
                if (instance.key) {
                    writer.writeString(1, instance.key);
                }
                if (instance.value) {
                    writer.writeMessage(2, instance.value, exports.Value.toBinaryWriter);
                }
            };
            Object.defineProperty(FieldsEntry.prototype, "key", {
                get: function () {
                    return this._key;
                },
                set: function (value) {
                    this._key = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(FieldsEntry.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            FieldsEntry.prototype.toObject = function () {
                return {
                    key: this.key,
                    value: this.value ? this.value.toObject() : undefined
                };
            };
            FieldsEntry.prototype.toJSON = function () {
                return this.toObject();
            };
            return FieldsEntry;
        }());
        Struct.FieldsEntry = FieldsEntry;
    })(exports.Struct || (exports.Struct = {}));
    exports.Value = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Value value
         */
        function Value(value) {
            this._kind = Value.KindCase.none;
            value = value || {};
            this.nullValue = value.nullValue;
            this.numberValue = value.numberValue;
            this.stringValue = value.stringValue;
            this.boolValue = value.boolValue;
            this.structValue = value.structValue
                ? new exports.Struct(value.structValue)
                : undefined;
            this.listValue = value.listValue
                ? new ListValue(value.listValue)
                : undefined;
            Value.refineValues(this);
        }
        Value.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Value.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Value.fromBinary = function (bytes) {
            var instance = new Value();
            Value.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Value.refineValues = function (instance) { };
        Value.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.nullValue = reader.readEnum();
                        break;
                    case 2:
                        instance.numberValue = reader.readDouble();
                        break;
                    case 3:
                        instance.stringValue = reader.readString();
                        break;
                    case 4:
                        instance.boolValue = reader.readBool();
                        break;
                    case 5:
                        instance.structValue = new exports.Struct();
                        reader.readMessage(instance.structValue, exports.Struct.fromBinaryReader);
                        break;
                    case 6:
                        instance.listValue = new ListValue();
                        reader.readMessage(instance.listValue, ListValue.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            Value.refineValues(instance);
        };
        Value.toBinaryWriter = function (instance, writer) {
            if (instance.nullValue || instance.nullValue === 0) {
                writer.writeEnum(1, instance.nullValue);
            }
            if (instance.numberValue || instance.numberValue === 0) {
                writer.writeDouble(2, instance.numberValue);
            }
            if (instance.stringValue || instance.stringValue === '') {
                writer.writeString(3, instance.stringValue);
            }
            if (instance.boolValue || instance.boolValue === false) {
                writer.writeBool(4, instance.boolValue);
            }
            if (instance.structValue) {
                writer.writeMessage(5, instance.structValue, exports.Struct.toBinaryWriter);
            }
            if (instance.listValue) {
                writer.writeMessage(6, instance.listValue, ListValue.toBinaryWriter);
            }
        };
        Object.defineProperty(Value.prototype, "nullValue", {
            get: function () {
                return this._nullValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._numberValue = this._stringValue = this._boolValue = this._structValue = this._listValue = undefined;
                    this._kind = Value.KindCase.nullValue;
                }
                this._nullValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "numberValue", {
            get: function () {
                return this._numberValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._nullValue = this._stringValue = this._boolValue = this._structValue = this._listValue = undefined;
                    this._kind = Value.KindCase.numberValue;
                }
                this._numberValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "stringValue", {
            get: function () {
                return this._stringValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._nullValue = this._numberValue = this._boolValue = this._structValue = this._listValue = undefined;
                    this._kind = Value.KindCase.stringValue;
                }
                this._stringValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "boolValue", {
            get: function () {
                return this._boolValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._nullValue = this._numberValue = this._stringValue = this._structValue = this._listValue = undefined;
                    this._kind = Value.KindCase.boolValue;
                }
                this._boolValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "structValue", {
            get: function () {
                return this._structValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._nullValue = this._numberValue = this._stringValue = this._boolValue = this._listValue = undefined;
                    this._kind = Value.KindCase.structValue;
                }
                this._structValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "listValue", {
            get: function () {
                return this._listValue;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._nullValue = this._numberValue = this._stringValue = this._boolValue = this._structValue = undefined;
                    this._kind = Value.KindCase.listValue;
                }
                this._listValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Value.prototype, "kind", {
            get: function () {
                return this._kind;
            },
            enumerable: false,
            configurable: true
        });
        Value.prototype.toObject = function () {
            return {
                nullValue: this.nullValue,
                numberValue: this.numberValue,
                stringValue: this.stringValue,
                boolValue: this.boolValue,
                structValue: this.structValue ? this.structValue.toObject() : undefined,
                listValue: this.listValue ? this.listValue.toObject() : undefined
            };
        };
        Value.prototype.toJSON = function () {
            return this.toObject();
        };
        return Value;
    }());
    (function (Value) {
        var KindCase;
        (function (KindCase) {
            KindCase[KindCase["none"] = 0] = "none";
            KindCase[KindCase["nullValue"] = 1] = "nullValue";
            KindCase[KindCase["numberValue"] = 2] = "numberValue";
            KindCase[KindCase["stringValue"] = 3] = "stringValue";
            KindCase[KindCase["boolValue"] = 4] = "boolValue";
            KindCase[KindCase["structValue"] = 5] = "structValue";
            KindCase[KindCase["listValue"] = 6] = "listValue";
        })(KindCase = Value.KindCase || (Value.KindCase = {}));
    })(exports.Value || (exports.Value = {}));
    var ListValue = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListValue value
         */
        function ListValue(value) {
            value = value || {};
            this.values = (value.values || []).map(function (m) { return new exports.Value(m); });
            ListValue.refineValues(this);
        }
        ListValue.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListValue.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListValue.fromBinary = function (bytes) {
            var instance = new ListValue();
            ListValue.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListValue.refineValues = function (instance) {
            instance.values = instance.values || [];
        };
        ListValue.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Value();
                        reader.readMessage(messageInitializer1, exports.Value.fromBinaryReader);
                        (instance.values = instance.values || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListValue.refineValues(instance);
        };
        ListValue.toBinaryWriter = function (instance, writer) {
            if (instance.values && instance.values.length) {
                writer.writeRepeatedMessage(1, instance.values, exports.Value.toBinaryWriter);
            }
        };
        Object.defineProperty(ListValue.prototype, "values", {
            get: function () {
                return this._values;
            },
            set: function (value) {
                this._values = value;
            },
            enumerable: false,
            configurable: true
        });
        ListValue.prototype.toObject = function () {
            return {
                values: (this.values || []).map(function (m) { return m.toObject(); })
            };
        };
        ListValue.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListValue;
    }());

    var Any = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Any value
         */
        function Any(value) {
            value = value || {};
            this.typeUrl = value.typeUrl;
            this.value = value.value;
            Any.refineValues(this);
        }
        Any.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Any.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Any.fromBinary = function (bytes) {
            var instance = new Any();
            Any.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Any.refineValues = function (instance) {
            instance.typeUrl = instance.typeUrl || '';
            instance.value = instance.value || new Uint8Array();
        };
        Any.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.typeUrl = reader.readString();
                        break;
                    case 2:
                        instance.value = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Any.refineValues(instance);
        };
        Any.toBinaryWriter = function (instance, writer) {
            if (instance.typeUrl) {
                writer.writeString(1, instance.typeUrl);
            }
            if (instance.value && instance.value.length) {
                writer.writeBytes(2, instance.value);
            }
        };
        Object.defineProperty(Any.prototype, "typeUrl", {
            get: function () {
                return this._typeUrl;
            },
            set: function (value) {
                this._typeUrl = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Any.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (value) {
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        Any.prototype.toObject = function () {
            return {
                typeUrl: this.typeUrl,
                value: this.value ? this.value.subarray(0) : new Uint8Array()
            };
        };
        Any.prototype.toJSON = function () {
            return this.toObject();
        };
        return Any;
    }());

    var Status = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Status value
         */
        function Status(value) {
            value = value || {};
            this.code = value.code;
            this.message = value.message;
            this.details = (value.details || []).map(function (m) { return new Any(m); });
            Status.refineValues(this);
        }
        Status.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Status.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Status.fromBinary = function (bytes) {
            var instance = new Status();
            Status.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Status.refineValues = function (instance) {
            instance.code = instance.code || 0;
            instance.message = instance.message || '';
            instance.details = instance.details || [];
        };
        Status.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.code = reader.readInt32();
                        break;
                    case 2:
                        instance.message = reader.readString();
                        break;
                    case 3:
                        var messageInitializer3 = new Any();
                        reader.readMessage(messageInitializer3, Any.fromBinaryReader);
                        (instance.details = instance.details || []).push(messageInitializer3);
                        break;
                    default:
                        reader.skipField();
                }
            }
            Status.refineValues(instance);
        };
        Status.toBinaryWriter = function (instance, writer) {
            if (instance.code) {
                writer.writeInt32(1, instance.code);
            }
            if (instance.message) {
                writer.writeString(2, instance.message);
            }
            if (instance.details && instance.details.length) {
                writer.writeRepeatedMessage(3, instance.details, Any.toBinaryWriter);
            }
        };
        Object.defineProperty(Status.prototype, "code", {
            get: function () {
                return this._code;
            },
            set: function (value) {
                this._code = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Status.prototype, "message", {
            get: function () {
                return this._message;
            },
            set: function (value) {
                this._message = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Status.prototype, "details", {
            get: function () {
                return this._details;
            },
            set: function (value) {
                this._details = value;
            },
            enumerable: false,
            configurable: true
        });
        Status.prototype.toObject = function () {
            return {
                code: this.code,
                message: this.message,
                details: (this.details || []).map(function (m) { return m.toObject(); })
            };
        };
        Status.prototype.toJSON = function () {
            return this.toObject();
        };
        return Status;
    }());

    var LatLng = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param LatLng value
         */
        function LatLng(value) {
            value = value || {};
            this.latitude = value.latitude;
            this.longitude = value.longitude;
            LatLng.refineValues(this);
        }
        LatLng.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            LatLng.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        LatLng.fromBinary = function (bytes) {
            var instance = new LatLng();
            LatLng.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        LatLng.refineValues = function (instance) {
            instance.latitude = instance.latitude || 0;
            instance.longitude = instance.longitude || 0;
        };
        LatLng.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.latitude = reader.readDouble();
                        break;
                    case 2:
                        instance.longitude = reader.readDouble();
                        break;
                    default:
                        reader.skipField();
                }
            }
            LatLng.refineValues(instance);
        };
        LatLng.toBinaryWriter = function (instance, writer) {
            if (instance.latitude) {
                writer.writeDouble(1, instance.latitude);
            }
            if (instance.longitude) {
                writer.writeDouble(2, instance.longitude);
            }
        };
        Object.defineProperty(LatLng.prototype, "latitude", {
            get: function () {
                return this._latitude;
            },
            set: function (value) {
                this._latitude = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LatLng.prototype, "longitude", {
            get: function () {
                return this._longitude;
            },
            set: function (value) {
                this._longitude = value;
            },
            enumerable: false,
            configurable: true
        });
        LatLng.prototype.toObject = function () {
            return {
                latitude: this.latitude,
                longitude: this.longitude
            };
        };
        LatLng.prototype.toJSON = function () {
            return this.toObject();
        };
        return LatLng;
    }());

    var FieldMask = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FieldMask value
         */
        function FieldMask(value) {
            value = value || {};
            this.paths = (value.paths || []).slice();
            FieldMask.refineValues(this);
        }
        FieldMask.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FieldMask.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FieldMask.fromBinary = function (bytes) {
            var instance = new FieldMask();
            FieldMask.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FieldMask.refineValues = function (instance) {
            instance.paths = instance.paths || [];
        };
        FieldMask.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.paths = instance.paths || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            FieldMask.refineValues(instance);
        };
        FieldMask.toBinaryWriter = function (instance, writer) {
            if (instance.paths && instance.paths.length) {
                writer.writeRepeatedString(1, instance.paths);
            }
        };
        Object.defineProperty(FieldMask.prototype, "paths", {
            get: function () {
                return this._paths;
            },
            set: function (value) {
                this._paths = value;
            },
            enumerable: false,
            configurable: true
        });
        FieldMask.prototype.toObject = function () {
            return {
                paths: (this.paths || []).slice()
            };
        };
        FieldMask.prototype.toJSON = function () {
            return this.toObject();
        };
        return FieldMask;
    }());

    exports.Context = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Context value
         */
        function Context(value) {
            value = value || {};
            this.name = value.name;
            this.lifespanCount = value.lifespanCount;
            this.parameters = Object.assign({}, (value.parameters || {}));
            this.lifespanTime = value.lifespanTime;
            Context.refineValues(this);
        }
        Context.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Context.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Context.fromBinary = function (bytes) {
            var instance = new Context();
            Context.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Context.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.lifespanCount = instance.lifespanCount || 0;
            instance.parameters = instance.parameters || {};
            instance.lifespanTime = instance.lifespanTime || 0;
        };
        Context.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.lifespanCount = reader.readInt32();
                        break;
                    case 3:
                        var msg_3 = {};
                        reader.readMessage(msg_3, Context.ParametersEntry.fromBinaryReader);
                        instance.parameters = instance.parameters || {};
                        instance.parameters[msg_3.key] = msg_3.value;
                        break;
                    case 4:
                        instance.lifespanTime = reader.readFloat();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Context.refineValues(instance);
        };
        Context.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.lifespanCount) {
                writer.writeInt32(2, instance.lifespanCount);
            }
            if (!!instance.parameters) {
                var keys_3 = Object.keys(instance.parameters);
                if (keys_3.length) {
                    var repeated_3 = keys_3
                        .map(function (key) { return ({ key: key, value: instance.parameters[key] }); })
                        .reduce(function (r, v) { return __spread(r, [v]); }, []);
                    writer.writeRepeatedMessage(3, repeated_3, Context.ParametersEntry.toBinaryWriter);
                }
            }
            if (instance.lifespanTime) {
                writer.writeFloat(4, instance.lifespanTime);
            }
        };
        Object.defineProperty(Context.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Context.prototype, "lifespanCount", {
            get: function () {
                return this._lifespanCount;
            },
            set: function (value) {
                this._lifespanCount = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Context.prototype, "parameters", {
            get: function () {
                return this._parameters;
            },
            set: function (value) {
                this._parameters = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Context.prototype, "lifespanTime", {
            get: function () {
                return this._lifespanTime;
            },
            set: function (value) {
                this._lifespanTime = value;
            },
            enumerable: false,
            configurable: true
        });
        Context.prototype.toObject = function () {
            return {
                name: this.name,
                lifespanCount: this.lifespanCount,
                parameters: Object.assign({}, (this.parameters || {})),
                lifespanTime: this.lifespanTime
            };
        };
        Context.prototype.toJSON = function () {
            return this.toObject();
        };
        return Context;
    }());
    (function (Context) {
        var Parameter = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Parameter value
             */
            function Parameter(value) {
                value = value || {};
                this.name = value.name;
                this.displayName = value.displayName;
                this.value = value.value;
                this.valueOriginal = value.valueOriginal;
                Parameter.refineValues(this);
            }
            Parameter.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Parameter.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Parameter.fromBinary = function (bytes) {
                var instance = new Parameter();
                Parameter.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Parameter.refineValues = function (instance) {
                instance.name = instance.name || '';
                instance.displayName = instance.displayName || '';
                instance.value = instance.value || '';
                instance.valueOriginal = instance.valueOriginal || '';
            };
            Parameter.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.name = reader.readString();
                            break;
                        case 2:
                            instance.displayName = reader.readString();
                            break;
                        case 3:
                            instance.value = reader.readString();
                            break;
                        case 4:
                            instance.valueOriginal = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Parameter.refineValues(instance);
            };
            Parameter.toBinaryWriter = function (instance, writer) {
                if (instance.name) {
                    writer.writeString(1, instance.name);
                }
                if (instance.displayName) {
                    writer.writeString(2, instance.displayName);
                }
                if (instance.value) {
                    writer.writeString(3, instance.value);
                }
                if (instance.valueOriginal) {
                    writer.writeString(4, instance.valueOriginal);
                }
            };
            Object.defineProperty(Parameter.prototype, "name", {
                get: function () {
                    return this._name;
                },
                set: function (value) {
                    this._name = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "displayName", {
                get: function () {
                    return this._displayName;
                },
                set: function (value) {
                    this._displayName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "valueOriginal", {
                get: function () {
                    return this._valueOriginal;
                },
                set: function (value) {
                    this._valueOriginal = value;
                },
                enumerable: false,
                configurable: true
            });
            Parameter.prototype.toObject = function () {
                return {
                    name: this.name,
                    displayName: this.displayName,
                    value: this.value,
                    valueOriginal: this.valueOriginal
                };
            };
            Parameter.prototype.toJSON = function () {
                return this.toObject();
            };
            return Parameter;
        }());
        Context.Parameter = Parameter;
        var ParametersEntry = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param ParametersEntry value
             */
            function ParametersEntry(value) {
                value = value || {};
                this.key = value.key;
                this.value = value.value ? new Context.Parameter(value.value) : undefined;
                ParametersEntry.refineValues(this);
            }
            ParametersEntry.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                ParametersEntry.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            ParametersEntry.fromBinary = function (bytes) {
                var instance = new ParametersEntry();
                ParametersEntry.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            ParametersEntry.refineValues = function (instance) {
                instance.key = instance.key || '';
                instance.value = instance.value || undefined;
            };
            ParametersEntry.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.key = reader.readString();
                            break;
                        case 2:
                            instance.value = new Context.Parameter();
                            reader.readMessage(instance.value, Context.Parameter.fromBinaryReader);
                            break;
                        default:
                            reader.skipField();
                    }
                }
                ParametersEntry.refineValues(instance);
            };
            ParametersEntry.toBinaryWriter = function (instance, writer) {
                if (instance.key) {
                    writer.writeString(1, instance.key);
                }
                if (instance.value) {
                    writer.writeMessage(2, instance.value, Context.Parameter.toBinaryWriter);
                }
            };
            Object.defineProperty(ParametersEntry.prototype, "key", {
                get: function () {
                    return this._key;
                },
                set: function (value) {
                    this._key = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(ParametersEntry.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            ParametersEntry.prototype.toObject = function () {
                return {
                    key: this.key,
                    value: this.value ? this.value.toObject() : undefined
                };
            };
            ParametersEntry.prototype.toJSON = function () {
                return this.toObject();
            };
            return ParametersEntry;
        }());
        Context.ParametersEntry = ParametersEntry;
    })(exports.Context || (exports.Context = {}));
    var ListContextsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListContextsRequest value
         */
        function ListContextsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.pageToken = value.pageToken;
            ListContextsRequest.refineValues(this);
        }
        ListContextsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListContextsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListContextsRequest.fromBinary = function (bytes) {
            var instance = new ListContextsRequest();
            ListContextsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListContextsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.pageToken = instance.pageToken || '';
        };
        ListContextsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 3:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListContextsRequest.refineValues(instance);
        };
        ListContextsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.pageToken) {
                writer.writeString(3, instance.pageToken);
            }
        };
        Object.defineProperty(ListContextsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListContextsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListContextsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                pageToken: this.pageToken
            };
        };
        ListContextsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListContextsRequest;
    }());
    var ListContextsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListContextsResponse value
         */
        function ListContextsResponse(value) {
            value = value || {};
            this.contexts = (value.contexts || []).map(function (m) { return new exports.Context(m); });
            this.nextPageToken = value.nextPageToken;
            ListContextsResponse.refineValues(this);
        }
        ListContextsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListContextsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListContextsResponse.fromBinary = function (bytes) {
            var instance = new ListContextsResponse();
            ListContextsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListContextsResponse.refineValues = function (instance) {
            instance.contexts = instance.contexts || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListContextsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Context();
                        reader.readMessage(messageInitializer1, exports.Context.fromBinaryReader);
                        (instance.contexts = instance.contexts || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListContextsResponse.refineValues(instance);
        };
        ListContextsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.contexts && instance.contexts.length) {
                writer.writeRepeatedMessage(1, instance.contexts, exports.Context.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListContextsResponse.prototype, "contexts", {
            get: function () {
                return this._contexts;
            },
            set: function (value) {
                this._contexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListContextsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListContextsResponse.prototype.toObject = function () {
            return {
                contexts: (this.contexts || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListContextsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListContextsResponse;
    }());
    var GetContextRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetContextRequest value
         */
        function GetContextRequest(value) {
            value = value || {};
            this.name = value.name;
            GetContextRequest.refineValues(this);
        }
        GetContextRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetContextRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetContextRequest.fromBinary = function (bytes) {
            var instance = new GetContextRequest();
            GetContextRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetContextRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        GetContextRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetContextRequest.refineValues(instance);
        };
        GetContextRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(GetContextRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        GetContextRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        GetContextRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetContextRequest;
    }());
    var CreateContextRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateContextRequest value
         */
        function CreateContextRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.context = value.context ? new exports.Context(value.context) : undefined;
            CreateContextRequest.refineValues(this);
        }
        CreateContextRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateContextRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateContextRequest.fromBinary = function (bytes) {
            var instance = new CreateContextRequest();
            CreateContextRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateContextRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.context = instance.context || undefined;
        };
        CreateContextRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.context = new exports.Context();
                        reader.readMessage(instance.context, exports.Context.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateContextRequest.refineValues(instance);
        };
        CreateContextRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.context) {
                writer.writeMessage(2, instance.context, exports.Context.toBinaryWriter);
            }
        };
        Object.defineProperty(CreateContextRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateContextRequest.prototype, "context", {
            get: function () {
                return this._context;
            },
            set: function (value) {
                this._context = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateContextRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                context: this.context ? this.context.toObject() : undefined
            };
        };
        CreateContextRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateContextRequest;
    }());
    var UpdateContextRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateContextRequest value
         */
        function UpdateContextRequest(value) {
            value = value || {};
            this.context = value.context ? new exports.Context(value.context) : undefined;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            UpdateContextRequest.refineValues(this);
        }
        UpdateContextRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateContextRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateContextRequest.fromBinary = function (bytes) {
            var instance = new UpdateContextRequest();
            UpdateContextRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateContextRequest.refineValues = function (instance) {
            instance.context = instance.context || undefined;
            instance.updateMask = instance.updateMask || undefined;
        };
        UpdateContextRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.context = new exports.Context();
                        reader.readMessage(instance.context, exports.Context.fromBinaryReader);
                        break;
                    case 2:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateContextRequest.refineValues(instance);
        };
        UpdateContextRequest.toBinaryWriter = function (instance, writer) {
            if (instance.context) {
                writer.writeMessage(1, instance.context, exports.Context.toBinaryWriter);
            }
            if (instance.updateMask) {
                writer.writeMessage(2, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(UpdateContextRequest.prototype, "context", {
            get: function () {
                return this._context;
            },
            set: function (value) {
                this._context = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateContextRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateContextRequest.prototype.toObject = function () {
            return {
                context: this.context ? this.context.toObject() : undefined,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        UpdateContextRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateContextRequest;
    }());
    var DeleteContextRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteContextRequest value
         */
        function DeleteContextRequest(value) {
            value = value || {};
            this.name = value.name;
            DeleteContextRequest.refineValues(this);
        }
        DeleteContextRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteContextRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteContextRequest.fromBinary = function (bytes) {
            var instance = new DeleteContextRequest();
            DeleteContextRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteContextRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        DeleteContextRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteContextRequest.refineValues(instance);
        };
        DeleteContextRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(DeleteContextRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteContextRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        DeleteContextRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteContextRequest;
    }());
    var DeleteAllContextsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteAllContextsRequest value
         */
        function DeleteAllContextsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            DeleteAllContextsRequest.refineValues(this);
        }
        DeleteAllContextsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteAllContextsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteAllContextsRequest.fromBinary = function (bytes) {
            var instance = new DeleteAllContextsRequest();
            DeleteAllContextsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteAllContextsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        DeleteAllContextsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteAllContextsRequest.refineValues(instance);
        };
        DeleteAllContextsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
        };
        Object.defineProperty(DeleteAllContextsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteAllContextsRequest.prototype.toObject = function () {
            return {
                parent: this.parent
            };
        };
        DeleteAllContextsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteAllContextsRequest;
    }());

    exports.IntentView = void 0;
    (function (IntentView) {
        IntentView[IntentView["intentViewUnspecified"] = 0] = "intentViewUnspecified";
        IntentView[IntentView["intentViewFull"] = 1] = "intentViewFull";
        IntentView[IntentView["intentViewPartial"] = 2] = "intentViewPartial";
        IntentView[IntentView["intentViewShallow"] = 3] = "intentViewShallow";
    })(exports.IntentView || (exports.IntentView = {}));
    exports.IntentCategory = void 0;
    (function (IntentCategory) {
        IntentCategory[IntentCategory["allIntents"] = 0] = "allIntents";
        IntentCategory[IntentCategory["defaultIntents"] = 1] = "defaultIntents";
        IntentCategory[IntentCategory["userDefinedIntents"] = 2] = "userDefinedIntents";
    })(exports.IntentCategory || (exports.IntentCategory = {}));
    exports.Intent = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Intent value
         */
        function Intent(value) {
            value = value || {};
            this.name = value.name;
            this.displayName = value.displayName;
            this.webhookState = value.webhookState;
            this.priority = value.priority;
            this.isFallback = value.isFallback;
            this.mlDisabled = value.mlDisabled;
            this.inputContextNames = (value.inputContextNames || []).slice();
            this.events = (value.events || []).slice();
            this.trainingPhrases = (value.trainingPhrases || []).map(function (m) { return new Intent.TrainingPhrase(m); });
            this.action = value.action;
            this.outputContexts = (value.outputContexts || []).map(function (m) { return new exports.Context(m); });
            this.resetContexts = value.resetContexts;
            this.parameters = (value.parameters || []).map(function (m) { return new Intent.Parameter(m); });
            this.messages = (value.messages || []).map(function (m) { return new Intent.Message(m); });
            this.defaultResponsePlatforms = (value.defaultResponsePlatforms || []).slice();
            this.rootFollowupIntentName = value.rootFollowupIntentName;
            this.parentFollowupIntentName = value.parentFollowupIntentName;
            this.followupIntentInfo = (value.followupIntentInfo || []).map(function (m) { return new Intent.FollowupIntentInfo(m); });
            this.nextPageToken = value.nextPageToken;
            this.domainName = value.domainName;
            this.isStartOfDeviation = value.isStartOfDeviation;
            this.isEndOfDeviation = value.isEndOfDeviation;
            this.trainingPhraseCount = value.trainingPhraseCount;
            this.status = value.status;
            Intent.refineValues(this);
        }
        Intent.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Intent.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Intent.fromBinary = function (bytes) {
            var instance = new Intent();
            Intent.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Intent.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.displayName = instance.displayName || '';
            instance.webhookState = instance.webhookState || 0;
            instance.priority = instance.priority || 0;
            instance.isFallback = instance.isFallback || false;
            instance.mlDisabled = instance.mlDisabled || false;
            instance.inputContextNames = instance.inputContextNames || [];
            instance.events = instance.events || [];
            instance.trainingPhrases = instance.trainingPhrases || [];
            instance.action = instance.action || '';
            instance.outputContexts = instance.outputContexts || [];
            instance.resetContexts = instance.resetContexts || false;
            instance.parameters = instance.parameters || [];
            instance.messages = instance.messages || [];
            instance.defaultResponsePlatforms = instance.defaultResponsePlatforms || [];
            instance.rootFollowupIntentName = instance.rootFollowupIntentName || '';
            instance.parentFollowupIntentName = instance.parentFollowupIntentName || '';
            instance.followupIntentInfo = instance.followupIntentInfo || [];
            instance.nextPageToken = instance.nextPageToken || '';
            instance.domainName = instance.domainName || '';
            instance.isStartOfDeviation = instance.isStartOfDeviation || false;
            instance.isEndOfDeviation = instance.isEndOfDeviation || false;
            instance.trainingPhraseCount = instance.trainingPhraseCount || 0;
            instance.status = instance.status || 0;
        };
        Intent.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.displayName = reader.readString();
                        break;
                    case 6:
                        instance.webhookState = reader.readEnum();
                        break;
                    case 3:
                        instance.priority = reader.readInt32();
                        break;
                    case 4:
                        instance.isFallback = reader.readBool();
                        break;
                    case 19:
                        instance.mlDisabled = reader.readBool();
                        break;
                    case 7:
                        (instance.inputContextNames = instance.inputContextNames || []).push(reader.readString());
                        break;
                    case 8:
                        (instance.events = instance.events || []).push(reader.readString());
                        break;
                    case 9:
                        var messageInitializer9 = new Intent.TrainingPhrase();
                        reader.readMessage(messageInitializer9, Intent.TrainingPhrase.fromBinaryReader);
                        (instance.trainingPhrases = instance.trainingPhrases || []).push(messageInitializer9);
                        break;
                    case 10:
                        instance.action = reader.readString();
                        break;
                    case 11:
                        var messageInitializer11 = new exports.Context();
                        reader.readMessage(messageInitializer11, exports.Context.fromBinaryReader);
                        (instance.outputContexts = instance.outputContexts || []).push(messageInitializer11);
                        break;
                    case 12:
                        instance.resetContexts = reader.readBool();
                        break;
                    case 13:
                        var messageInitializer13 = new Intent.Parameter();
                        reader.readMessage(messageInitializer13, Intent.Parameter.fromBinaryReader);
                        (instance.parameters = instance.parameters || []).push(messageInitializer13);
                        break;
                    case 14:
                        var messageInitializer14 = new Intent.Message();
                        reader.readMessage(messageInitializer14, Intent.Message.fromBinaryReader);
                        (instance.messages = instance.messages || []).push(messageInitializer14);
                        break;
                    case 15:
                        (instance.defaultResponsePlatforms =
                            instance.defaultResponsePlatforms || []).push(reader.readEnum());
                        break;
                    case 16:
                        instance.rootFollowupIntentName = reader.readString();
                        break;
                    case 17:
                        instance.parentFollowupIntentName = reader.readString();
                        break;
                    case 18:
                        var messageInitializer18 = new Intent.FollowupIntentInfo();
                        reader.readMessage(messageInitializer18, Intent.FollowupIntentInfo.fromBinaryReader);
                        (instance.followupIntentInfo =
                            instance.followupIntentInfo || []).push(messageInitializer18);
                        break;
                    case 30:
                        instance.nextPageToken = reader.readString();
                        break;
                    case 31:
                        instance.domainName = reader.readString();
                        break;
                    case 32:
                        instance.isStartOfDeviation = reader.readBool();
                        break;
                    case 33:
                        instance.isEndOfDeviation = reader.readBool();
                        break;
                    case 34:
                        instance.trainingPhraseCount = reader.readInt32();
                        break;
                    case 35:
                        instance.status = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Intent.refineValues(instance);
        };
        Intent.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.displayName) {
                writer.writeString(2, instance.displayName);
            }
            if (instance.webhookState) {
                writer.writeEnum(6, instance.webhookState);
            }
            if (instance.priority) {
                writer.writeInt32(3, instance.priority);
            }
            if (instance.isFallback) {
                writer.writeBool(4, instance.isFallback);
            }
            if (instance.mlDisabled) {
                writer.writeBool(19, instance.mlDisabled);
            }
            if (instance.inputContextNames && instance.inputContextNames.length) {
                writer.writeRepeatedString(7, instance.inputContextNames);
            }
            if (instance.events && instance.events.length) {
                writer.writeRepeatedString(8, instance.events);
            }
            if (instance.trainingPhrases && instance.trainingPhrases.length) {
                writer.writeRepeatedMessage(9, instance.trainingPhrases, Intent.TrainingPhrase.toBinaryWriter);
            }
            if (instance.action) {
                writer.writeString(10, instance.action);
            }
            if (instance.outputContexts && instance.outputContexts.length) {
                writer.writeRepeatedMessage(11, instance.outputContexts, exports.Context.toBinaryWriter);
            }
            if (instance.resetContexts) {
                writer.writeBool(12, instance.resetContexts);
            }
            if (instance.parameters && instance.parameters.length) {
                writer.writeRepeatedMessage(13, instance.parameters, Intent.Parameter.toBinaryWriter);
            }
            if (instance.messages && instance.messages.length) {
                writer.writeRepeatedMessage(14, instance.messages, Intent.Message.toBinaryWriter);
            }
            if (instance.defaultResponsePlatforms &&
                instance.defaultResponsePlatforms.length) {
                writer.writeRepeatedEnum(15, instance.defaultResponsePlatforms);
            }
            if (instance.rootFollowupIntentName) {
                writer.writeString(16, instance.rootFollowupIntentName);
            }
            if (instance.parentFollowupIntentName) {
                writer.writeString(17, instance.parentFollowupIntentName);
            }
            if (instance.followupIntentInfo && instance.followupIntentInfo.length) {
                writer.writeRepeatedMessage(18, instance.followupIntentInfo, Intent.FollowupIntentInfo.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(30, instance.nextPageToken);
            }
            if (instance.domainName) {
                writer.writeString(31, instance.domainName);
            }
            if (instance.isStartOfDeviation) {
                writer.writeBool(32, instance.isStartOfDeviation);
            }
            if (instance.isEndOfDeviation) {
                writer.writeBool(33, instance.isEndOfDeviation);
            }
            if (instance.trainingPhraseCount) {
                writer.writeInt32(34, instance.trainingPhraseCount);
            }
            if (instance.status) {
                writer.writeEnum(35, instance.status);
            }
        };
        Object.defineProperty(Intent.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "displayName", {
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                this._displayName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "webhookState", {
            get: function () {
                return this._webhookState;
            },
            set: function (value) {
                this._webhookState = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "priority", {
            get: function () {
                return this._priority;
            },
            set: function (value) {
                this._priority = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "isFallback", {
            get: function () {
                return this._isFallback;
            },
            set: function (value) {
                this._isFallback = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "mlDisabled", {
            get: function () {
                return this._mlDisabled;
            },
            set: function (value) {
                this._mlDisabled = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "inputContextNames", {
            get: function () {
                return this._inputContextNames;
            },
            set: function (value) {
                this._inputContextNames = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "events", {
            get: function () {
                return this._events;
            },
            set: function (value) {
                this._events = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "trainingPhrases", {
            get: function () {
                return this._trainingPhrases;
            },
            set: function (value) {
                this._trainingPhrases = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "action", {
            get: function () {
                return this._action;
            },
            set: function (value) {
                this._action = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "outputContexts", {
            get: function () {
                return this._outputContexts;
            },
            set: function (value) {
                this._outputContexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "resetContexts", {
            get: function () {
                return this._resetContexts;
            },
            set: function (value) {
                this._resetContexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "parameters", {
            get: function () {
                return this._parameters;
            },
            set: function (value) {
                this._parameters = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "messages", {
            get: function () {
                return this._messages;
            },
            set: function (value) {
                this._messages = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "defaultResponsePlatforms", {
            get: function () {
                return this._defaultResponsePlatforms;
            },
            set: function (value) {
                this._defaultResponsePlatforms = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "rootFollowupIntentName", {
            get: function () {
                return this._rootFollowupIntentName;
            },
            set: function (value) {
                this._rootFollowupIntentName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "parentFollowupIntentName", {
            get: function () {
                return this._parentFollowupIntentName;
            },
            set: function (value) {
                this._parentFollowupIntentName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "followupIntentInfo", {
            get: function () {
                return this._followupIntentInfo;
            },
            set: function (value) {
                this._followupIntentInfo = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "domainName", {
            get: function () {
                return this._domainName;
            },
            set: function (value) {
                this._domainName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "isStartOfDeviation", {
            get: function () {
                return this._isStartOfDeviation;
            },
            set: function (value) {
                this._isStartOfDeviation = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "isEndOfDeviation", {
            get: function () {
                return this._isEndOfDeviation;
            },
            set: function (value) {
                this._isEndOfDeviation = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "trainingPhraseCount", {
            get: function () {
                return this._trainingPhraseCount;
            },
            set: function (value) {
                this._trainingPhraseCount = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Intent.prototype, "status", {
            get: function () {
                return this._status;
            },
            set: function (value) {
                this._status = value;
            },
            enumerable: false,
            configurable: true
        });
        Intent.prototype.toObject = function () {
            return {
                name: this.name,
                displayName: this.displayName,
                webhookState: this.webhookState,
                priority: this.priority,
                isFallback: this.isFallback,
                mlDisabled: this.mlDisabled,
                inputContextNames: (this.inputContextNames || []).slice(),
                events: (this.events || []).slice(),
                trainingPhrases: (this.trainingPhrases || []).map(function (m) { return m.toObject(); }),
                action: this.action,
                outputContexts: (this.outputContexts || []).map(function (m) { return m.toObject(); }),
                resetContexts: this.resetContexts,
                parameters: (this.parameters || []).map(function (m) { return m.toObject(); }),
                messages: (this.messages || []).map(function (m) { return m.toObject(); }),
                defaultResponsePlatforms: (this.defaultResponsePlatforms || []).slice(),
                rootFollowupIntentName: this.rootFollowupIntentName,
                parentFollowupIntentName: this.parentFollowupIntentName,
                followupIntentInfo: (this.followupIntentInfo || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken,
                domainName: this.domainName,
                isStartOfDeviation: this.isStartOfDeviation,
                isEndOfDeviation: this.isEndOfDeviation,
                trainingPhraseCount: this.trainingPhraseCount,
                status: this.status
            };
        };
        Intent.prototype.toJSON = function () {
            return this.toObject();
        };
        return Intent;
    }());
    (function (Intent) {
        var IntentStatus;
        (function (IntentStatus) {
            IntentStatus[IntentStatus["active"] = 0] = "active";
            IntentStatus[IntentStatus["inactive"] = 1] = "inactive";
        })(IntentStatus = Intent.IntentStatus || (Intent.IntentStatus = {}));
        var WebhookState;
        (function (WebhookState) {
            WebhookState[WebhookState["webhookStateUnspecified"] = 0] = "webhookStateUnspecified";
            WebhookState[WebhookState["webhookStateEnabled"] = 1] = "webhookStateEnabled";
            WebhookState[WebhookState["webhookStateEnabledForSlotFilling"] = 2] = "webhookStateEnabledForSlotFilling";
        })(WebhookState = Intent.WebhookState || (Intent.WebhookState = {}));
        var TrainingPhrase = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param TrainingPhrase value
             */
            function TrainingPhrase(value) {
                value = value || {};
                this.name = value.name;
                this.type = value.type;
                this.text = value.text;
                this.entities = (value.entities || []).map(function (m) { return new Intent.TrainingPhrase.Entity(m); });
                this.timesAddedCount = value.timesAddedCount;
                TrainingPhrase.refineValues(this);
            }
            TrainingPhrase.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                TrainingPhrase.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            TrainingPhrase.fromBinary = function (bytes) {
                var instance = new TrainingPhrase();
                TrainingPhrase.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            TrainingPhrase.refineValues = function (instance) {
                instance.name = instance.name || '';
                instance.type = instance.type || 0;
                instance.text = instance.text || '';
                instance.entities = instance.entities || [];
                instance.timesAddedCount = instance.timesAddedCount || 0;
            };
            TrainingPhrase.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.name = reader.readString();
                            break;
                        case 2:
                            instance.type = reader.readEnum();
                            break;
                        case 3:
                            instance.text = reader.readString();
                            break;
                        case 4:
                            var messageInitializer4 = new Intent.TrainingPhrase.Entity();
                            reader.readMessage(messageInitializer4, Intent.TrainingPhrase.Entity.fromBinaryReader);
                            (instance.entities = instance.entities || []).push(messageInitializer4);
                            break;
                        case 5:
                            instance.timesAddedCount = reader.readInt32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                TrainingPhrase.refineValues(instance);
            };
            TrainingPhrase.toBinaryWriter = function (instance, writer) {
                if (instance.name) {
                    writer.writeString(1, instance.name);
                }
                if (instance.type) {
                    writer.writeEnum(2, instance.type);
                }
                if (instance.text) {
                    writer.writeString(3, instance.text);
                }
                if (instance.entities && instance.entities.length) {
                    writer.writeRepeatedMessage(4, instance.entities, Intent.TrainingPhrase.Entity.toBinaryWriter);
                }
                if (instance.timesAddedCount) {
                    writer.writeInt32(5, instance.timesAddedCount);
                }
            };
            Object.defineProperty(TrainingPhrase.prototype, "name", {
                get: function () {
                    return this._name;
                },
                set: function (value) {
                    this._name = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TrainingPhrase.prototype, "type", {
                get: function () {
                    return this._type;
                },
                set: function (value) {
                    this._type = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TrainingPhrase.prototype, "text", {
                get: function () {
                    return this._text;
                },
                set: function (value) {
                    this._text = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TrainingPhrase.prototype, "entities", {
                get: function () {
                    return this._entities;
                },
                set: function (value) {
                    this._entities = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TrainingPhrase.prototype, "timesAddedCount", {
                get: function () {
                    return this._timesAddedCount;
                },
                set: function (value) {
                    this._timesAddedCount = value;
                },
                enumerable: false,
                configurable: true
            });
            TrainingPhrase.prototype.toObject = function () {
                return {
                    name: this.name,
                    type: this.type,
                    text: this.text,
                    entities: (this.entities || []).map(function (m) { return m.toObject(); }),
                    timesAddedCount: this.timesAddedCount
                };
            };
            TrainingPhrase.prototype.toJSON = function () {
                return this.toObject();
            };
            return TrainingPhrase;
        }());
        Intent.TrainingPhrase = TrainingPhrase;
        (function (TrainingPhrase) {
            var Type;
            (function (Type) {
                Type[Type["typeUnspecified"] = 0] = "typeUnspecified";
                Type[Type["example"] = 1] = "example";
                Type[Type["template"] = 2] = "template";
            })(Type = TrainingPhrase.Type || (TrainingPhrase.Type = {}));
            var Entity = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Entity value
                 */
                function Entity(value) {
                    value = value || {};
                    this.entityTypeName = value.entityTypeName;
                    this.entityTypeDisplayName = value.entityTypeDisplayName;
                    this.entityValueName = value.entityValueName;
                    this.entityValueDisplayName = value.entityValueDisplayName;
                    this.start = value.start;
                    this.end = value.end;
                    this.parameterName = value.parameterName;
                    this.parameterDisplayName = value.parameterDisplayName;
                    Entity.refineValues(this);
                }
                Entity.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Entity.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Entity.fromBinary = function (bytes) {
                    var instance = new Entity();
                    Entity.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Entity.refineValues = function (instance) {
                    instance.entityTypeName = instance.entityTypeName || '';
                    instance.entityTypeDisplayName = instance.entityTypeDisplayName || '';
                    instance.entityValueName = instance.entityValueName || '';
                    instance.entityValueDisplayName = instance.entityValueDisplayName || '';
                    instance.start = instance.start || 0;
                    instance.end = instance.end || 0;
                    instance.parameterName = instance.parameterName || '';
                    instance.parameterDisplayName = instance.parameterDisplayName || '';
                };
                Entity.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.entityTypeName = reader.readString();
                                break;
                            case 3:
                                instance.entityTypeDisplayName = reader.readString();
                                break;
                            case 4:
                                instance.entityValueName = reader.readString();
                                break;
                            case 5:
                                instance.entityValueDisplayName = reader.readString();
                                break;
                            case 6:
                                instance.start = reader.readInt32();
                                break;
                            case 7:
                                instance.end = reader.readInt32();
                                break;
                            case 8:
                                instance.parameterName = reader.readString();
                                break;
                            case 9:
                                instance.parameterDisplayName = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Entity.refineValues(instance);
                };
                Entity.toBinaryWriter = function (instance, writer) {
                    if (instance.entityTypeName) {
                        writer.writeString(1, instance.entityTypeName);
                    }
                    if (instance.entityTypeDisplayName) {
                        writer.writeString(3, instance.entityTypeDisplayName);
                    }
                    if (instance.entityValueName) {
                        writer.writeString(4, instance.entityValueName);
                    }
                    if (instance.entityValueDisplayName) {
                        writer.writeString(5, instance.entityValueDisplayName);
                    }
                    if (instance.start) {
                        writer.writeInt32(6, instance.start);
                    }
                    if (instance.end) {
                        writer.writeInt32(7, instance.end);
                    }
                    if (instance.parameterName) {
                        writer.writeString(8, instance.parameterName);
                    }
                    if (instance.parameterDisplayName) {
                        writer.writeString(9, instance.parameterDisplayName);
                    }
                };
                Object.defineProperty(Entity.prototype, "entityTypeName", {
                    get: function () {
                        return this._entityTypeName;
                    },
                    set: function (value) {
                        this._entityTypeName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "entityTypeDisplayName", {
                    get: function () {
                        return this._entityTypeDisplayName;
                    },
                    set: function (value) {
                        this._entityTypeDisplayName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "entityValueName", {
                    get: function () {
                        return this._entityValueName;
                    },
                    set: function (value) {
                        this._entityValueName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "entityValueDisplayName", {
                    get: function () {
                        return this._entityValueDisplayName;
                    },
                    set: function (value) {
                        this._entityValueDisplayName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "start", {
                    get: function () {
                        return this._start;
                    },
                    set: function (value) {
                        this._start = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "end", {
                    get: function () {
                        return this._end;
                    },
                    set: function (value) {
                        this._end = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "parameterName", {
                    get: function () {
                        return this._parameterName;
                    },
                    set: function (value) {
                        this._parameterName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Entity.prototype, "parameterDisplayName", {
                    get: function () {
                        return this._parameterDisplayName;
                    },
                    set: function (value) {
                        this._parameterDisplayName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Entity.prototype.toObject = function () {
                    return {
                        entityTypeName: this.entityTypeName,
                        entityTypeDisplayName: this.entityTypeDisplayName,
                        entityValueName: this.entityValueName,
                        entityValueDisplayName: this.entityValueDisplayName,
                        start: this.start,
                        end: this.end,
                        parameterName: this.parameterName,
                        parameterDisplayName: this.parameterDisplayName
                    };
                };
                Entity.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Entity;
            }());
            TrainingPhrase.Entity = Entity;
        })(TrainingPhrase = Intent.TrainingPhrase || (Intent.TrainingPhrase = {}));
        var Parameter = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Parameter value
             */
            function Parameter(value) {
                value = value || {};
                this.name = value.name;
                this.displayName = value.displayName;
                this.value = value.value;
                this.defaultValue = value.defaultValue;
                this.entityTypeName = value.entityTypeName;
                this.entityTypeDisplayName = value.entityTypeDisplayName;
                this.mandatory = value.mandatory;
                this.prompts = (value.prompts || []).slice();
                this.isList = value.isList;
                Parameter.refineValues(this);
            }
            Parameter.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Parameter.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Parameter.fromBinary = function (bytes) {
                var instance = new Parameter();
                Parameter.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Parameter.refineValues = function (instance) {
                instance.name = instance.name || '';
                instance.displayName = instance.displayName || '';
                instance.value = instance.value || '';
                instance.defaultValue = instance.defaultValue || '';
                instance.entityTypeName = instance.entityTypeName || '';
                instance.entityTypeDisplayName = instance.entityTypeDisplayName || '';
                instance.mandatory = instance.mandatory || false;
                instance.prompts = instance.prompts || [];
                instance.isList = instance.isList || false;
            };
            Parameter.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.name = reader.readString();
                            break;
                        case 2:
                            instance.displayName = reader.readString();
                            break;
                        case 3:
                            instance.value = reader.readString();
                            break;
                        case 4:
                            instance.defaultValue = reader.readString();
                            break;
                        case 5:
                            instance.entityTypeName = reader.readString();
                            break;
                        case 6:
                            instance.entityTypeDisplayName = reader.readString();
                            break;
                        case 7:
                            instance.mandatory = reader.readBool();
                            break;
                        case 8:
                            (instance.prompts = instance.prompts || []).push(reader.readString());
                            break;
                        case 9:
                            instance.isList = reader.readBool();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Parameter.refineValues(instance);
            };
            Parameter.toBinaryWriter = function (instance, writer) {
                if (instance.name) {
                    writer.writeString(1, instance.name);
                }
                if (instance.displayName) {
                    writer.writeString(2, instance.displayName);
                }
                if (instance.value) {
                    writer.writeString(3, instance.value);
                }
                if (instance.defaultValue) {
                    writer.writeString(4, instance.defaultValue);
                }
                if (instance.entityTypeName) {
                    writer.writeString(5, instance.entityTypeName);
                }
                if (instance.entityTypeDisplayName) {
                    writer.writeString(6, instance.entityTypeDisplayName);
                }
                if (instance.mandatory) {
                    writer.writeBool(7, instance.mandatory);
                }
                if (instance.prompts && instance.prompts.length) {
                    writer.writeRepeatedString(8, instance.prompts);
                }
                if (instance.isList) {
                    writer.writeBool(9, instance.isList);
                }
            };
            Object.defineProperty(Parameter.prototype, "name", {
                get: function () {
                    return this._name;
                },
                set: function (value) {
                    this._name = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "displayName", {
                get: function () {
                    return this._displayName;
                },
                set: function (value) {
                    this._displayName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "defaultValue", {
                get: function () {
                    return this._defaultValue;
                },
                set: function (value) {
                    this._defaultValue = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "entityTypeName", {
                get: function () {
                    return this._entityTypeName;
                },
                set: function (value) {
                    this._entityTypeName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "entityTypeDisplayName", {
                get: function () {
                    return this._entityTypeDisplayName;
                },
                set: function (value) {
                    this._entityTypeDisplayName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "mandatory", {
                get: function () {
                    return this._mandatory;
                },
                set: function (value) {
                    this._mandatory = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "prompts", {
                get: function () {
                    return this._prompts;
                },
                set: function (value) {
                    this._prompts = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Parameter.prototype, "isList", {
                get: function () {
                    return this._isList;
                },
                set: function (value) {
                    this._isList = value;
                },
                enumerable: false,
                configurable: true
            });
            Parameter.prototype.toObject = function () {
                return {
                    name: this.name,
                    displayName: this.displayName,
                    value: this.value,
                    defaultValue: this.defaultValue,
                    entityTypeName: this.entityTypeName,
                    entityTypeDisplayName: this.entityTypeDisplayName,
                    mandatory: this.mandatory,
                    prompts: (this.prompts || []).slice(),
                    isList: this.isList
                };
            };
            Parameter.prototype.toJSON = function () {
                return this.toObject();
            };
            return Parameter;
        }());
        Intent.Parameter = Parameter;
        var Message = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Message value
             */
            function Message(value) {
                this._message = Message.MessageCase.none;
                value = value || {};
                this.text = value.text ? new Intent.Message.Text(value.text) : undefined;
                this.image = value.image
                    ? new Intent.Message.Image(value.image)
                    : undefined;
                this.quickReplies = value.quickReplies
                    ? new Intent.Message.QuickReplies(value.quickReplies)
                    : undefined;
                this.card = value.card ? new Intent.Message.Card(value.card) : undefined;
                this.payload = value.payload
                    ? new exports.Struct(value.payload)
                    : undefined;
                this.simpleResponses = value.simpleResponses
                    ? new Intent.Message.SimpleResponses(value.simpleResponses)
                    : undefined;
                this.basicCard = value.basicCard
                    ? new Intent.Message.BasicCard(value.basicCard)
                    : undefined;
                this.suggestions = value.suggestions
                    ? new Intent.Message.Suggestions(value.suggestions)
                    : undefined;
                this.linkOutSuggestion = value.linkOutSuggestion
                    ? new Intent.Message.LinkOutSuggestion(value.linkOutSuggestion)
                    : undefined;
                this.listSelect = value.listSelect
                    ? new Intent.Message.ListSelect(value.listSelect)
                    : undefined;
                this.carouselSelect = value.carouselSelect
                    ? new Intent.Message.CarouselSelect(value.carouselSelect)
                    : undefined;
                this.htmlText = value.htmlText
                    ? new Intent.Message.HTMLText(value.htmlText)
                    : undefined;
                this.video = value.video
                    ? new Intent.Message.Video(value.video)
                    : undefined;
                this.audio = value.audio
                    ? new Intent.Message.Audio(value.audio)
                    : undefined;
                this.platform = value.platform;
                Message.refineValues(this);
            }
            Message.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Message.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Message.fromBinary = function (bytes) {
                var instance = new Message();
                Message.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Message.refineValues = function (instance) {
                instance.platform = instance.platform || 0;
            };
            Message.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.text = new Intent.Message.Text();
                            reader.readMessage(instance.text, Intent.Message.Text.fromBinaryReader);
                            break;
                        case 2:
                            instance.image = new Intent.Message.Image();
                            reader.readMessage(instance.image, Intent.Message.Image.fromBinaryReader);
                            break;
                        case 3:
                            instance.quickReplies = new Intent.Message.QuickReplies();
                            reader.readMessage(instance.quickReplies, Intent.Message.QuickReplies.fromBinaryReader);
                            break;
                        case 4:
                            instance.card = new Intent.Message.Card();
                            reader.readMessage(instance.card, Intent.Message.Card.fromBinaryReader);
                            break;
                        case 5:
                            instance.payload = new exports.Struct();
                            reader.readMessage(instance.payload, exports.Struct.fromBinaryReader);
                            break;
                        case 7:
                            instance.simpleResponses = new Intent.Message.SimpleResponses();
                            reader.readMessage(instance.simpleResponses, Intent.Message.SimpleResponses.fromBinaryReader);
                            break;
                        case 8:
                            instance.basicCard = new Intent.Message.BasicCard();
                            reader.readMessage(instance.basicCard, Intent.Message.BasicCard.fromBinaryReader);
                            break;
                        case 9:
                            instance.suggestions = new Intent.Message.Suggestions();
                            reader.readMessage(instance.suggestions, Intent.Message.Suggestions.fromBinaryReader);
                            break;
                        case 10:
                            instance.linkOutSuggestion = new Intent.Message.LinkOutSuggestion();
                            reader.readMessage(instance.linkOutSuggestion, Intent.Message.LinkOutSuggestion.fromBinaryReader);
                            break;
                        case 11:
                            instance.listSelect = new Intent.Message.ListSelect();
                            reader.readMessage(instance.listSelect, Intent.Message.ListSelect.fromBinaryReader);
                            break;
                        case 12:
                            instance.carouselSelect = new Intent.Message.CarouselSelect();
                            reader.readMessage(instance.carouselSelect, Intent.Message.CarouselSelect.fromBinaryReader);
                            break;
                        case 13:
                            instance.htmlText = new Intent.Message.HTMLText();
                            reader.readMessage(instance.htmlText, Intent.Message.HTMLText.fromBinaryReader);
                            break;
                        case 14:
                            instance.video = new Intent.Message.Video();
                            reader.readMessage(instance.video, Intent.Message.Video.fromBinaryReader);
                            break;
                        case 15:
                            instance.audio = new Intent.Message.Audio();
                            reader.readMessage(instance.audio, Intent.Message.Audio.fromBinaryReader);
                            break;
                        case 6:
                            instance.platform = reader.readEnum();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Message.refineValues(instance);
            };
            Message.toBinaryWriter = function (instance, writer) {
                if (instance.text) {
                    writer.writeMessage(1, instance.text, Intent.Message.Text.toBinaryWriter);
                }
                if (instance.image) {
                    writer.writeMessage(2, instance.image, Intent.Message.Image.toBinaryWriter);
                }
                if (instance.quickReplies) {
                    writer.writeMessage(3, instance.quickReplies, Intent.Message.QuickReplies.toBinaryWriter);
                }
                if (instance.card) {
                    writer.writeMessage(4, instance.card, Intent.Message.Card.toBinaryWriter);
                }
                if (instance.payload) {
                    writer.writeMessage(5, instance.payload, exports.Struct.toBinaryWriter);
                }
                if (instance.simpleResponses) {
                    writer.writeMessage(7, instance.simpleResponses, Intent.Message.SimpleResponses.toBinaryWriter);
                }
                if (instance.basicCard) {
                    writer.writeMessage(8, instance.basicCard, Intent.Message.BasicCard.toBinaryWriter);
                }
                if (instance.suggestions) {
                    writer.writeMessage(9, instance.suggestions, Intent.Message.Suggestions.toBinaryWriter);
                }
                if (instance.linkOutSuggestion) {
                    writer.writeMessage(10, instance.linkOutSuggestion, Intent.Message.LinkOutSuggestion.toBinaryWriter);
                }
                if (instance.listSelect) {
                    writer.writeMessage(11, instance.listSelect, Intent.Message.ListSelect.toBinaryWriter);
                }
                if (instance.carouselSelect) {
                    writer.writeMessage(12, instance.carouselSelect, Intent.Message.CarouselSelect.toBinaryWriter);
                }
                if (instance.htmlText) {
                    writer.writeMessage(13, instance.htmlText, Intent.Message.HTMLText.toBinaryWriter);
                }
                if (instance.video) {
                    writer.writeMessage(14, instance.video, Intent.Message.Video.toBinaryWriter);
                }
                if (instance.audio) {
                    writer.writeMessage(15, instance.audio, Intent.Message.Audio.toBinaryWriter);
                }
                if (instance.platform) {
                    writer.writeEnum(6, instance.platform);
                }
            };
            Object.defineProperty(Message.prototype, "text", {
                get: function () {
                    return this._text;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.text;
                    }
                    this._text = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "image", {
                get: function () {
                    return this._image;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.image;
                    }
                    this._image = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "quickReplies", {
                get: function () {
                    return this._quickReplies;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.quickReplies;
                    }
                    this._quickReplies = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "card", {
                get: function () {
                    return this._card;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.card;
                    }
                    this._card = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "payload", {
                get: function () {
                    return this._payload;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.payload;
                    }
                    this._payload = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "simpleResponses", {
                get: function () {
                    return this._simpleResponses;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.simpleResponses;
                    }
                    this._simpleResponses = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "basicCard", {
                get: function () {
                    return this._basicCard;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.basicCard;
                    }
                    this._basicCard = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "suggestions", {
                get: function () {
                    return this._suggestions;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.suggestions;
                    }
                    this._suggestions = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "linkOutSuggestion", {
                get: function () {
                    return this._linkOutSuggestion;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._listSelect = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.linkOutSuggestion;
                    }
                    this._linkOutSuggestion = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "listSelect", {
                get: function () {
                    return this._listSelect;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._carouselSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.listSelect;
                    }
                    this._listSelect = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "carouselSelect", {
                get: function () {
                    return this._carouselSelect;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._htmlText = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.carouselSelect;
                    }
                    this._carouselSelect = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "htmlText", {
                get: function () {
                    return this._htmlText;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._video = this._audio = undefined;
                        this._message = Message.MessageCase.htmlText;
                    }
                    this._htmlText = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "video", {
                get: function () {
                    return this._video;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._audio = undefined;
                        this._message = Message.MessageCase.video;
                    }
                    this._video = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "audio", {
                get: function () {
                    return this._audio;
                },
                set: function (value) {
                    if (value !== undefined && value !== null) {
                        this._text = this._image = this._quickReplies = this._card = this._payload = this._simpleResponses = this._basicCard = this._suggestions = this._linkOutSuggestion = this._listSelect = this._carouselSelect = this._htmlText = this._video = undefined;
                        this._message = Message.MessageCase.audio;
                    }
                    this._audio = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "platform", {
                get: function () {
                    return this._platform;
                },
                set: function (value) {
                    this._platform = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Message.prototype, "message", {
                get: function () {
                    return this._message;
                },
                enumerable: false,
                configurable: true
            });
            Message.prototype.toObject = function () {
                return {
                    text: this.text ? this.text.toObject() : undefined,
                    image: this.image ? this.image.toObject() : undefined,
                    quickReplies: this.quickReplies
                        ? this.quickReplies.toObject()
                        : undefined,
                    card: this.card ? this.card.toObject() : undefined,
                    payload: this.payload ? this.payload.toObject() : undefined,
                    simpleResponses: this.simpleResponses
                        ? this.simpleResponses.toObject()
                        : undefined,
                    basicCard: this.basicCard ? this.basicCard.toObject() : undefined,
                    suggestions: this.suggestions ? this.suggestions.toObject() : undefined,
                    linkOutSuggestion: this.linkOutSuggestion
                        ? this.linkOutSuggestion.toObject()
                        : undefined,
                    listSelect: this.listSelect ? this.listSelect.toObject() : undefined,
                    carouselSelect: this.carouselSelect
                        ? this.carouselSelect.toObject()
                        : undefined,
                    htmlText: this.htmlText ? this.htmlText.toObject() : undefined,
                    video: this.video ? this.video.toObject() : undefined,
                    audio: this.audio ? this.audio.toObject() : undefined,
                    platform: this.platform
                };
            };
            Message.prototype.toJSON = function () {
                return this.toObject();
            };
            return Message;
        }());
        Intent.Message = Message;
        (function (Message) {
            var MessageCase;
            (function (MessageCase) {
                MessageCase[MessageCase["none"] = 0] = "none";
                MessageCase[MessageCase["text"] = 1] = "text";
                MessageCase[MessageCase["image"] = 2] = "image";
                MessageCase[MessageCase["quickReplies"] = 3] = "quickReplies";
                MessageCase[MessageCase["card"] = 4] = "card";
                MessageCase[MessageCase["payload"] = 5] = "payload";
                MessageCase[MessageCase["simpleResponses"] = 6] = "simpleResponses";
                MessageCase[MessageCase["basicCard"] = 7] = "basicCard";
                MessageCase[MessageCase["suggestions"] = 8] = "suggestions";
                MessageCase[MessageCase["linkOutSuggestion"] = 9] = "linkOutSuggestion";
                MessageCase[MessageCase["listSelect"] = 10] = "listSelect";
                MessageCase[MessageCase["carouselSelect"] = 11] = "carouselSelect";
                MessageCase[MessageCase["htmlText"] = 12] = "htmlText";
                MessageCase[MessageCase["video"] = 13] = "video";
                MessageCase[MessageCase["audio"] = 14] = "audio";
            })(MessageCase = Message.MessageCase || (Message.MessageCase = {}));
            var Platform;
            (function (Platform) {
                Platform[Platform["platformUnspecified"] = 0] = "platformUnspecified";
                Platform[Platform["facebook"] = 1] = "facebook";
                Platform[Platform["slack"] = 2] = "slack";
                Platform[Platform["telegram"] = 3] = "telegram";
                Platform[Platform["kik"] = 4] = "kik";
                Platform[Platform["skype"] = 5] = "skype";
                Platform[Platform["line"] = 6] = "line";
                Platform[Platform["viber"] = 7] = "viber";
                Platform[Platform["actionsOnGoogle"] = 8] = "actionsOnGoogle";
            })(Platform = Message.Platform || (Message.Platform = {}));
            var Text = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Text value
                 */
                function Text(value) {
                    value = value || {};
                    this.text = (value.text || []).slice();
                    Text.refineValues(this);
                }
                Text.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Text.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Text.fromBinary = function (bytes) {
                    var instance = new Text();
                    Text.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Text.refineValues = function (instance) {
                    instance.text = instance.text || [];
                };
                Text.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                (instance.text = instance.text || []).push(reader.readString());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Text.refineValues(instance);
                };
                Text.toBinaryWriter = function (instance, writer) {
                    if (instance.text && instance.text.length) {
                        writer.writeRepeatedString(1, instance.text);
                    }
                };
                Object.defineProperty(Text.prototype, "text", {
                    get: function () {
                        return this._text;
                    },
                    set: function (value) {
                        this._text = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Text.prototype.toObject = function () {
                    return {
                        text: (this.text || []).slice()
                    };
                };
                Text.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Text;
            }());
            Message.Text = Text;
            var Image = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Image value
                 */
                function Image(value) {
                    value = value || {};
                    this.imageUri = value.imageUri;
                    this.accessibilityText = value.accessibilityText;
                    Image.refineValues(this);
                }
                Image.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Image.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Image.fromBinary = function (bytes) {
                    var instance = new Image();
                    Image.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Image.refineValues = function (instance) {
                    instance.imageUri = instance.imageUri || '';
                    instance.accessibilityText = instance.accessibilityText || '';
                };
                Image.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.imageUri = reader.readString();
                                break;
                            case 2:
                                instance.accessibilityText = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Image.refineValues(instance);
                };
                Image.toBinaryWriter = function (instance, writer) {
                    if (instance.imageUri) {
                        writer.writeString(1, instance.imageUri);
                    }
                    if (instance.accessibilityText) {
                        writer.writeString(2, instance.accessibilityText);
                    }
                };
                Object.defineProperty(Image.prototype, "imageUri", {
                    get: function () {
                        return this._imageUri;
                    },
                    set: function (value) {
                        this._imageUri = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Image.prototype, "accessibilityText", {
                    get: function () {
                        return this._accessibilityText;
                    },
                    set: function (value) {
                        this._accessibilityText = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Image.prototype.toObject = function () {
                    return {
                        imageUri: this.imageUri,
                        accessibilityText: this.accessibilityText
                    };
                };
                Image.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Image;
            }());
            Message.Image = Image;
            var QuickReplies = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param QuickReplies value
                 */
                function QuickReplies(value) {
                    value = value || {};
                    this.title = value.title;
                    this.quickReplies = (value.quickReplies || []).slice();
                    QuickReplies.refineValues(this);
                }
                QuickReplies.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    QuickReplies.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                QuickReplies.fromBinary = function (bytes) {
                    var instance = new QuickReplies();
                    QuickReplies.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                QuickReplies.refineValues = function (instance) {
                    instance.title = instance.title || '';
                    instance.quickReplies = instance.quickReplies || [];
                };
                QuickReplies.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.title = reader.readString();
                                break;
                            case 2:
                                (instance.quickReplies = instance.quickReplies || []).push(reader.readString());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    QuickReplies.refineValues(instance);
                };
                QuickReplies.toBinaryWriter = function (instance, writer) {
                    if (instance.title) {
                        writer.writeString(1, instance.title);
                    }
                    if (instance.quickReplies && instance.quickReplies.length) {
                        writer.writeRepeatedString(2, instance.quickReplies);
                    }
                };
                Object.defineProperty(QuickReplies.prototype, "title", {
                    get: function () {
                        return this._title;
                    },
                    set: function (value) {
                        this._title = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(QuickReplies.prototype, "quickReplies", {
                    get: function () {
                        return this._quickReplies;
                    },
                    set: function (value) {
                        this._quickReplies = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                QuickReplies.prototype.toObject = function () {
                    return {
                        title: this.title,
                        quickReplies: (this.quickReplies || []).slice()
                    };
                };
                QuickReplies.prototype.toJSON = function () {
                    return this.toObject();
                };
                return QuickReplies;
            }());
            Message.QuickReplies = QuickReplies;
            var Card = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Card value
                 */
                function Card(value) {
                    value = value || {};
                    this.title = value.title;
                    this.subtitle = value.subtitle;
                    this.imageUri = value.imageUri;
                    this.buttons = (value.buttons || []).map(function (m) { return new Intent.Message.Card.Button(m); });
                    Card.refineValues(this);
                }
                Card.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Card.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Card.fromBinary = function (bytes) {
                    var instance = new Card();
                    Card.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Card.refineValues = function (instance) {
                    instance.title = instance.title || '';
                    instance.subtitle = instance.subtitle || '';
                    instance.imageUri = instance.imageUri || '';
                    instance.buttons = instance.buttons || [];
                };
                Card.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.title = reader.readString();
                                break;
                            case 2:
                                instance.subtitle = reader.readString();
                                break;
                            case 3:
                                instance.imageUri = reader.readString();
                                break;
                            case 4:
                                var messageInitializer4 = new Intent.Message.Card.Button();
                                reader.readMessage(messageInitializer4, Intent.Message.Card.Button.fromBinaryReader);
                                (instance.buttons = instance.buttons || []).push(messageInitializer4);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Card.refineValues(instance);
                };
                Card.toBinaryWriter = function (instance, writer) {
                    if (instance.title) {
                        writer.writeString(1, instance.title);
                    }
                    if (instance.subtitle) {
                        writer.writeString(2, instance.subtitle);
                    }
                    if (instance.imageUri) {
                        writer.writeString(3, instance.imageUri);
                    }
                    if (instance.buttons && instance.buttons.length) {
                        writer.writeRepeatedMessage(4, instance.buttons, Intent.Message.Card.Button.toBinaryWriter);
                    }
                };
                Object.defineProperty(Card.prototype, "title", {
                    get: function () {
                        return this._title;
                    },
                    set: function (value) {
                        this._title = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Card.prototype, "subtitle", {
                    get: function () {
                        return this._subtitle;
                    },
                    set: function (value) {
                        this._subtitle = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Card.prototype, "imageUri", {
                    get: function () {
                        return this._imageUri;
                    },
                    set: function (value) {
                        this._imageUri = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Card.prototype, "buttons", {
                    get: function () {
                        return this._buttons;
                    },
                    set: function (value) {
                        this._buttons = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Card.prototype.toObject = function () {
                    return {
                        title: this.title,
                        subtitle: this.subtitle,
                        imageUri: this.imageUri,
                        buttons: (this.buttons || []).map(function (m) { return m.toObject(); })
                    };
                };
                Card.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Card;
            }());
            Message.Card = Card;
            (function (Card) {
                var Button = /** @class */ (function () {
                    /**
                     * Creates an object and applies default Protobuf values
                     * @param Button value
                     */
                    function Button(value) {
                        value = value || {};
                        this.text = value.text;
                        this.postback = value.postback;
                        Button.refineValues(this);
                    }
                    Button.toBinary = function (instance) {
                        var writer = new googleProtobuf.BinaryWriter();
                        Button.toBinaryWriter(instance, writer);
                        return writer.getResultBuffer();
                    };
                    Button.fromBinary = function (bytes) {
                        var instance = new Button();
                        Button.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                        return instance;
                    };
                    Button.refineValues = function (instance) {
                        instance.text = instance.text || '';
                        instance.postback = instance.postback || '';
                    };
                    Button.fromBinaryReader = function (instance, reader) {
                        while (reader.nextField()) {
                            if (reader.isEndGroup())
                                break;
                            switch (reader.getFieldNumber()) {
                                case 1:
                                    instance.text = reader.readString();
                                    break;
                                case 2:
                                    instance.postback = reader.readString();
                                    break;
                                default:
                                    reader.skipField();
                            }
                        }
                        Button.refineValues(instance);
                    };
                    Button.toBinaryWriter = function (instance, writer) {
                        if (instance.text) {
                            writer.writeString(1, instance.text);
                        }
                        if (instance.postback) {
                            writer.writeString(2, instance.postback);
                        }
                    };
                    Object.defineProperty(Button.prototype, "text", {
                        get: function () {
                            return this._text;
                        },
                        set: function (value) {
                            this._text = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Button.prototype, "postback", {
                        get: function () {
                            return this._postback;
                        },
                        set: function (value) {
                            this._postback = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Button.prototype.toObject = function () {
                        return {
                            text: this.text,
                            postback: this.postback
                        };
                    };
                    Button.prototype.toJSON = function () {
                        return this.toObject();
                    };
                    return Button;
                }());
                Card.Button = Button;
            })(Card = Message.Card || (Message.Card = {}));
            var SimpleResponse = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param SimpleResponse value
                 */
                function SimpleResponse(value) {
                    value = value || {};
                    this.textToSpeech = value.textToSpeech;
                    this.ssml = value.ssml;
                    this.displayText = value.displayText;
                    SimpleResponse.refineValues(this);
                }
                SimpleResponse.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    SimpleResponse.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                SimpleResponse.fromBinary = function (bytes) {
                    var instance = new SimpleResponse();
                    SimpleResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                SimpleResponse.refineValues = function (instance) {
                    instance.textToSpeech = instance.textToSpeech || '';
                    instance.ssml = instance.ssml || '';
                    instance.displayText = instance.displayText || '';
                };
                SimpleResponse.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.textToSpeech = reader.readString();
                                break;
                            case 2:
                                instance.ssml = reader.readString();
                                break;
                            case 3:
                                instance.displayText = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    SimpleResponse.refineValues(instance);
                };
                SimpleResponse.toBinaryWriter = function (instance, writer) {
                    if (instance.textToSpeech) {
                        writer.writeString(1, instance.textToSpeech);
                    }
                    if (instance.ssml) {
                        writer.writeString(2, instance.ssml);
                    }
                    if (instance.displayText) {
                        writer.writeString(3, instance.displayText);
                    }
                };
                Object.defineProperty(SimpleResponse.prototype, "textToSpeech", {
                    get: function () {
                        return this._textToSpeech;
                    },
                    set: function (value) {
                        this._textToSpeech = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(SimpleResponse.prototype, "ssml", {
                    get: function () {
                        return this._ssml;
                    },
                    set: function (value) {
                        this._ssml = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(SimpleResponse.prototype, "displayText", {
                    get: function () {
                        return this._displayText;
                    },
                    set: function (value) {
                        this._displayText = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                SimpleResponse.prototype.toObject = function () {
                    return {
                        textToSpeech: this.textToSpeech,
                        ssml: this.ssml,
                        displayText: this.displayText
                    };
                };
                SimpleResponse.prototype.toJSON = function () {
                    return this.toObject();
                };
                return SimpleResponse;
            }());
            Message.SimpleResponse = SimpleResponse;
            var SimpleResponses = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param SimpleResponses value
                 */
                function SimpleResponses(value) {
                    value = value || {};
                    this.simpleResponses = (value.simpleResponses || []).map(function (m) { return new Intent.Message.SimpleResponse(m); });
                    SimpleResponses.refineValues(this);
                }
                SimpleResponses.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    SimpleResponses.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                SimpleResponses.fromBinary = function (bytes) {
                    var instance = new SimpleResponses();
                    SimpleResponses.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                SimpleResponses.refineValues = function (instance) {
                    instance.simpleResponses = instance.simpleResponses || [];
                };
                SimpleResponses.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                var messageInitializer1 = new Intent.Message.SimpleResponse();
                                reader.readMessage(messageInitializer1, Intent.Message.SimpleResponse.fromBinaryReader);
                                (instance.simpleResponses = instance.simpleResponses || []).push(messageInitializer1);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    SimpleResponses.refineValues(instance);
                };
                SimpleResponses.toBinaryWriter = function (instance, writer) {
                    if (instance.simpleResponses && instance.simpleResponses.length) {
                        writer.writeRepeatedMessage(1, instance.simpleResponses, Intent.Message.SimpleResponse.toBinaryWriter);
                    }
                };
                Object.defineProperty(SimpleResponses.prototype, "simpleResponses", {
                    get: function () {
                        return this._simpleResponses;
                    },
                    set: function (value) {
                        this._simpleResponses = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                SimpleResponses.prototype.toObject = function () {
                    return {
                        simpleResponses: (this.simpleResponses || []).map(function (m) { return m.toObject(); })
                    };
                };
                SimpleResponses.prototype.toJSON = function () {
                    return this.toObject();
                };
                return SimpleResponses;
            }());
            Message.SimpleResponses = SimpleResponses;
            var BasicCard = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param BasicCard value
                 */
                function BasicCard(value) {
                    value = value || {};
                    this.title = value.title;
                    this.subtitle = value.subtitle;
                    this.formattedText = value.formattedText;
                    this.image = value.image
                        ? new Intent.Message.Image(value.image)
                        : undefined;
                    this.buttons = (value.buttons || []).map(function (m) { return new Intent.Message.BasicCard.Button(m); });
                    BasicCard.refineValues(this);
                }
                BasicCard.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    BasicCard.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                BasicCard.fromBinary = function (bytes) {
                    var instance = new BasicCard();
                    BasicCard.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                BasicCard.refineValues = function (instance) {
                    instance.title = instance.title || '';
                    instance.subtitle = instance.subtitle || '';
                    instance.formattedText = instance.formattedText || '';
                    instance.image = instance.image || undefined;
                    instance.buttons = instance.buttons || [];
                };
                BasicCard.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.title = reader.readString();
                                break;
                            case 2:
                                instance.subtitle = reader.readString();
                                break;
                            case 3:
                                instance.formattedText = reader.readString();
                                break;
                            case 4:
                                instance.image = new Intent.Message.Image();
                                reader.readMessage(instance.image, Intent.Message.Image.fromBinaryReader);
                                break;
                            case 5:
                                var messageInitializer5 = new Intent.Message.BasicCard.Button();
                                reader.readMessage(messageInitializer5, Intent.Message.BasicCard.Button.fromBinaryReader);
                                (instance.buttons = instance.buttons || []).push(messageInitializer5);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    BasicCard.refineValues(instance);
                };
                BasicCard.toBinaryWriter = function (instance, writer) {
                    if (instance.title) {
                        writer.writeString(1, instance.title);
                    }
                    if (instance.subtitle) {
                        writer.writeString(2, instance.subtitle);
                    }
                    if (instance.formattedText) {
                        writer.writeString(3, instance.formattedText);
                    }
                    if (instance.image) {
                        writer.writeMessage(4, instance.image, Intent.Message.Image.toBinaryWriter);
                    }
                    if (instance.buttons && instance.buttons.length) {
                        writer.writeRepeatedMessage(5, instance.buttons, Intent.Message.BasicCard.Button.toBinaryWriter);
                    }
                };
                Object.defineProperty(BasicCard.prototype, "title", {
                    get: function () {
                        return this._title;
                    },
                    set: function (value) {
                        this._title = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(BasicCard.prototype, "subtitle", {
                    get: function () {
                        return this._subtitle;
                    },
                    set: function (value) {
                        this._subtitle = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(BasicCard.prototype, "formattedText", {
                    get: function () {
                        return this._formattedText;
                    },
                    set: function (value) {
                        this._formattedText = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(BasicCard.prototype, "image", {
                    get: function () {
                        return this._image;
                    },
                    set: function (value) {
                        this._image = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(BasicCard.prototype, "buttons", {
                    get: function () {
                        return this._buttons;
                    },
                    set: function (value) {
                        this._buttons = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                BasicCard.prototype.toObject = function () {
                    return {
                        title: this.title,
                        subtitle: this.subtitle,
                        formattedText: this.formattedText,
                        image: this.image ? this.image.toObject() : undefined,
                        buttons: (this.buttons || []).map(function (m) { return m.toObject(); })
                    };
                };
                BasicCard.prototype.toJSON = function () {
                    return this.toObject();
                };
                return BasicCard;
            }());
            Message.BasicCard = BasicCard;
            (function (BasicCard) {
                var Button = /** @class */ (function () {
                    /**
                     * Creates an object and applies default Protobuf values
                     * @param Button value
                     */
                    function Button(value) {
                        value = value || {};
                        this.title = value.title;
                        this.openUriAction = value.openUriAction
                            ? new Intent.Message.BasicCard.Button.OpenUriAction(value.openUriAction)
                            : undefined;
                        Button.refineValues(this);
                    }
                    Button.toBinary = function (instance) {
                        var writer = new googleProtobuf.BinaryWriter();
                        Button.toBinaryWriter(instance, writer);
                        return writer.getResultBuffer();
                    };
                    Button.fromBinary = function (bytes) {
                        var instance = new Button();
                        Button.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                        return instance;
                    };
                    Button.refineValues = function (instance) {
                        instance.title = instance.title || '';
                        instance.openUriAction = instance.openUriAction || undefined;
                    };
                    Button.fromBinaryReader = function (instance, reader) {
                        while (reader.nextField()) {
                            if (reader.isEndGroup())
                                break;
                            switch (reader.getFieldNumber()) {
                                case 1:
                                    instance.title = reader.readString();
                                    break;
                                case 2:
                                    instance.openUriAction = new Intent.Message.BasicCard.Button.OpenUriAction();
                                    reader.readMessage(instance.openUriAction, Intent.Message.BasicCard.Button.OpenUriAction.fromBinaryReader);
                                    break;
                                default:
                                    reader.skipField();
                            }
                        }
                        Button.refineValues(instance);
                    };
                    Button.toBinaryWriter = function (instance, writer) {
                        if (instance.title) {
                            writer.writeString(1, instance.title);
                        }
                        if (instance.openUriAction) {
                            writer.writeMessage(2, instance.openUriAction, Intent.Message.BasicCard.Button.OpenUriAction.toBinaryWriter);
                        }
                    };
                    Object.defineProperty(Button.prototype, "title", {
                        get: function () {
                            return this._title;
                        },
                        set: function (value) {
                            this._title = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Button.prototype, "openUriAction", {
                        get: function () {
                            return this._openUriAction;
                        },
                        set: function (value) {
                            this._openUriAction = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Button.prototype.toObject = function () {
                        return {
                            title: this.title,
                            openUriAction: this.openUriAction
                                ? this.openUriAction.toObject()
                                : undefined
                        };
                    };
                    Button.prototype.toJSON = function () {
                        return this.toObject();
                    };
                    return Button;
                }());
                BasicCard.Button = Button;
                (function (Button) {
                    var OpenUriAction = /** @class */ (function () {
                        /**
                         * Creates an object and applies default Protobuf values
                         * @param OpenUriAction value
                         */
                        function OpenUriAction(value) {
                            value = value || {};
                            this.uri = value.uri;
                            OpenUriAction.refineValues(this);
                        }
                        OpenUriAction.toBinary = function (instance) {
                            var writer = new googleProtobuf.BinaryWriter();
                            OpenUriAction.toBinaryWriter(instance, writer);
                            return writer.getResultBuffer();
                        };
                        OpenUriAction.fromBinary = function (bytes) {
                            var instance = new OpenUriAction();
                            OpenUriAction.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                            return instance;
                        };
                        OpenUriAction.refineValues = function (instance) {
                            instance.uri = instance.uri || '';
                        };
                        OpenUriAction.fromBinaryReader = function (instance, reader) {
                            while (reader.nextField()) {
                                if (reader.isEndGroup())
                                    break;
                                switch (reader.getFieldNumber()) {
                                    case 1:
                                        instance.uri = reader.readString();
                                        break;
                                    default:
                                        reader.skipField();
                                }
                            }
                            OpenUriAction.refineValues(instance);
                        };
                        OpenUriAction.toBinaryWriter = function (instance, writer) {
                            if (instance.uri) {
                                writer.writeString(1, instance.uri);
                            }
                        };
                        Object.defineProperty(OpenUriAction.prototype, "uri", {
                            get: function () {
                                return this._uri;
                            },
                            set: function (value) {
                                this._uri = value;
                            },
                            enumerable: false,
                            configurable: true
                        });
                        OpenUriAction.prototype.toObject = function () {
                            return {
                                uri: this.uri
                            };
                        };
                        OpenUriAction.prototype.toJSON = function () {
                            return this.toObject();
                        };
                        return OpenUriAction;
                    }());
                    Button.OpenUriAction = OpenUriAction;
                })(Button = BasicCard.Button || (BasicCard.Button = {}));
            })(BasicCard = Message.BasicCard || (Message.BasicCard = {}));
            var Suggestion = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Suggestion value
                 */
                function Suggestion(value) {
                    value = value || {};
                    this.title = value.title;
                    Suggestion.refineValues(this);
                }
                Suggestion.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Suggestion.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Suggestion.fromBinary = function (bytes) {
                    var instance = new Suggestion();
                    Suggestion.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Suggestion.refineValues = function (instance) {
                    instance.title = instance.title || '';
                };
                Suggestion.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.title = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Suggestion.refineValues(instance);
                };
                Suggestion.toBinaryWriter = function (instance, writer) {
                    if (instance.title) {
                        writer.writeString(1, instance.title);
                    }
                };
                Object.defineProperty(Suggestion.prototype, "title", {
                    get: function () {
                        return this._title;
                    },
                    set: function (value) {
                        this._title = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Suggestion.prototype.toObject = function () {
                    return {
                        title: this.title
                    };
                };
                Suggestion.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Suggestion;
            }());
            Message.Suggestion = Suggestion;
            var Suggestions = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Suggestions value
                 */
                function Suggestions(value) {
                    value = value || {};
                    this.suggestions = (value.suggestions || []).map(function (m) { return new Intent.Message.Suggestion(m); });
                    Suggestions.refineValues(this);
                }
                Suggestions.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Suggestions.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Suggestions.fromBinary = function (bytes) {
                    var instance = new Suggestions();
                    Suggestions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Suggestions.refineValues = function (instance) {
                    instance.suggestions = instance.suggestions || [];
                };
                Suggestions.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                var messageInitializer1 = new Intent.Message.Suggestion();
                                reader.readMessage(messageInitializer1, Intent.Message.Suggestion.fromBinaryReader);
                                (instance.suggestions = instance.suggestions || []).push(messageInitializer1);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Suggestions.refineValues(instance);
                };
                Suggestions.toBinaryWriter = function (instance, writer) {
                    if (instance.suggestions && instance.suggestions.length) {
                        writer.writeRepeatedMessage(1, instance.suggestions, Intent.Message.Suggestion.toBinaryWriter);
                    }
                };
                Object.defineProperty(Suggestions.prototype, "suggestions", {
                    get: function () {
                        return this._suggestions;
                    },
                    set: function (value) {
                        this._suggestions = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Suggestions.prototype.toObject = function () {
                    return {
                        suggestions: (this.suggestions || []).map(function (m) { return m.toObject(); })
                    };
                };
                Suggestions.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Suggestions;
            }());
            Message.Suggestions = Suggestions;
            var LinkOutSuggestion = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param LinkOutSuggestion value
                 */
                function LinkOutSuggestion(value) {
                    value = value || {};
                    this.destinationName = value.destinationName;
                    this.uri = value.uri;
                    LinkOutSuggestion.refineValues(this);
                }
                LinkOutSuggestion.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    LinkOutSuggestion.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                LinkOutSuggestion.fromBinary = function (bytes) {
                    var instance = new LinkOutSuggestion();
                    LinkOutSuggestion.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                LinkOutSuggestion.refineValues = function (instance) {
                    instance.destinationName = instance.destinationName || '';
                    instance.uri = instance.uri || '';
                };
                LinkOutSuggestion.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.destinationName = reader.readString();
                                break;
                            case 2:
                                instance.uri = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    LinkOutSuggestion.refineValues(instance);
                };
                LinkOutSuggestion.toBinaryWriter = function (instance, writer) {
                    if (instance.destinationName) {
                        writer.writeString(1, instance.destinationName);
                    }
                    if (instance.uri) {
                        writer.writeString(2, instance.uri);
                    }
                };
                Object.defineProperty(LinkOutSuggestion.prototype, "destinationName", {
                    get: function () {
                        return this._destinationName;
                    },
                    set: function (value) {
                        this._destinationName = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(LinkOutSuggestion.prototype, "uri", {
                    get: function () {
                        return this._uri;
                    },
                    set: function (value) {
                        this._uri = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                LinkOutSuggestion.prototype.toObject = function () {
                    return {
                        destinationName: this.destinationName,
                        uri: this.uri
                    };
                };
                LinkOutSuggestion.prototype.toJSON = function () {
                    return this.toObject();
                };
                return LinkOutSuggestion;
            }());
            Message.LinkOutSuggestion = LinkOutSuggestion;
            var ListSelect = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param ListSelect value
                 */
                function ListSelect(value) {
                    value = value || {};
                    this.title = value.title;
                    this.items = (value.items || []).map(function (m) { return new Intent.Message.ListSelect.Item(m); });
                    ListSelect.refineValues(this);
                }
                ListSelect.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    ListSelect.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                ListSelect.fromBinary = function (bytes) {
                    var instance = new ListSelect();
                    ListSelect.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                ListSelect.refineValues = function (instance) {
                    instance.title = instance.title || '';
                    instance.items = instance.items || [];
                };
                ListSelect.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.title = reader.readString();
                                break;
                            case 2:
                                var messageInitializer2 = new Intent.Message.ListSelect.Item();
                                reader.readMessage(messageInitializer2, Intent.Message.ListSelect.Item.fromBinaryReader);
                                (instance.items = instance.items || []).push(messageInitializer2);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    ListSelect.refineValues(instance);
                };
                ListSelect.toBinaryWriter = function (instance, writer) {
                    if (instance.title) {
                        writer.writeString(1, instance.title);
                    }
                    if (instance.items && instance.items.length) {
                        writer.writeRepeatedMessage(2, instance.items, Intent.Message.ListSelect.Item.toBinaryWriter);
                    }
                };
                Object.defineProperty(ListSelect.prototype, "title", {
                    get: function () {
                        return this._title;
                    },
                    set: function (value) {
                        this._title = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(ListSelect.prototype, "items", {
                    get: function () {
                        return this._items;
                    },
                    set: function (value) {
                        this._items = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                ListSelect.prototype.toObject = function () {
                    return {
                        title: this.title,
                        items: (this.items || []).map(function (m) { return m.toObject(); })
                    };
                };
                ListSelect.prototype.toJSON = function () {
                    return this.toObject();
                };
                return ListSelect;
            }());
            Message.ListSelect = ListSelect;
            (function (ListSelect) {
                var Item = /** @class */ (function () {
                    /**
                     * Creates an object and applies default Protobuf values
                     * @param Item value
                     */
                    function Item(value) {
                        value = value || {};
                        this.info = value.info
                            ? new Intent.Message.SelectItemInfo(value.info)
                            : undefined;
                        this.title = value.title;
                        this.description = value.description;
                        this.image = value.image
                            ? new Intent.Message.Image(value.image)
                            : undefined;
                        Item.refineValues(this);
                    }
                    Item.toBinary = function (instance) {
                        var writer = new googleProtobuf.BinaryWriter();
                        Item.toBinaryWriter(instance, writer);
                        return writer.getResultBuffer();
                    };
                    Item.fromBinary = function (bytes) {
                        var instance = new Item();
                        Item.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                        return instance;
                    };
                    Item.refineValues = function (instance) {
                        instance.info = instance.info || undefined;
                        instance.title = instance.title || '';
                        instance.description = instance.description || '';
                        instance.image = instance.image || undefined;
                    };
                    Item.fromBinaryReader = function (instance, reader) {
                        while (reader.nextField()) {
                            if (reader.isEndGroup())
                                break;
                            switch (reader.getFieldNumber()) {
                                case 1:
                                    instance.info = new Intent.Message.SelectItemInfo();
                                    reader.readMessage(instance.info, Intent.Message.SelectItemInfo.fromBinaryReader);
                                    break;
                                case 2:
                                    instance.title = reader.readString();
                                    break;
                                case 3:
                                    instance.description = reader.readString();
                                    break;
                                case 4:
                                    instance.image = new Intent.Message.Image();
                                    reader.readMessage(instance.image, Intent.Message.Image.fromBinaryReader);
                                    break;
                                default:
                                    reader.skipField();
                            }
                        }
                        Item.refineValues(instance);
                    };
                    Item.toBinaryWriter = function (instance, writer) {
                        if (instance.info) {
                            writer.writeMessage(1, instance.info, Intent.Message.SelectItemInfo.toBinaryWriter);
                        }
                        if (instance.title) {
                            writer.writeString(2, instance.title);
                        }
                        if (instance.description) {
                            writer.writeString(3, instance.description);
                        }
                        if (instance.image) {
                            writer.writeMessage(4, instance.image, Intent.Message.Image.toBinaryWriter);
                        }
                    };
                    Object.defineProperty(Item.prototype, "info", {
                        get: function () {
                            return this._info;
                        },
                        set: function (value) {
                            this._info = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "title", {
                        get: function () {
                            return this._title;
                        },
                        set: function (value) {
                            this._title = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "description", {
                        get: function () {
                            return this._description;
                        },
                        set: function (value) {
                            this._description = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "image", {
                        get: function () {
                            return this._image;
                        },
                        set: function (value) {
                            this._image = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Item.prototype.toObject = function () {
                        return {
                            info: this.info ? this.info.toObject() : undefined,
                            title: this.title,
                            description: this.description,
                            image: this.image ? this.image.toObject() : undefined
                        };
                    };
                    Item.prototype.toJSON = function () {
                        return this.toObject();
                    };
                    return Item;
                }());
                ListSelect.Item = Item;
            })(ListSelect = Message.ListSelect || (Message.ListSelect = {}));
            var CarouselSelect = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param CarouselSelect value
                 */
                function CarouselSelect(value) {
                    value = value || {};
                    this.items = (value.items || []).map(function (m) { return new Intent.Message.CarouselSelect.Item(m); });
                    CarouselSelect.refineValues(this);
                }
                CarouselSelect.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    CarouselSelect.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                CarouselSelect.fromBinary = function (bytes) {
                    var instance = new CarouselSelect();
                    CarouselSelect.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                CarouselSelect.refineValues = function (instance) {
                    instance.items = instance.items || [];
                };
                CarouselSelect.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                var messageInitializer1 = new Intent.Message.CarouselSelect.Item();
                                reader.readMessage(messageInitializer1, Intent.Message.CarouselSelect.Item.fromBinaryReader);
                                (instance.items = instance.items || []).push(messageInitializer1);
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    CarouselSelect.refineValues(instance);
                };
                CarouselSelect.toBinaryWriter = function (instance, writer) {
                    if (instance.items && instance.items.length) {
                        writer.writeRepeatedMessage(1, instance.items, Intent.Message.CarouselSelect.Item.toBinaryWriter);
                    }
                };
                Object.defineProperty(CarouselSelect.prototype, "items", {
                    get: function () {
                        return this._items;
                    },
                    set: function (value) {
                        this._items = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                CarouselSelect.prototype.toObject = function () {
                    return {
                        items: (this.items || []).map(function (m) { return m.toObject(); })
                    };
                };
                CarouselSelect.prototype.toJSON = function () {
                    return this.toObject();
                };
                return CarouselSelect;
            }());
            Message.CarouselSelect = CarouselSelect;
            (function (CarouselSelect) {
                var Item = /** @class */ (function () {
                    /**
                     * Creates an object and applies default Protobuf values
                     * @param Item value
                     */
                    function Item(value) {
                        value = value || {};
                        this.info = value.info
                            ? new Intent.Message.SelectItemInfo(value.info)
                            : undefined;
                        this.title = value.title;
                        this.description = value.description;
                        this.image = value.image
                            ? new Intent.Message.Image(value.image)
                            : undefined;
                        Item.refineValues(this);
                    }
                    Item.toBinary = function (instance) {
                        var writer = new googleProtobuf.BinaryWriter();
                        Item.toBinaryWriter(instance, writer);
                        return writer.getResultBuffer();
                    };
                    Item.fromBinary = function (bytes) {
                        var instance = new Item();
                        Item.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                        return instance;
                    };
                    Item.refineValues = function (instance) {
                        instance.info = instance.info || undefined;
                        instance.title = instance.title || '';
                        instance.description = instance.description || '';
                        instance.image = instance.image || undefined;
                    };
                    Item.fromBinaryReader = function (instance, reader) {
                        while (reader.nextField()) {
                            if (reader.isEndGroup())
                                break;
                            switch (reader.getFieldNumber()) {
                                case 1:
                                    instance.info = new Intent.Message.SelectItemInfo();
                                    reader.readMessage(instance.info, Intent.Message.SelectItemInfo.fromBinaryReader);
                                    break;
                                case 2:
                                    instance.title = reader.readString();
                                    break;
                                case 3:
                                    instance.description = reader.readString();
                                    break;
                                case 4:
                                    instance.image = new Intent.Message.Image();
                                    reader.readMessage(instance.image, Intent.Message.Image.fromBinaryReader);
                                    break;
                                default:
                                    reader.skipField();
                            }
                        }
                        Item.refineValues(instance);
                    };
                    Item.toBinaryWriter = function (instance, writer) {
                        if (instance.info) {
                            writer.writeMessage(1, instance.info, Intent.Message.SelectItemInfo.toBinaryWriter);
                        }
                        if (instance.title) {
                            writer.writeString(2, instance.title);
                        }
                        if (instance.description) {
                            writer.writeString(3, instance.description);
                        }
                        if (instance.image) {
                            writer.writeMessage(4, instance.image, Intent.Message.Image.toBinaryWriter);
                        }
                    };
                    Object.defineProperty(Item.prototype, "info", {
                        get: function () {
                            return this._info;
                        },
                        set: function (value) {
                            this._info = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "title", {
                        get: function () {
                            return this._title;
                        },
                        set: function (value) {
                            this._title = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "description", {
                        get: function () {
                            return this._description;
                        },
                        set: function (value) {
                            this._description = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Object.defineProperty(Item.prototype, "image", {
                        get: function () {
                            return this._image;
                        },
                        set: function (value) {
                            this._image = value;
                        },
                        enumerable: false,
                        configurable: true
                    });
                    Item.prototype.toObject = function () {
                        return {
                            info: this.info ? this.info.toObject() : undefined,
                            title: this.title,
                            description: this.description,
                            image: this.image ? this.image.toObject() : undefined
                        };
                    };
                    Item.prototype.toJSON = function () {
                        return this.toObject();
                    };
                    return Item;
                }());
                CarouselSelect.Item = Item;
            })(CarouselSelect = Message.CarouselSelect || (Message.CarouselSelect = {}));
            var HTMLText = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param HTMLText value
                 */
                function HTMLText(value) {
                    value = value || {};
                    this.text = (value.text || []).slice();
                    HTMLText.refineValues(this);
                }
                HTMLText.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    HTMLText.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                HTMLText.fromBinary = function (bytes) {
                    var instance = new HTMLText();
                    HTMLText.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                HTMLText.refineValues = function (instance) {
                    instance.text = instance.text || [];
                };
                HTMLText.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                (instance.text = instance.text || []).push(reader.readString());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    HTMLText.refineValues(instance);
                };
                HTMLText.toBinaryWriter = function (instance, writer) {
                    if (instance.text && instance.text.length) {
                        writer.writeRepeatedString(1, instance.text);
                    }
                };
                Object.defineProperty(HTMLText.prototype, "text", {
                    get: function () {
                        return this._text;
                    },
                    set: function (value) {
                        this._text = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                HTMLText.prototype.toObject = function () {
                    return {
                        text: (this.text || []).slice()
                    };
                };
                HTMLText.prototype.toJSON = function () {
                    return this.toObject();
                };
                return HTMLText;
            }());
            Message.HTMLText = HTMLText;
            var Video = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Video value
                 */
                function Video(value) {
                    value = value || {};
                    this.uri = value.uri;
                    this.accessibilityText = value.accessibilityText;
                    Video.refineValues(this);
                }
                Video.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Video.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Video.fromBinary = function (bytes) {
                    var instance = new Video();
                    Video.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Video.refineValues = function (instance) {
                    instance.uri = instance.uri || '';
                    instance.accessibilityText = instance.accessibilityText || '';
                };
                Video.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.uri = reader.readString();
                                break;
                            case 2:
                                instance.accessibilityText = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Video.refineValues(instance);
                };
                Video.toBinaryWriter = function (instance, writer) {
                    if (instance.uri) {
                        writer.writeString(1, instance.uri);
                    }
                    if (instance.accessibilityText) {
                        writer.writeString(2, instance.accessibilityText);
                    }
                };
                Object.defineProperty(Video.prototype, "uri", {
                    get: function () {
                        return this._uri;
                    },
                    set: function (value) {
                        this._uri = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Video.prototype, "accessibilityText", {
                    get: function () {
                        return this._accessibilityText;
                    },
                    set: function (value) {
                        this._accessibilityText = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Video.prototype.toObject = function () {
                    return {
                        uri: this.uri,
                        accessibilityText: this.accessibilityText
                    };
                };
                Video.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Video;
            }());
            Message.Video = Video;
            var Audio = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param Audio value
                 */
                function Audio(value) {
                    value = value || {};
                    this.uri = value.uri;
                    this.accessibilityText = value.accessibilityText;
                    Audio.refineValues(this);
                }
                Audio.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    Audio.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                Audio.fromBinary = function (bytes) {
                    var instance = new Audio();
                    Audio.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                Audio.refineValues = function (instance) {
                    instance.uri = instance.uri || '';
                    instance.accessibilityText = instance.accessibilityText || '';
                };
                Audio.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.uri = reader.readString();
                                break;
                            case 2:
                                instance.accessibilityText = reader.readString();
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    Audio.refineValues(instance);
                };
                Audio.toBinaryWriter = function (instance, writer) {
                    if (instance.uri) {
                        writer.writeString(1, instance.uri);
                    }
                    if (instance.accessibilityText) {
                        writer.writeString(2, instance.accessibilityText);
                    }
                };
                Object.defineProperty(Audio.prototype, "uri", {
                    get: function () {
                        return this._uri;
                    },
                    set: function (value) {
                        this._uri = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(Audio.prototype, "accessibilityText", {
                    get: function () {
                        return this._accessibilityText;
                    },
                    set: function (value) {
                        this._accessibilityText = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Audio.prototype.toObject = function () {
                    return {
                        uri: this.uri,
                        accessibilityText: this.accessibilityText
                    };
                };
                Audio.prototype.toJSON = function () {
                    return this.toObject();
                };
                return Audio;
            }());
            Message.Audio = Audio;
            var SelectItemInfo = /** @class */ (function () {
                /**
                 * Creates an object and applies default Protobuf values
                 * @param SelectItemInfo value
                 */
                function SelectItemInfo(value) {
                    value = value || {};
                    this.key = value.key;
                    this.synonyms = (value.synonyms || []).slice();
                    SelectItemInfo.refineValues(this);
                }
                SelectItemInfo.toBinary = function (instance) {
                    var writer = new googleProtobuf.BinaryWriter();
                    SelectItemInfo.toBinaryWriter(instance, writer);
                    return writer.getResultBuffer();
                };
                SelectItemInfo.fromBinary = function (bytes) {
                    var instance = new SelectItemInfo();
                    SelectItemInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                    return instance;
                };
                SelectItemInfo.refineValues = function (instance) {
                    instance.key = instance.key || '';
                    instance.synonyms = instance.synonyms || [];
                };
                SelectItemInfo.fromBinaryReader = function (instance, reader) {
                    while (reader.nextField()) {
                        if (reader.isEndGroup())
                            break;
                        switch (reader.getFieldNumber()) {
                            case 1:
                                instance.key = reader.readString();
                                break;
                            case 2:
                                (instance.synonyms = instance.synonyms || []).push(reader.readString());
                                break;
                            default:
                                reader.skipField();
                        }
                    }
                    SelectItemInfo.refineValues(instance);
                };
                SelectItemInfo.toBinaryWriter = function (instance, writer) {
                    if (instance.key) {
                        writer.writeString(1, instance.key);
                    }
                    if (instance.synonyms && instance.synonyms.length) {
                        writer.writeRepeatedString(2, instance.synonyms);
                    }
                };
                Object.defineProperty(SelectItemInfo.prototype, "key", {
                    get: function () {
                        return this._key;
                    },
                    set: function (value) {
                        this._key = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                Object.defineProperty(SelectItemInfo.prototype, "synonyms", {
                    get: function () {
                        return this._synonyms;
                    },
                    set: function (value) {
                        this._synonyms = value;
                    },
                    enumerable: false,
                    configurable: true
                });
                SelectItemInfo.prototype.toObject = function () {
                    return {
                        key: this.key,
                        synonyms: (this.synonyms || []).slice()
                    };
                };
                SelectItemInfo.prototype.toJSON = function () {
                    return this.toObject();
                };
                return SelectItemInfo;
            }());
            Message.SelectItemInfo = SelectItemInfo;
        })(Message = Intent.Message || (Intent.Message = {}));
        var FollowupIntentInfo = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param FollowupIntentInfo value
             */
            function FollowupIntentInfo(value) {
                value = value || {};
                this.followupIntentName = value.followupIntentName;
                this.parentFollowupIntentName = value.parentFollowupIntentName;
                FollowupIntentInfo.refineValues(this);
            }
            FollowupIntentInfo.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                FollowupIntentInfo.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            FollowupIntentInfo.fromBinary = function (bytes) {
                var instance = new FollowupIntentInfo();
                FollowupIntentInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            FollowupIntentInfo.refineValues = function (instance) {
                instance.followupIntentName = instance.followupIntentName || '';
                instance.parentFollowupIntentName =
                    instance.parentFollowupIntentName || '';
            };
            FollowupIntentInfo.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.followupIntentName = reader.readString();
                            break;
                        case 2:
                            instance.parentFollowupIntentName = reader.readString();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                FollowupIntentInfo.refineValues(instance);
            };
            FollowupIntentInfo.toBinaryWriter = function (instance, writer) {
                if (instance.followupIntentName) {
                    writer.writeString(1, instance.followupIntentName);
                }
                if (instance.parentFollowupIntentName) {
                    writer.writeString(2, instance.parentFollowupIntentName);
                }
            };
            Object.defineProperty(FollowupIntentInfo.prototype, "followupIntentName", {
                get: function () {
                    return this._followupIntentName;
                },
                set: function (value) {
                    this._followupIntentName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(FollowupIntentInfo.prototype, "parentFollowupIntentName", {
                get: function () {
                    return this._parentFollowupIntentName;
                },
                set: function (value) {
                    this._parentFollowupIntentName = value;
                },
                enumerable: false,
                configurable: true
            });
            FollowupIntentInfo.prototype.toObject = function () {
                return {
                    followupIntentName: this.followupIntentName,
                    parentFollowupIntentName: this.parentFollowupIntentName
                };
            };
            FollowupIntentInfo.prototype.toJSON = function () {
                return this.toObject();
            };
            return FollowupIntentInfo;
        }());
        Intent.FollowupIntentInfo = FollowupIntentInfo;
    })(exports.Intent || (exports.Intent = {}));
    var ListIntentsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListIntentsRequest value
         */
        function ListIntentsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.languageCode = value.languageCode;
            this.intentView = value.intentView;
            this.pageToken = value.pageToken;
            this.filterByCategory = value.filterByCategory;
            this.sortByField = value.sortByField
                ? new exports.IntentSorting(value.sortByField)
                : undefined;
            ListIntentsRequest.refineValues(this);
        }
        ListIntentsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListIntentsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListIntentsRequest.fromBinary = function (bytes) {
            var instance = new ListIntentsRequest();
            ListIntentsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListIntentsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.languageCode = instance.languageCode || '';
            instance.intentView = instance.intentView || 0;
            instance.pageToken = instance.pageToken || '';
            instance.filterByCategory = instance.filterByCategory || 0;
            instance.sortByField = instance.sortByField || undefined;
        };
        ListIntentsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 3:
                        instance.intentView = reader.readEnum();
                        break;
                    case 5:
                        instance.pageToken = reader.readString();
                        break;
                    case 6:
                        instance.filterByCategory = reader.readEnum();
                        break;
                    case 7:
                        instance.sortByField = new exports.IntentSorting();
                        reader.readMessage(instance.sortByField, exports.IntentSorting.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListIntentsRequest.refineValues(instance);
        };
        ListIntentsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.intentView) {
                writer.writeEnum(3, instance.intentView);
            }
            if (instance.pageToken) {
                writer.writeString(5, instance.pageToken);
            }
            if (instance.filterByCategory) {
                writer.writeEnum(6, instance.filterByCategory);
            }
            if (instance.sortByField) {
                writer.writeMessage(7, instance.sortByField, exports.IntentSorting.toBinaryWriter);
            }
        };
        Object.defineProperty(ListIntentsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsRequest.prototype, "intentView", {
            get: function () {
                return this._intentView;
            },
            set: function (value) {
                this._intentView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsRequest.prototype, "filterByCategory", {
            get: function () {
                return this._filterByCategory;
            },
            set: function (value) {
                this._filterByCategory = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsRequest.prototype, "sortByField", {
            get: function () {
                return this._sortByField;
            },
            set: function (value) {
                this._sortByField = value;
            },
            enumerable: false,
            configurable: true
        });
        ListIntentsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                languageCode: this.languageCode,
                intentView: this.intentView,
                pageToken: this.pageToken,
                filterByCategory: this.filterByCategory,
                sortByField: this.sortByField ? this.sortByField.toObject() : undefined
            };
        };
        ListIntentsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListIntentsRequest;
    }());
    var ListIntentsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListIntentsResponse value
         */
        function ListIntentsResponse(value) {
            value = value || {};
            this.intents = (value.intents || []).map(function (m) { return new exports.Intent(m); });
            this.nextPageToken = value.nextPageToken;
            ListIntentsResponse.refineValues(this);
        }
        ListIntentsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListIntentsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListIntentsResponse.fromBinary = function (bytes) {
            var instance = new ListIntentsResponse();
            ListIntentsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListIntentsResponse.refineValues = function (instance) {
            instance.intents = instance.intents || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListIntentsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Intent();
                        reader.readMessage(messageInitializer1, exports.Intent.fromBinaryReader);
                        (instance.intents = instance.intents || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListIntentsResponse.refineValues(instance);
        };
        ListIntentsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.intents && instance.intents.length) {
                writer.writeRepeatedMessage(1, instance.intents, exports.Intent.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListIntentsResponse.prototype, "intents", {
            get: function () {
                return this._intents;
            },
            set: function (value) {
                this._intents = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListIntentsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListIntentsResponse.prototype.toObject = function () {
            return {
                intents: (this.intents || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListIntentsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListIntentsResponse;
    }());
    var GetIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetIntentRequest value
         */
        function GetIntentRequest(value) {
            value = value || {};
            this.name = value.name;
            this.languageCode = value.languageCode;
            this.intentView = value.intentView;
            this.pageToken = value.pageToken;
            GetIntentRequest.refineValues(this);
        }
        GetIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetIntentRequest.fromBinary = function (bytes) {
            var instance = new GetIntentRequest();
            GetIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetIntentRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.languageCode = instance.languageCode || '';
            instance.intentView = instance.intentView || 0;
            instance.pageToken = instance.pageToken || '';
        };
        GetIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 3:
                        instance.intentView = reader.readEnum();
                        break;
                    case 10:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetIntentRequest.refineValues(instance);
        };
        GetIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.intentView) {
                writer.writeEnum(3, instance.intentView);
            }
            if (instance.pageToken) {
                writer.writeString(10, instance.pageToken);
            }
        };
        Object.defineProperty(GetIntentRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetIntentRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetIntentRequest.prototype, "intentView", {
            get: function () {
                return this._intentView;
            },
            set: function (value) {
                this._intentView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetIntentRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        GetIntentRequest.prototype.toObject = function () {
            return {
                name: this.name,
                languageCode: this.languageCode,
                intentView: this.intentView,
                pageToken: this.pageToken
            };
        };
        GetIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetIntentRequest;
    }());
    var CreateIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateIntentRequest value
         */
        function CreateIntentRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.intent = value.intent ? new exports.Intent(value.intent) : undefined;
            this.languageCode = value.languageCode;
            this.intentView = value.intentView;
            CreateIntentRequest.refineValues(this);
        }
        CreateIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateIntentRequest.fromBinary = function (bytes) {
            var instance = new CreateIntentRequest();
            CreateIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateIntentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.intent = instance.intent || undefined;
            instance.languageCode = instance.languageCode || '';
            instance.intentView = instance.intentView || 0;
        };
        CreateIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.intent = new exports.Intent();
                        reader.readMessage(instance.intent, exports.Intent.fromBinaryReader);
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    case 4:
                        instance.intentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateIntentRequest.refineValues(instance);
        };
        CreateIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.intent) {
                writer.writeMessage(2, instance.intent, exports.Intent.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
            if (instance.intentView) {
                writer.writeEnum(4, instance.intentView);
            }
        };
        Object.defineProperty(CreateIntentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateIntentRequest.prototype, "intent", {
            get: function () {
                return this._intent;
            },
            set: function (value) {
                this._intent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateIntentRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateIntentRequest.prototype, "intentView", {
            get: function () {
                return this._intentView;
            },
            set: function (value) {
                this._intentView = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateIntentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                intent: this.intent ? this.intent.toObject() : undefined,
                languageCode: this.languageCode,
                intentView: this.intentView
            };
        };
        CreateIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateIntentRequest;
    }());
    var UpdateIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateIntentRequest value
         */
        function UpdateIntentRequest(value) {
            value = value || {};
            this.intent = value.intent ? new exports.Intent(value.intent) : undefined;
            this.languageCode = value.languageCode;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            this.intentView = value.intentView;
            UpdateIntentRequest.refineValues(this);
        }
        UpdateIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateIntentRequest.fromBinary = function (bytes) {
            var instance = new UpdateIntentRequest();
            UpdateIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateIntentRequest.refineValues = function (instance) {
            instance.intent = instance.intent || undefined;
            instance.languageCode = instance.languageCode || '';
            instance.updateMask = instance.updateMask || undefined;
            instance.intentView = instance.intentView || 0;
        };
        UpdateIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.intent = new exports.Intent();
                        reader.readMessage(instance.intent, exports.Intent.fromBinaryReader);
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 3:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    case 4:
                        instance.intentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateIntentRequest.refineValues(instance);
        };
        UpdateIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.intent) {
                writer.writeMessage(1, instance.intent, exports.Intent.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.updateMask) {
                writer.writeMessage(3, instance.updateMask, FieldMask.toBinaryWriter);
            }
            if (instance.intentView) {
                writer.writeEnum(4, instance.intentView);
            }
        };
        Object.defineProperty(UpdateIntentRequest.prototype, "intent", {
            get: function () {
                return this._intent;
            },
            set: function (value) {
                this._intent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateIntentRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateIntentRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateIntentRequest.prototype, "intentView", {
            get: function () {
                return this._intentView;
            },
            set: function (value) {
                this._intentView = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateIntentRequest.prototype.toObject = function () {
            return {
                intent: this.intent ? this.intent.toObject() : undefined,
                languageCode: this.languageCode,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined,
                intentView: this.intentView
            };
        };
        UpdateIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateIntentRequest;
    }());
    var DeleteIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteIntentRequest value
         */
        function DeleteIntentRequest(value) {
            value = value || {};
            this.name = value.name;
            DeleteIntentRequest.refineValues(this);
        }
        DeleteIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteIntentRequest.fromBinary = function (bytes) {
            var instance = new DeleteIntentRequest();
            DeleteIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteIntentRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        DeleteIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteIntentRequest.refineValues(instance);
        };
        DeleteIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(DeleteIntentRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteIntentRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        DeleteIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteIntentRequest;
    }());
    exports.BatchUpdateIntentsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchUpdateIntentsRequest value
         */
        function BatchUpdateIntentsRequest(value) {
            this._intentBatch = BatchUpdateIntentsRequest.IntentBatchCase.none;
            value = value || {};
            this.parent = value.parent;
            this.intentBatchUri = value.intentBatchUri;
            this.intentBatchInline = value.intentBatchInline
                ? new IntentBatch(value.intentBatchInline)
                : undefined;
            this.languageCode = value.languageCode;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            this.intentView = value.intentView;
            BatchUpdateIntentsRequest.refineValues(this);
        }
        BatchUpdateIntentsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchUpdateIntentsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchUpdateIntentsRequest.fromBinary = function (bytes) {
            var instance = new BatchUpdateIntentsRequest();
            BatchUpdateIntentsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchUpdateIntentsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.languageCode = instance.languageCode || '';
            instance.updateMask = instance.updateMask || undefined;
            instance.intentView = instance.intentView || 0;
        };
        BatchUpdateIntentsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.intentBatchUri = reader.readString();
                        break;
                    case 3:
                        instance.intentBatchInline = new IntentBatch();
                        reader.readMessage(instance.intentBatchInline, IntentBatch.fromBinaryReader);
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    case 6:
                        instance.intentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchUpdateIntentsRequest.refineValues(instance);
        };
        BatchUpdateIntentsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.intentBatchUri || instance.intentBatchUri === '') {
                writer.writeString(2, instance.intentBatchUri);
            }
            if (instance.intentBatchInline) {
                writer.writeMessage(3, instance.intentBatchInline, IntentBatch.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.updateMask) {
                writer.writeMessage(5, instance.updateMask, FieldMask.toBinaryWriter);
            }
            if (instance.intentView) {
                writer.writeEnum(6, instance.intentView);
            }
        };
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "intentBatchUri", {
            get: function () {
                return this._intentBatchUri;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._intentBatchInline = undefined;
                    this._intentBatch =
                        BatchUpdateIntentsRequest.IntentBatchCase.intentBatchUri;
                }
                this._intentBatchUri = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "intentBatchInline", {
            get: function () {
                return this._intentBatchInline;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._intentBatchUri = undefined;
                    this._intentBatch =
                        BatchUpdateIntentsRequest.IntentBatchCase.intentBatchInline;
                }
                this._intentBatchInline = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "intentView", {
            get: function () {
                return this._intentView;
            },
            set: function (value) {
                this._intentView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateIntentsRequest.prototype, "intentBatch", {
            get: function () {
                return this._intentBatch;
            },
            enumerable: false,
            configurable: true
        });
        BatchUpdateIntentsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                intentBatchUri: this.intentBatchUri,
                intentBatchInline: this.intentBatchInline
                    ? this.intentBatchInline.toObject()
                    : undefined,
                languageCode: this.languageCode,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined,
                intentView: this.intentView
            };
        };
        BatchUpdateIntentsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchUpdateIntentsRequest;
    }());
    (function (BatchUpdateIntentsRequest) {
        var IntentBatchCase;
        (function (IntentBatchCase) {
            IntentBatchCase[IntentBatchCase["none"] = 0] = "none";
            IntentBatchCase[IntentBatchCase["intentBatchUri"] = 1] = "intentBatchUri";
            IntentBatchCase[IntentBatchCase["intentBatchInline"] = 2] = "intentBatchInline";
        })(IntentBatchCase = BatchUpdateIntentsRequest.IntentBatchCase || (BatchUpdateIntentsRequest.IntentBatchCase = {}));
    })(exports.BatchUpdateIntentsRequest || (exports.BatchUpdateIntentsRequest = {}));
    var BatchUpdateIntentsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchUpdateIntentsResponse value
         */
        function BatchUpdateIntentsResponse(value) {
            value = value || {};
            this.intents = (value.intents || []).map(function (m) { return new exports.Intent(m); });
            BatchUpdateIntentsResponse.refineValues(this);
        }
        BatchUpdateIntentsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchUpdateIntentsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchUpdateIntentsResponse.fromBinary = function (bytes) {
            var instance = new BatchUpdateIntentsResponse();
            BatchUpdateIntentsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchUpdateIntentsResponse.refineValues = function (instance) {
            instance.intents = instance.intents || [];
        };
        BatchUpdateIntentsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Intent();
                        reader.readMessage(messageInitializer1, exports.Intent.fromBinaryReader);
                        (instance.intents = instance.intents || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchUpdateIntentsResponse.refineValues(instance);
        };
        BatchUpdateIntentsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.intents && instance.intents.length) {
                writer.writeRepeatedMessage(1, instance.intents, exports.Intent.toBinaryWriter);
            }
        };
        Object.defineProperty(BatchUpdateIntentsResponse.prototype, "intents", {
            get: function () {
                return this._intents;
            },
            set: function (value) {
                this._intents = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchUpdateIntentsResponse.prototype.toObject = function () {
            return {
                intents: (this.intents || []).map(function (m) { return m.toObject(); })
            };
        };
        BatchUpdateIntentsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchUpdateIntentsResponse;
    }());
    var BatchDeleteIntentsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchDeleteIntentsRequest value
         */
        function BatchDeleteIntentsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.intents = (value.intents || []).map(function (m) { return new exports.Intent(m); });
            BatchDeleteIntentsRequest.refineValues(this);
        }
        BatchDeleteIntentsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchDeleteIntentsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchDeleteIntentsRequest.fromBinary = function (bytes) {
            var instance = new BatchDeleteIntentsRequest();
            BatchDeleteIntentsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchDeleteIntentsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.intents = instance.intents || [];
        };
        BatchDeleteIntentsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new exports.Intent();
                        reader.readMessage(messageInitializer2, exports.Intent.fromBinaryReader);
                        (instance.intents = instance.intents || []).push(messageInitializer2);
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchDeleteIntentsRequest.refineValues(instance);
        };
        BatchDeleteIntentsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.intents && instance.intents.length) {
                writer.writeRepeatedMessage(2, instance.intents, exports.Intent.toBinaryWriter);
            }
        };
        Object.defineProperty(BatchDeleteIntentsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchDeleteIntentsRequest.prototype, "intents", {
            get: function () {
                return this._intents;
            },
            set: function (value) {
                this._intents = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchDeleteIntentsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                intents: (this.intents || []).map(function (m) { return m.toObject(); })
            };
        };
        BatchDeleteIntentsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchDeleteIntentsRequest;
    }());
    var IntentBatch = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param IntentBatch value
         */
        function IntentBatch(value) {
            value = value || {};
            this.intents = (value.intents || []).map(function (m) { return new exports.Intent(m); });
            IntentBatch.refineValues(this);
        }
        IntentBatch.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            IntentBatch.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        IntentBatch.fromBinary = function (bytes) {
            var instance = new IntentBatch();
            IntentBatch.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        IntentBatch.refineValues = function (instance) {
            instance.intents = instance.intents || [];
        };
        IntentBatch.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Intent();
                        reader.readMessage(messageInitializer1, exports.Intent.fromBinaryReader);
                        (instance.intents = instance.intents || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            IntentBatch.refineValues(instance);
        };
        IntentBatch.toBinaryWriter = function (instance, writer) {
            if (instance.intents && instance.intents.length) {
                writer.writeRepeatedMessage(1, instance.intents, exports.Intent.toBinaryWriter);
            }
        };
        Object.defineProperty(IntentBatch.prototype, "intents", {
            get: function () {
                return this._intents;
            },
            set: function (value) {
                this._intents = value;
            },
            enumerable: false,
            configurable: true
        });
        IntentBatch.prototype.toObject = function () {
            return {
                intents: (this.intents || []).map(function (m) { return m.toObject(); })
            };
        };
        IntentBatch.prototype.toJSON = function () {
            return this.toObject();
        };
        return IntentBatch;
    }());
    exports.IntentSorting = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param IntentSorting value
         */
        function IntentSorting(value) {
            value = value || {};
            this.sortingField = value.sortingField;
            this.sortingMode = value.sortingMode;
            IntentSorting.refineValues(this);
        }
        IntentSorting.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            IntentSorting.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        IntentSorting.fromBinary = function (bytes) {
            var instance = new IntentSorting();
            IntentSorting.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        IntentSorting.refineValues = function (instance) {
            instance.sortingField = instance.sortingField || 0;
            instance.sortingMode = instance.sortingMode || 0;
        };
        IntentSorting.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sortingField = reader.readEnum();
                        break;
                    case 2:
                        instance.sortingMode = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            IntentSorting.refineValues(instance);
        };
        IntentSorting.toBinaryWriter = function (instance, writer) {
            if (instance.sortingField) {
                writer.writeEnum(1, instance.sortingField);
            }
            if (instance.sortingMode) {
                writer.writeEnum(2, instance.sortingMode);
            }
        };
        Object.defineProperty(IntentSorting.prototype, "sortingField", {
            get: function () {
                return this._sortingField;
            },
            set: function (value) {
                this._sortingField = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IntentSorting.prototype, "sortingMode", {
            get: function () {
                return this._sortingMode;
            },
            set: function (value) {
                this._sortingMode = value;
            },
            enumerable: false,
            configurable: true
        });
        IntentSorting.prototype.toObject = function () {
            return {
                sortingField: this.sortingField,
                sortingMode: this.sortingMode
            };
        };
        IntentSorting.prototype.toJSON = function () {
            return this.toObject();
        };
        return IntentSorting;
    }());
    (function (IntentSorting) {
        var IntentSortingField;
        (function (IntentSortingField) {
            IntentSortingField[IntentSortingField["noIntentSorting"] = 0] = "noIntentSorting";
            IntentSortingField[IntentSortingField["sortIntentByName"] = 1] = "sortIntentByName";
            IntentSortingField[IntentSortingField["sortIntentByCreationDate"] = 2] = "sortIntentByCreationDate";
            IntentSortingField[IntentSortingField["sortIntentByLastUpdated"] = 3] = "sortIntentByLastUpdated";
            IntentSortingField[IntentSortingField["sortIntentByUsersaysCount"] = 4] = "sortIntentByUsersaysCount";
        })(IntentSortingField = IntentSorting.IntentSortingField || (IntentSorting.IntentSortingField = {}));
    })(exports.IntentSorting || (exports.IntentSorting = {}));

    exports.EntityTypeView = void 0;
    (function (EntityTypeView) {
        EntityTypeView[EntityTypeView["entityTypeViewUnspecified"] = 0] = "entityTypeViewUnspecified";
        EntityTypeView[EntityTypeView["entityTypeViewFull"] = 1] = "entityTypeViewFull";
        EntityTypeView[EntityTypeView["entityTypeViewPartial"] = 2] = "entityTypeViewPartial";
        EntityTypeView[EntityTypeView["entityTypeViewShallow"] = 3] = "entityTypeViewShallow";
    })(exports.EntityTypeView || (exports.EntityTypeView = {}));
    exports.EntityTypeCategory = void 0;
    (function (EntityTypeCategory) {
        EntityTypeCategory[EntityTypeCategory["allEntityTypes"] = 0] = "allEntityTypes";
        EntityTypeCategory[EntityTypeCategory["defaultEntityTypes"] = 1] = "defaultEntityTypes";
        EntityTypeCategory[EntityTypeCategory["userDefinedEntityTypes"] = 2] = "userDefinedEntityTypes";
    })(exports.EntityTypeCategory || (exports.EntityTypeCategory = {}));
    exports.EntityType = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EntityType value
         */
        function EntityType(value) {
            value = value || {};
            this.name = value.name;
            this.displayName = value.displayName;
            this.kind = value.kind;
            this.autoExpansionMode = value.autoExpansionMode;
            this.entities = (value.entities || []).map(function (m) { return new EntityType.Entity(m); });
            this.nextPageToken = value.nextPageToken;
            this.entityCount = value.entityCount;
            this.status = value.status;
            this.synonymCount = value.synonymCount;
            EntityType.refineValues(this);
        }
        EntityType.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EntityType.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EntityType.fromBinary = function (bytes) {
            var instance = new EntityType();
            EntityType.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EntityType.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.displayName = instance.displayName || '';
            instance.kind = instance.kind || 0;
            instance.autoExpansionMode = instance.autoExpansionMode || 0;
            instance.entities = instance.entities || [];
            instance.nextPageToken = instance.nextPageToken || '';
            instance.entityCount = instance.entityCount || 0;
            instance.status = instance.status || 0;
            instance.synonymCount = instance.synonymCount || 0;
        };
        EntityType.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.displayName = reader.readString();
                        break;
                    case 3:
                        instance.kind = reader.readEnum();
                        break;
                    case 4:
                        instance.autoExpansionMode = reader.readEnum();
                        break;
                    case 6:
                        var messageInitializer6 = new EntityType.Entity();
                        reader.readMessage(messageInitializer6, EntityType.Entity.fromBinaryReader);
                        (instance.entities = instance.entities || []).push(messageInitializer6);
                        break;
                    case 10:
                        instance.nextPageToken = reader.readString();
                        break;
                    case 11:
                        instance.entityCount = reader.readInt32();
                        break;
                    case 12:
                        instance.status = reader.readEnum();
                        break;
                    case 13:
                        instance.synonymCount = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            EntityType.refineValues(instance);
        };
        EntityType.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.displayName) {
                writer.writeString(2, instance.displayName);
            }
            if (instance.kind) {
                writer.writeEnum(3, instance.kind);
            }
            if (instance.autoExpansionMode) {
                writer.writeEnum(4, instance.autoExpansionMode);
            }
            if (instance.entities && instance.entities.length) {
                writer.writeRepeatedMessage(6, instance.entities, EntityType.Entity.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(10, instance.nextPageToken);
            }
            if (instance.entityCount) {
                writer.writeInt32(11, instance.entityCount);
            }
            if (instance.status) {
                writer.writeEnum(12, instance.status);
            }
            if (instance.synonymCount) {
                writer.writeInt32(13, instance.synonymCount);
            }
        };
        Object.defineProperty(EntityType.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "displayName", {
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                this._displayName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "kind", {
            get: function () {
                return this._kind;
            },
            set: function (value) {
                this._kind = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "autoExpansionMode", {
            get: function () {
                return this._autoExpansionMode;
            },
            set: function (value) {
                this._autoExpansionMode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "entities", {
            get: function () {
                return this._entities;
            },
            set: function (value) {
                this._entities = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "entityCount", {
            get: function () {
                return this._entityCount;
            },
            set: function (value) {
                this._entityCount = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "status", {
            get: function () {
                return this._status;
            },
            set: function (value) {
                this._status = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityType.prototype, "synonymCount", {
            get: function () {
                return this._synonymCount;
            },
            set: function (value) {
                this._synonymCount = value;
            },
            enumerable: false,
            configurable: true
        });
        EntityType.prototype.toObject = function () {
            return {
                name: this.name,
                displayName: this.displayName,
                kind: this.kind,
                autoExpansionMode: this.autoExpansionMode,
                entities: (this.entities || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken,
                entityCount: this.entityCount,
                status: this.status,
                synonymCount: this.synonymCount
            };
        };
        EntityType.prototype.toJSON = function () {
            return this.toObject();
        };
        return EntityType;
    }());
    (function (EntityType) {
        var Kind;
        (function (Kind) {
            Kind[Kind["kindUnspecified"] = 0] = "kindUnspecified";
            Kind[Kind["kindMap"] = 1] = "kindMap";
            Kind[Kind["kindList"] = 2] = "kindList";
        })(Kind = EntityType.Kind || (EntityType.Kind = {}));
        var EntityTypeStatus;
        (function (EntityTypeStatus) {
            EntityTypeStatus[EntityTypeStatus["active"] = 0] = "active";
            EntityTypeStatus[EntityTypeStatus["inactive"] = 1] = "inactive";
        })(EntityTypeStatus = EntityType.EntityTypeStatus || (EntityType.EntityTypeStatus = {}));
        var AutoExpansionMode;
        (function (AutoExpansionMode) {
            AutoExpansionMode[AutoExpansionMode["autoExpansionModeUnspecified"] = 0] = "autoExpansionModeUnspecified";
            AutoExpansionMode[AutoExpansionMode["autoExpansionModeDefault"] = 1] = "autoExpansionModeDefault";
        })(AutoExpansionMode = EntityType.AutoExpansionMode || (EntityType.AutoExpansionMode = {}));
        var Entity = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Entity value
             */
            function Entity(value) {
                value = value || {};
                this.value = value.value;
                this.synonyms = (value.synonyms || []).slice();
                this.name = value.name;
                this.displayName = value.displayName;
                this.synonymCount = value.synonymCount;
                Entity.refineValues(this);
            }
            Entity.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Entity.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Entity.fromBinary = function (bytes) {
                var instance = new Entity();
                Entity.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Entity.refineValues = function (instance) {
                instance.value = instance.value || '';
                instance.synonyms = instance.synonyms || [];
                instance.name = instance.name || '';
                instance.displayName = instance.displayName || '';
                instance.synonymCount = instance.synonymCount || 0;
            };
            Entity.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.value = reader.readString();
                            break;
                        case 2:
                            (instance.synonyms = instance.synonyms || []).push(reader.readString());
                            break;
                        case 3:
                            instance.name = reader.readString();
                            break;
                        case 4:
                            instance.displayName = reader.readString();
                            break;
                        case 5:
                            instance.synonymCount = reader.readInt32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Entity.refineValues(instance);
            };
            Entity.toBinaryWriter = function (instance, writer) {
                if (instance.value) {
                    writer.writeString(1, instance.value);
                }
                if (instance.synonyms && instance.synonyms.length) {
                    writer.writeRepeatedString(2, instance.synonyms);
                }
                if (instance.name) {
                    writer.writeString(3, instance.name);
                }
                if (instance.displayName) {
                    writer.writeString(4, instance.displayName);
                }
                if (instance.synonymCount) {
                    writer.writeInt32(5, instance.synonymCount);
                }
            };
            Object.defineProperty(Entity.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Entity.prototype, "synonyms", {
                get: function () {
                    return this._synonyms;
                },
                set: function (value) {
                    this._synonyms = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Entity.prototype, "name", {
                get: function () {
                    return this._name;
                },
                set: function (value) {
                    this._name = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Entity.prototype, "displayName", {
                get: function () {
                    return this._displayName;
                },
                set: function (value) {
                    this._displayName = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Entity.prototype, "synonymCount", {
                get: function () {
                    return this._synonymCount;
                },
                set: function (value) {
                    this._synonymCount = value;
                },
                enumerable: false,
                configurable: true
            });
            Entity.prototype.toObject = function () {
                return {
                    value: this.value,
                    synonyms: (this.synonyms || []).slice(),
                    name: this.name,
                    displayName: this.displayName,
                    synonymCount: this.synonymCount
                };
            };
            Entity.prototype.toJSON = function () {
                return this.toObject();
            };
            return Entity;
        }());
        EntityType.Entity = Entity;
    })(exports.EntityType || (exports.EntityType = {}));
    var ListEntityTypesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListEntityTypesRequest value
         */
        function ListEntityTypesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.languageCode = value.languageCode;
            this.pageToken = value.pageToken;
            this.entityTypeView = value.entityTypeView;
            this.filterByCategory = value.filterByCategory;
            this.sortByField = value.sortByField
                ? new exports.EntityTypeSorting(value.sortByField)
                : undefined;
            ListEntityTypesRequest.refineValues(this);
        }
        ListEntityTypesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListEntityTypesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListEntityTypesRequest.fromBinary = function (bytes) {
            var instance = new ListEntityTypesRequest();
            ListEntityTypesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListEntityTypesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.languageCode = instance.languageCode || '';
            instance.pageToken = instance.pageToken || '';
            instance.entityTypeView = instance.entityTypeView || 0;
            instance.filterByCategory = instance.filterByCategory || 0;
            instance.sortByField = instance.sortByField || undefined;
        };
        ListEntityTypesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 4:
                        instance.pageToken = reader.readString();
                        break;
                    case 5:
                        instance.entityTypeView = reader.readEnum();
                        break;
                    case 6:
                        instance.filterByCategory = reader.readEnum();
                        break;
                    case 7:
                        instance.sortByField = new exports.EntityTypeSorting();
                        reader.readMessage(instance.sortByField, exports.EntityTypeSorting.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListEntityTypesRequest.refineValues(instance);
        };
        ListEntityTypesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.pageToken) {
                writer.writeString(4, instance.pageToken);
            }
            if (instance.entityTypeView) {
                writer.writeEnum(5, instance.entityTypeView);
            }
            if (instance.filterByCategory) {
                writer.writeEnum(6, instance.filterByCategory);
            }
            if (instance.sortByField) {
                writer.writeMessage(7, instance.sortByField, exports.EntityTypeSorting.toBinaryWriter);
            }
        };
        Object.defineProperty(ListEntityTypesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesRequest.prototype, "entityTypeView", {
            get: function () {
                return this._entityTypeView;
            },
            set: function (value) {
                this._entityTypeView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesRequest.prototype, "filterByCategory", {
            get: function () {
                return this._filterByCategory;
            },
            set: function (value) {
                this._filterByCategory = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesRequest.prototype, "sortByField", {
            get: function () {
                return this._sortByField;
            },
            set: function (value) {
                this._sortByField = value;
            },
            enumerable: false,
            configurable: true
        });
        ListEntityTypesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                languageCode: this.languageCode,
                pageToken: this.pageToken,
                entityTypeView: this.entityTypeView,
                filterByCategory: this.filterByCategory,
                sortByField: this.sortByField ? this.sortByField.toObject() : undefined
            };
        };
        ListEntityTypesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListEntityTypesRequest;
    }());
    var ListEntityTypesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListEntityTypesResponse value
         */
        function ListEntityTypesResponse(value) {
            value = value || {};
            this.entityTypes = (value.entityTypes || []).map(function (m) { return new exports.EntityType(m); });
            this.nextPageToken = value.nextPageToken;
            ListEntityTypesResponse.refineValues(this);
        }
        ListEntityTypesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListEntityTypesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListEntityTypesResponse.fromBinary = function (bytes) {
            var instance = new ListEntityTypesResponse();
            ListEntityTypesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListEntityTypesResponse.refineValues = function (instance) {
            instance.entityTypes = instance.entityTypes || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListEntityTypesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.EntityType();
                        reader.readMessage(messageInitializer1, exports.EntityType.fromBinaryReader);
                        (instance.entityTypes = instance.entityTypes || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListEntityTypesResponse.refineValues(instance);
        };
        ListEntityTypesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.entityTypes && instance.entityTypes.length) {
                writer.writeRepeatedMessage(1, instance.entityTypes, exports.EntityType.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListEntityTypesResponse.prototype, "entityTypes", {
            get: function () {
                return this._entityTypes;
            },
            set: function (value) {
                this._entityTypes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListEntityTypesResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListEntityTypesResponse.prototype.toObject = function () {
            return {
                entityTypes: (this.entityTypes || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListEntityTypesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListEntityTypesResponse;
    }());
    var GetEntityTypeRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetEntityTypeRequest value
         */
        function GetEntityTypeRequest(value) {
            value = value || {};
            this.name = value.name;
            this.languageCode = value.languageCode;
            this.pageToken = value.pageToken;
            GetEntityTypeRequest.refineValues(this);
        }
        GetEntityTypeRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetEntityTypeRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetEntityTypeRequest.fromBinary = function (bytes) {
            var instance = new GetEntityTypeRequest();
            GetEntityTypeRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetEntityTypeRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.languageCode = instance.languageCode || '';
            instance.pageToken = instance.pageToken || '';
        };
        GetEntityTypeRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetEntityTypeRequest.refineValues(instance);
        };
        GetEntityTypeRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.pageToken) {
                writer.writeString(5, instance.pageToken);
            }
        };
        Object.defineProperty(GetEntityTypeRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetEntityTypeRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetEntityTypeRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        GetEntityTypeRequest.prototype.toObject = function () {
            return {
                name: this.name,
                languageCode: this.languageCode,
                pageToken: this.pageToken
            };
        };
        GetEntityTypeRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetEntityTypeRequest;
    }());
    var CreateEntityTypeRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateEntityTypeRequest value
         */
        function CreateEntityTypeRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.entityType = value.entityType
                ? new exports.EntityType(value.entityType)
                : undefined;
            this.languageCode = value.languageCode;
            CreateEntityTypeRequest.refineValues(this);
        }
        CreateEntityTypeRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateEntityTypeRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateEntityTypeRequest.fromBinary = function (bytes) {
            var instance = new CreateEntityTypeRequest();
            CreateEntityTypeRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateEntityTypeRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.entityType = instance.entityType || undefined;
            instance.languageCode = instance.languageCode || '';
        };
        CreateEntityTypeRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.entityType = new exports.EntityType();
                        reader.readMessage(instance.entityType, exports.EntityType.fromBinaryReader);
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateEntityTypeRequest.refineValues(instance);
        };
        CreateEntityTypeRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entityType) {
                writer.writeMessage(2, instance.entityType, exports.EntityType.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
        };
        Object.defineProperty(CreateEntityTypeRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateEntityTypeRequest.prototype, "entityType", {
            get: function () {
                return this._entityType;
            },
            set: function (value) {
                this._entityType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateEntityTypeRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateEntityTypeRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entityType: this.entityType ? this.entityType.toObject() : undefined,
                languageCode: this.languageCode
            };
        };
        CreateEntityTypeRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateEntityTypeRequest;
    }());
    var UpdateEntityTypeRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateEntityTypeRequest value
         */
        function UpdateEntityTypeRequest(value) {
            value = value || {};
            this.entityType = value.entityType
                ? new exports.EntityType(value.entityType)
                : undefined;
            this.languageCode = value.languageCode;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            UpdateEntityTypeRequest.refineValues(this);
        }
        UpdateEntityTypeRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateEntityTypeRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateEntityTypeRequest.fromBinary = function (bytes) {
            var instance = new UpdateEntityTypeRequest();
            UpdateEntityTypeRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateEntityTypeRequest.refineValues = function (instance) {
            instance.entityType = instance.entityType || undefined;
            instance.languageCode = instance.languageCode || '';
            instance.updateMask = instance.updateMask || undefined;
        };
        UpdateEntityTypeRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.entityType = new exports.EntityType();
                        reader.readMessage(instance.entityType, exports.EntityType.fromBinaryReader);
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 3:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateEntityTypeRequest.refineValues(instance);
        };
        UpdateEntityTypeRequest.toBinaryWriter = function (instance, writer) {
            if (instance.entityType) {
                writer.writeMessage(1, instance.entityType, exports.EntityType.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.updateMask) {
                writer.writeMessage(3, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(UpdateEntityTypeRequest.prototype, "entityType", {
            get: function () {
                return this._entityType;
            },
            set: function (value) {
                this._entityType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateEntityTypeRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateEntityTypeRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateEntityTypeRequest.prototype.toObject = function () {
            return {
                entityType: this.entityType ? this.entityType.toObject() : undefined,
                languageCode: this.languageCode,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        UpdateEntityTypeRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateEntityTypeRequest;
    }());
    var DeleteEntityTypeRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteEntityTypeRequest value
         */
        function DeleteEntityTypeRequest(value) {
            value = value || {};
            this.name = value.name;
            DeleteEntityTypeRequest.refineValues(this);
        }
        DeleteEntityTypeRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteEntityTypeRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteEntityTypeRequest.fromBinary = function (bytes) {
            var instance = new DeleteEntityTypeRequest();
            DeleteEntityTypeRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteEntityTypeRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        DeleteEntityTypeRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteEntityTypeRequest.refineValues(instance);
        };
        DeleteEntityTypeRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(DeleteEntityTypeRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteEntityTypeRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        DeleteEntityTypeRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteEntityTypeRequest;
    }());
    exports.BatchUpdateEntityTypesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchUpdateEntityTypesRequest value
         */
        function BatchUpdateEntityTypesRequest(value) {
            this._entityTypeBatch = BatchUpdateEntityTypesRequest.EntityTypeBatchCase.none;
            value = value || {};
            this.parent = value.parent;
            this.entityTypeBatchUri = value.entityTypeBatchUri;
            this.entityTypeBatchInline = value.entityTypeBatchInline
                ? new EntityTypeBatch(value.entityTypeBatchInline)
                : undefined;
            this.languageCode = value.languageCode;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            BatchUpdateEntityTypesRequest.refineValues(this);
        }
        BatchUpdateEntityTypesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchUpdateEntityTypesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchUpdateEntityTypesRequest.fromBinary = function (bytes) {
            var instance = new BatchUpdateEntityTypesRequest();
            BatchUpdateEntityTypesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchUpdateEntityTypesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.languageCode = instance.languageCode || '';
            instance.updateMask = instance.updateMask || undefined;
        };
        BatchUpdateEntityTypesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.entityTypeBatchUri = reader.readString();
                        break;
                    case 3:
                        instance.entityTypeBatchInline = new EntityTypeBatch();
                        reader.readMessage(instance.entityTypeBatchInline, EntityTypeBatch.fromBinaryReader);
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchUpdateEntityTypesRequest.refineValues(instance);
        };
        BatchUpdateEntityTypesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entityTypeBatchUri || instance.entityTypeBatchUri === '') {
                writer.writeString(2, instance.entityTypeBatchUri);
            }
            if (instance.entityTypeBatchInline) {
                writer.writeMessage(3, instance.entityTypeBatchInline, EntityTypeBatch.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.updateMask) {
                writer.writeMessage(5, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "entityTypeBatchUri", {
            get: function () {
                return this._entityTypeBatchUri;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._entityTypeBatchInline = undefined;
                    this._entityTypeBatch =
                        BatchUpdateEntityTypesRequest.EntityTypeBatchCase.entityTypeBatchUri;
                }
                this._entityTypeBatchUri = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "entityTypeBatchInline", {
            get: function () {
                return this._entityTypeBatchInline;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._entityTypeBatchUri = undefined;
                    this._entityTypeBatch =
                        BatchUpdateEntityTypesRequest.EntityTypeBatchCase.entityTypeBatchInline;
                }
                this._entityTypeBatchInline = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntityTypesRequest.prototype, "entityTypeBatch", {
            get: function () {
                return this._entityTypeBatch;
            },
            enumerable: false,
            configurable: true
        });
        BatchUpdateEntityTypesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entityTypeBatchUri: this.entityTypeBatchUri,
                entityTypeBatchInline: this.entityTypeBatchInline
                    ? this.entityTypeBatchInline.toObject()
                    : undefined,
                languageCode: this.languageCode,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        BatchUpdateEntityTypesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchUpdateEntityTypesRequest;
    }());
    (function (BatchUpdateEntityTypesRequest) {
        var EntityTypeBatchCase;
        (function (EntityTypeBatchCase) {
            EntityTypeBatchCase[EntityTypeBatchCase["none"] = 0] = "none";
            EntityTypeBatchCase[EntityTypeBatchCase["entityTypeBatchUri"] = 1] = "entityTypeBatchUri";
            EntityTypeBatchCase[EntityTypeBatchCase["entityTypeBatchInline"] = 2] = "entityTypeBatchInline";
        })(EntityTypeBatchCase = BatchUpdateEntityTypesRequest.EntityTypeBatchCase || (BatchUpdateEntityTypesRequest.EntityTypeBatchCase = {}));
    })(exports.BatchUpdateEntityTypesRequest || (exports.BatchUpdateEntityTypesRequest = {}));
    var BatchUpdateEntityTypesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchUpdateEntityTypesResponse value
         */
        function BatchUpdateEntityTypesResponse(value) {
            value = value || {};
            this.entityTypes = (value.entityTypes || []).map(function (m) { return new exports.EntityType(m); });
            BatchUpdateEntityTypesResponse.refineValues(this);
        }
        BatchUpdateEntityTypesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchUpdateEntityTypesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchUpdateEntityTypesResponse.fromBinary = function (bytes) {
            var instance = new BatchUpdateEntityTypesResponse();
            BatchUpdateEntityTypesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchUpdateEntityTypesResponse.refineValues = function (instance) {
            instance.entityTypes = instance.entityTypes || [];
        };
        BatchUpdateEntityTypesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.EntityType();
                        reader.readMessage(messageInitializer1, exports.EntityType.fromBinaryReader);
                        (instance.entityTypes = instance.entityTypes || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchUpdateEntityTypesResponse.refineValues(instance);
        };
        BatchUpdateEntityTypesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.entityTypes && instance.entityTypes.length) {
                writer.writeRepeatedMessage(1, instance.entityTypes, exports.EntityType.toBinaryWriter);
            }
        };
        Object.defineProperty(BatchUpdateEntityTypesResponse.prototype, "entityTypes", {
            get: function () {
                return this._entityTypes;
            },
            set: function (value) {
                this._entityTypes = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchUpdateEntityTypesResponse.prototype.toObject = function () {
            return {
                entityTypes: (this.entityTypes || []).map(function (m) { return m.toObject(); })
            };
        };
        BatchUpdateEntityTypesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchUpdateEntityTypesResponse;
    }());
    var BatchDeleteEntityTypesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchDeleteEntityTypesRequest value
         */
        function BatchDeleteEntityTypesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.entityTypeNames = (value.entityTypeNames || []).slice();
            BatchDeleteEntityTypesRequest.refineValues(this);
        }
        BatchDeleteEntityTypesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchDeleteEntityTypesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchDeleteEntityTypesRequest.fromBinary = function (bytes) {
            var instance = new BatchDeleteEntityTypesRequest();
            BatchDeleteEntityTypesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchDeleteEntityTypesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.entityTypeNames = instance.entityTypeNames || [];
        };
        BatchDeleteEntityTypesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        (instance.entityTypeNames = instance.entityTypeNames || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchDeleteEntityTypesRequest.refineValues(instance);
        };
        BatchDeleteEntityTypesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entityTypeNames && instance.entityTypeNames.length) {
                writer.writeRepeatedString(2, instance.entityTypeNames);
            }
        };
        Object.defineProperty(BatchDeleteEntityTypesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchDeleteEntityTypesRequest.prototype, "entityTypeNames", {
            get: function () {
                return this._entityTypeNames;
            },
            set: function (value) {
                this._entityTypeNames = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchDeleteEntityTypesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entityTypeNames: (this.entityTypeNames || []).slice()
            };
        };
        BatchDeleteEntityTypesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchDeleteEntityTypesRequest;
    }());
    var BatchCreateEntitiesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchCreateEntitiesRequest value
         */
        function BatchCreateEntitiesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.entities = (value.entities || []).map(function (m) { return new exports.EntityType.Entity(m); });
            this.languageCode = value.languageCode;
            BatchCreateEntitiesRequest.refineValues(this);
        }
        BatchCreateEntitiesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchCreateEntitiesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchCreateEntitiesRequest.fromBinary = function (bytes) {
            var instance = new BatchCreateEntitiesRequest();
            BatchCreateEntitiesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchCreateEntitiesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.entities = instance.entities || [];
            instance.languageCode = instance.languageCode || '';
        };
        BatchCreateEntitiesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new exports.EntityType.Entity();
                        reader.readMessage(messageInitializer2, exports.EntityType.Entity.fromBinaryReader);
                        (instance.entities = instance.entities || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchCreateEntitiesRequest.refineValues(instance);
        };
        BatchCreateEntitiesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entities && instance.entities.length) {
                writer.writeRepeatedMessage(2, instance.entities, exports.EntityType.Entity.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
        };
        Object.defineProperty(BatchCreateEntitiesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchCreateEntitiesRequest.prototype, "entities", {
            get: function () {
                return this._entities;
            },
            set: function (value) {
                this._entities = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchCreateEntitiesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchCreateEntitiesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entities: (this.entities || []).map(function (m) { return m.toObject(); }),
                languageCode: this.languageCode
            };
        };
        BatchCreateEntitiesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchCreateEntitiesRequest;
    }());
    var BatchUpdateEntitiesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchUpdateEntitiesRequest value
         */
        function BatchUpdateEntitiesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.entities = (value.entities || []).map(function (m) { return new exports.EntityType.Entity(m); });
            this.languageCode = value.languageCode;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            BatchUpdateEntitiesRequest.refineValues(this);
        }
        BatchUpdateEntitiesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchUpdateEntitiesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchUpdateEntitiesRequest.fromBinary = function (bytes) {
            var instance = new BatchUpdateEntitiesRequest();
            BatchUpdateEntitiesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchUpdateEntitiesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.entities = instance.entities || [];
            instance.languageCode = instance.languageCode || '';
            instance.updateMask = instance.updateMask || undefined;
        };
        BatchUpdateEntitiesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new exports.EntityType.Entity();
                        reader.readMessage(messageInitializer2, exports.EntityType.Entity.fromBinaryReader);
                        (instance.entities = instance.entities || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    case 4:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchUpdateEntitiesRequest.refineValues(instance);
        };
        BatchUpdateEntitiesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entities && instance.entities.length) {
                writer.writeRepeatedMessage(2, instance.entities, exports.EntityType.Entity.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
            if (instance.updateMask) {
                writer.writeMessage(4, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(BatchUpdateEntitiesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntitiesRequest.prototype, "entities", {
            get: function () {
                return this._entities;
            },
            set: function (value) {
                this._entities = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntitiesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchUpdateEntitiesRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchUpdateEntitiesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entities: (this.entities || []).map(function (m) { return m.toObject(); }),
                languageCode: this.languageCode,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        BatchUpdateEntitiesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchUpdateEntitiesRequest;
    }());
    var BatchDeleteEntitiesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BatchDeleteEntitiesRequest value
         */
        function BatchDeleteEntitiesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.entityValues = (value.entityValues || []).slice();
            this.languageCode = value.languageCode;
            BatchDeleteEntitiesRequest.refineValues(this);
        }
        BatchDeleteEntitiesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BatchDeleteEntitiesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BatchDeleteEntitiesRequest.fromBinary = function (bytes) {
            var instance = new BatchDeleteEntitiesRequest();
            BatchDeleteEntitiesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BatchDeleteEntitiesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.entityValues = instance.entityValues || [];
            instance.languageCode = instance.languageCode || '';
        };
        BatchDeleteEntitiesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        (instance.entityValues = instance.entityValues || []).push(reader.readString());
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            BatchDeleteEntitiesRequest.refineValues(instance);
        };
        BatchDeleteEntitiesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.entityValues && instance.entityValues.length) {
                writer.writeRepeatedString(2, instance.entityValues);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
        };
        Object.defineProperty(BatchDeleteEntitiesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchDeleteEntitiesRequest.prototype, "entityValues", {
            get: function () {
                return this._entityValues;
            },
            set: function (value) {
                this._entityValues = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BatchDeleteEntitiesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        BatchDeleteEntitiesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                entityValues: (this.entityValues || []).slice(),
                languageCode: this.languageCode
            };
        };
        BatchDeleteEntitiesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BatchDeleteEntitiesRequest;
    }());
    var EntityTypeBatch = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EntityTypeBatch value
         */
        function EntityTypeBatch(value) {
            value = value || {};
            this.entityTypes = (value.entityTypes || []).map(function (m) { return new exports.EntityType(m); });
            EntityTypeBatch.refineValues(this);
        }
        EntityTypeBatch.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EntityTypeBatch.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EntityTypeBatch.fromBinary = function (bytes) {
            var instance = new EntityTypeBatch();
            EntityTypeBatch.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EntityTypeBatch.refineValues = function (instance) {
            instance.entityTypes = instance.entityTypes || [];
        };
        EntityTypeBatch.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.EntityType();
                        reader.readMessage(messageInitializer1, exports.EntityType.fromBinaryReader);
                        (instance.entityTypes = instance.entityTypes || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            EntityTypeBatch.refineValues(instance);
        };
        EntityTypeBatch.toBinaryWriter = function (instance, writer) {
            if (instance.entityTypes && instance.entityTypes.length) {
                writer.writeRepeatedMessage(1, instance.entityTypes, exports.EntityType.toBinaryWriter);
            }
        };
        Object.defineProperty(EntityTypeBatch.prototype, "entityTypes", {
            get: function () {
                return this._entityTypes;
            },
            set: function (value) {
                this._entityTypes = value;
            },
            enumerable: false,
            configurable: true
        });
        EntityTypeBatch.prototype.toObject = function () {
            return {
                entityTypes: (this.entityTypes || []).map(function (m) { return m.toObject(); })
            };
        };
        EntityTypeBatch.prototype.toJSON = function () {
            return this.toObject();
        };
        return EntityTypeBatch;
    }());
    exports.EntityTypeSorting = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EntityTypeSorting value
         */
        function EntityTypeSorting(value) {
            value = value || {};
            this.sortingField = value.sortingField;
            this.sortingMode = value.sortingMode;
            EntityTypeSorting.refineValues(this);
        }
        EntityTypeSorting.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EntityTypeSorting.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EntityTypeSorting.fromBinary = function (bytes) {
            var instance = new EntityTypeSorting();
            EntityTypeSorting.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EntityTypeSorting.refineValues = function (instance) {
            instance.sortingField = instance.sortingField || 0;
            instance.sortingMode = instance.sortingMode || 0;
        };
        EntityTypeSorting.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sortingField = reader.readEnum();
                        break;
                    case 2:
                        instance.sortingMode = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            EntityTypeSorting.refineValues(instance);
        };
        EntityTypeSorting.toBinaryWriter = function (instance, writer) {
            if (instance.sortingField) {
                writer.writeEnum(1, instance.sortingField);
            }
            if (instance.sortingMode) {
                writer.writeEnum(2, instance.sortingMode);
            }
        };
        Object.defineProperty(EntityTypeSorting.prototype, "sortingField", {
            get: function () {
                return this._sortingField;
            },
            set: function (value) {
                this._sortingField = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityTypeSorting.prototype, "sortingMode", {
            get: function () {
                return this._sortingMode;
            },
            set: function (value) {
                this._sortingMode = value;
            },
            enumerable: false,
            configurable: true
        });
        EntityTypeSorting.prototype.toObject = function () {
            return {
                sortingField: this.sortingField,
                sortingMode: this.sortingMode
            };
        };
        EntityTypeSorting.prototype.toJSON = function () {
            return this.toObject();
        };
        return EntityTypeSorting;
    }());
    (function (EntityTypeSorting) {
        var EntityTypeSortingField;
        (function (EntityTypeSortingField) {
            EntityTypeSortingField[EntityTypeSortingField["noEntityTypeSorting"] = 0] = "noEntityTypeSorting";
            EntityTypeSortingField[EntityTypeSortingField["sortEntityTypeByName"] = 1] = "sortEntityTypeByName";
            EntityTypeSortingField[EntityTypeSortingField["sortEntityTypeByCreationDate"] = 2] = "sortEntityTypeByCreationDate";
            EntityTypeSortingField[EntityTypeSortingField["sortEntityTypeByLastUpdated"] = 3] = "sortEntityTypeByLastUpdated";
            EntityTypeSortingField[EntityTypeSortingField["sortEntityTypeByEntityValueCount"] = 4] = "sortEntityTypeByEntityValueCount";
            EntityTypeSortingField[EntityTypeSortingField["sortEntityTypeBySynonymCount"] = 5] = "sortEntityTypeBySynonymCount";
        })(EntityTypeSortingField = EntityTypeSorting.EntityTypeSortingField || (EntityTypeSorting.EntityTypeSortingField = {}));
    })(exports.EntityTypeSorting || (exports.EntityTypeSorting = {}));

    exports.AudioEncoding = void 0;
    (function (AudioEncoding) {
        AudioEncoding[AudioEncoding["audioEncodingUnspecified"] = 0] = "audioEncodingUnspecified";
        AudioEncoding[AudioEncoding["audioEncodingLinear16"] = 1] = "audioEncodingLinear16";
        AudioEncoding[AudioEncoding["audioEncodingFlac"] = 2] = "audioEncodingFlac";
        AudioEncoding[AudioEncoding["audioEncodingMulaw"] = 3] = "audioEncodingMulaw";
        AudioEncoding[AudioEncoding["audioEncodingAmr"] = 4] = "audioEncodingAmr";
        AudioEncoding[AudioEncoding["audioEncodingAmrWb"] = 5] = "audioEncodingAmrWb";
        AudioEncoding[AudioEncoding["audioEncodingOggOpus"] = 6] = "audioEncodingOggOpus";
        AudioEncoding[AudioEncoding["audioEncodingSpeexWithHeaderByte"] = 7] = "audioEncodingSpeexWithHeaderByte";
    })(exports.AudioEncoding || (exports.AudioEncoding = {}));
    var DetectIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DetectIntentRequest value
         */
        function DetectIntentRequest(value) {
            value = value || {};
            this.session = value.session;
            this.queryParams = value.queryParams
                ? new QueryParameters(value.queryParams)
                : undefined;
            this.queryInput = value.queryInput
                ? new exports.QueryInput(value.queryInput)
                : undefined;
            this.inputAudio = value.inputAudio;
            DetectIntentRequest.refineValues(this);
        }
        DetectIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DetectIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DetectIntentRequest.fromBinary = function (bytes) {
            var instance = new DetectIntentRequest();
            DetectIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DetectIntentRequest.refineValues = function (instance) {
            instance.session = instance.session || '';
            instance.queryParams = instance.queryParams || undefined;
            instance.queryInput = instance.queryInput || undefined;
            instance.inputAudio = instance.inputAudio || new Uint8Array();
        };
        DetectIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.session = reader.readString();
                        break;
                    case 2:
                        instance.queryParams = new QueryParameters();
                        reader.readMessage(instance.queryParams, QueryParameters.fromBinaryReader);
                        break;
                    case 3:
                        instance.queryInput = new exports.QueryInput();
                        reader.readMessage(instance.queryInput, exports.QueryInput.fromBinaryReader);
                        break;
                    case 5:
                        instance.inputAudio = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DetectIntentRequest.refineValues(instance);
        };
        DetectIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.session) {
                writer.writeString(1, instance.session);
            }
            if (instance.queryParams) {
                writer.writeMessage(2, instance.queryParams, QueryParameters.toBinaryWriter);
            }
            if (instance.queryInput) {
                writer.writeMessage(3, instance.queryInput, exports.QueryInput.toBinaryWriter);
            }
            if (instance.inputAudio && instance.inputAudio.length) {
                writer.writeBytes(5, instance.inputAudio);
            }
        };
        Object.defineProperty(DetectIntentRequest.prototype, "session", {
            get: function () {
                return this._session;
            },
            set: function (value) {
                this._session = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectIntentRequest.prototype, "queryParams", {
            get: function () {
                return this._queryParams;
            },
            set: function (value) {
                this._queryParams = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectIntentRequest.prototype, "queryInput", {
            get: function () {
                return this._queryInput;
            },
            set: function (value) {
                this._queryInput = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectIntentRequest.prototype, "inputAudio", {
            get: function () {
                return this._inputAudio;
            },
            set: function (value) {
                this._inputAudio = value;
            },
            enumerable: false,
            configurable: true
        });
        DetectIntentRequest.prototype.toObject = function () {
            return {
                session: this.session,
                queryParams: this.queryParams ? this.queryParams.toObject() : undefined,
                queryInput: this.queryInput ? this.queryInput.toObject() : undefined,
                inputAudio: this.inputAudio
                    ? this.inputAudio.subarray(0)
                    : new Uint8Array()
            };
        };
        DetectIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DetectIntentRequest;
    }());
    var DetectIntentResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DetectIntentResponse value
         */
        function DetectIntentResponse(value) {
            value = value || {};
            this.responseId = value.responseId;
            this.queryResult = value.queryResult
                ? new QueryResult(value.queryResult)
                : undefined;
            this.webhookStatus = value.webhookStatus
                ? new Status(value.webhookStatus)
                : undefined;
            DetectIntentResponse.refineValues(this);
        }
        DetectIntentResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DetectIntentResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DetectIntentResponse.fromBinary = function (bytes) {
            var instance = new DetectIntentResponse();
            DetectIntentResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DetectIntentResponse.refineValues = function (instance) {
            instance.responseId = instance.responseId || '';
            instance.queryResult = instance.queryResult || undefined;
            instance.webhookStatus = instance.webhookStatus || undefined;
        };
        DetectIntentResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.responseId = reader.readString();
                        break;
                    case 2:
                        instance.queryResult = new QueryResult();
                        reader.readMessage(instance.queryResult, QueryResult.fromBinaryReader);
                        break;
                    case 3:
                        instance.webhookStatus = new Status();
                        reader.readMessage(instance.webhookStatus, Status.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            DetectIntentResponse.refineValues(instance);
        };
        DetectIntentResponse.toBinaryWriter = function (instance, writer) {
            if (instance.responseId) {
                writer.writeString(1, instance.responseId);
            }
            if (instance.queryResult) {
                writer.writeMessage(2, instance.queryResult, QueryResult.toBinaryWriter);
            }
            if (instance.webhookStatus) {
                writer.writeMessage(3, instance.webhookStatus, Status.toBinaryWriter);
            }
        };
        Object.defineProperty(DetectIntentResponse.prototype, "responseId", {
            get: function () {
                return this._responseId;
            },
            set: function (value) {
                this._responseId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectIntentResponse.prototype, "queryResult", {
            get: function () {
                return this._queryResult;
            },
            set: function (value) {
                this._queryResult = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectIntentResponse.prototype, "webhookStatus", {
            get: function () {
                return this._webhookStatus;
            },
            set: function (value) {
                this._webhookStatus = value;
            },
            enumerable: false,
            configurable: true
        });
        DetectIntentResponse.prototype.toObject = function () {
            return {
                responseId: this.responseId,
                queryResult: this.queryResult ? this.queryResult.toObject() : undefined,
                webhookStatus: this.webhookStatus
                    ? this.webhookStatus.toObject()
                    : undefined
            };
        };
        DetectIntentResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return DetectIntentResponse;
    }());
    var QueryParameters = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param QueryParameters value
         */
        function QueryParameters(value) {
            value = value || {};
            this.timeZone = value.timeZone;
            this.geoLocation = value.geoLocation
                ? new LatLng(value.geoLocation)
                : undefined;
            this.contexts = (value.contexts || []).map(function (m) { return new exports.Context(m); });
            this.resetContexts = value.resetContexts;
            this.payload = value.payload
                ? new exports.Struct(value.payload)
                : undefined;
            QueryParameters.refineValues(this);
        }
        QueryParameters.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            QueryParameters.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        QueryParameters.fromBinary = function (bytes) {
            var instance = new QueryParameters();
            QueryParameters.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        QueryParameters.refineValues = function (instance) {
            instance.timeZone = instance.timeZone || '';
            instance.geoLocation = instance.geoLocation || undefined;
            instance.contexts = instance.contexts || [];
            instance.resetContexts = instance.resetContexts || false;
            instance.payload = instance.payload || undefined;
        };
        QueryParameters.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.timeZone = reader.readString();
                        break;
                    case 2:
                        instance.geoLocation = new LatLng();
                        reader.readMessage(instance.geoLocation, LatLng.fromBinaryReader);
                        break;
                    case 3:
                        var messageInitializer3 = new exports.Context();
                        reader.readMessage(messageInitializer3, exports.Context.fromBinaryReader);
                        (instance.contexts = instance.contexts || []).push(messageInitializer3);
                        break;
                    case 4:
                        instance.resetContexts = reader.readBool();
                        break;
                    case 6:
                        instance.payload = new exports.Struct();
                        reader.readMessage(instance.payload, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            QueryParameters.refineValues(instance);
        };
        QueryParameters.toBinaryWriter = function (instance, writer) {
            if (instance.timeZone) {
                writer.writeString(1, instance.timeZone);
            }
            if (instance.geoLocation) {
                writer.writeMessage(2, instance.geoLocation, LatLng.toBinaryWriter);
            }
            if (instance.contexts && instance.contexts.length) {
                writer.writeRepeatedMessage(3, instance.contexts, exports.Context.toBinaryWriter);
            }
            if (instance.resetContexts) {
                writer.writeBool(4, instance.resetContexts);
            }
            if (instance.payload) {
                writer.writeMessage(6, instance.payload, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(QueryParameters.prototype, "timeZone", {
            get: function () {
                return this._timeZone;
            },
            set: function (value) {
                this._timeZone = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryParameters.prototype, "geoLocation", {
            get: function () {
                return this._geoLocation;
            },
            set: function (value) {
                this._geoLocation = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryParameters.prototype, "contexts", {
            get: function () {
                return this._contexts;
            },
            set: function (value) {
                this._contexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryParameters.prototype, "resetContexts", {
            get: function () {
                return this._resetContexts;
            },
            set: function (value) {
                this._resetContexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryParameters.prototype, "payload", {
            get: function () {
                return this._payload;
            },
            set: function (value) {
                this._payload = value;
            },
            enumerable: false,
            configurable: true
        });
        QueryParameters.prototype.toObject = function () {
            return {
                timeZone: this.timeZone,
                geoLocation: this.geoLocation ? this.geoLocation.toObject() : undefined,
                contexts: (this.contexts || []).map(function (m) { return m.toObject(); }),
                resetContexts: this.resetContexts,
                payload: this.payload ? this.payload.toObject() : undefined
            };
        };
        QueryParameters.prototype.toJSON = function () {
            return this.toObject();
        };
        return QueryParameters;
    }());
    exports.QueryInput = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param QueryInput value
         */
        function QueryInput(value) {
            this._input = QueryInput.InputCase.none;
            value = value || {};
            this.audioConfig = value.audioConfig
                ? new InputAudioConfig(value.audioConfig)
                : undefined;
            this.text = value.text ? new TextInput(value.text) : undefined;
            this.event = value.event ? new EventInput(value.event) : undefined;
            QueryInput.refineValues(this);
        }
        QueryInput.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            QueryInput.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        QueryInput.fromBinary = function (bytes) {
            var instance = new QueryInput();
            QueryInput.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        QueryInput.refineValues = function (instance) { };
        QueryInput.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.audioConfig = new InputAudioConfig();
                        reader.readMessage(instance.audioConfig, InputAudioConfig.fromBinaryReader);
                        break;
                    case 2:
                        instance.text = new TextInput();
                        reader.readMessage(instance.text, TextInput.fromBinaryReader);
                        break;
                    case 3:
                        instance.event = new EventInput();
                        reader.readMessage(instance.event, EventInput.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            QueryInput.refineValues(instance);
        };
        QueryInput.toBinaryWriter = function (instance, writer) {
            if (instance.audioConfig) {
                writer.writeMessage(1, instance.audioConfig, InputAudioConfig.toBinaryWriter);
            }
            if (instance.text) {
                writer.writeMessage(2, instance.text, TextInput.toBinaryWriter);
            }
            if (instance.event) {
                writer.writeMessage(3, instance.event, EventInput.toBinaryWriter);
            }
        };
        Object.defineProperty(QueryInput.prototype, "audioConfig", {
            get: function () {
                return this._audioConfig;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._text = this._event = undefined;
                    this._input = QueryInput.InputCase.audioConfig;
                }
                this._audioConfig = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryInput.prototype, "text", {
            get: function () {
                return this._text;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._audioConfig = this._event = undefined;
                    this._input = QueryInput.InputCase.text;
                }
                this._text = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryInput.prototype, "event", {
            get: function () {
                return this._event;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._audioConfig = this._text = undefined;
                    this._input = QueryInput.InputCase.event;
                }
                this._event = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryInput.prototype, "input", {
            get: function () {
                return this._input;
            },
            enumerable: false,
            configurable: true
        });
        QueryInput.prototype.toObject = function () {
            return {
                audioConfig: this.audioConfig ? this.audioConfig.toObject() : undefined,
                text: this.text ? this.text.toObject() : undefined,
                event: this.event ? this.event.toObject() : undefined
            };
        };
        QueryInput.prototype.toJSON = function () {
            return this.toObject();
        };
        return QueryInput;
    }());
    (function (QueryInput) {
        var InputCase;
        (function (InputCase) {
            InputCase[InputCase["none"] = 0] = "none";
            InputCase[InputCase["audioConfig"] = 1] = "audioConfig";
            InputCase[InputCase["text"] = 2] = "text";
            InputCase[InputCase["event"] = 3] = "event";
        })(InputCase = QueryInput.InputCase || (QueryInput.InputCase = {}));
    })(exports.QueryInput || (exports.QueryInput = {}));
    var QueryResult = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param QueryResult value
         */
        function QueryResult(value) {
            value = value || {};
            this.queryText = value.queryText;
            this.languageCode = value.languageCode;
            this.speechRecognitionConfidence = value.speechRecognitionConfidence;
            this.action = value.action;
            this.parameters = value.parameters
                ? new exports.Struct(value.parameters)
                : undefined;
            this.allRequiredParamsPresent = value.allRequiredParamsPresent;
            this.fulfillmentText = value.fulfillmentText;
            this.fulfillmentMessages = (value.fulfillmentMessages || []).map(function (m) { return new exports.Intent.Message(m); });
            this.webhookSource = value.webhookSource;
            this.webhookPayload = value.webhookPayload
                ? new exports.Struct(value.webhookPayload)
                : undefined;
            this.outputContexts = (value.outputContexts || []).map(function (m) { return new exports.Context(m); });
            this.intent = value.intent
                ? new exports.Intent(value.intent)
                : undefined;
            this.intentDetectionConfidence = value.intentDetectionConfidence;
            this.diagnosticInfo = value.diagnosticInfo
                ? new exports.Struct(value.diagnosticInfo)
                : undefined;
            QueryResult.refineValues(this);
        }
        QueryResult.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            QueryResult.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        QueryResult.fromBinary = function (bytes) {
            var instance = new QueryResult();
            QueryResult.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        QueryResult.refineValues = function (instance) {
            instance.queryText = instance.queryText || '';
            instance.languageCode = instance.languageCode || '';
            instance.speechRecognitionConfidence =
                instance.speechRecognitionConfidence || 0;
            instance.action = instance.action || '';
            instance.parameters = instance.parameters || undefined;
            instance.allRequiredParamsPresent =
                instance.allRequiredParamsPresent || false;
            instance.fulfillmentText = instance.fulfillmentText || '';
            instance.fulfillmentMessages = instance.fulfillmentMessages || [];
            instance.webhookSource = instance.webhookSource || '';
            instance.webhookPayload = instance.webhookPayload || undefined;
            instance.outputContexts = instance.outputContexts || [];
            instance.intent = instance.intent || undefined;
            instance.intentDetectionConfidence =
                instance.intentDetectionConfidence || 0;
            instance.diagnosticInfo = instance.diagnosticInfo || undefined;
        };
        QueryResult.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.queryText = reader.readString();
                        break;
                    case 15:
                        instance.languageCode = reader.readString();
                        break;
                    case 2:
                        instance.speechRecognitionConfidence = reader.readFloat();
                        break;
                    case 3:
                        instance.action = reader.readString();
                        break;
                    case 4:
                        instance.parameters = new exports.Struct();
                        reader.readMessage(instance.parameters, exports.Struct.fromBinaryReader);
                        break;
                    case 5:
                        instance.allRequiredParamsPresent = reader.readBool();
                        break;
                    case 6:
                        instance.fulfillmentText = reader.readString();
                        break;
                    case 7:
                        var messageInitializer7 = new exports.Intent.Message();
                        reader.readMessage(messageInitializer7, exports.Intent.Message.fromBinaryReader);
                        (instance.fulfillmentMessages =
                            instance.fulfillmentMessages || []).push(messageInitializer7);
                        break;
                    case 8:
                        instance.webhookSource = reader.readString();
                        break;
                    case 9:
                        instance.webhookPayload = new exports.Struct();
                        reader.readMessage(instance.webhookPayload, exports.Struct.fromBinaryReader);
                        break;
                    case 10:
                        var messageInitializer10 = new exports.Context();
                        reader.readMessage(messageInitializer10, exports.Context.fromBinaryReader);
                        (instance.outputContexts = instance.outputContexts || []).push(messageInitializer10);
                        break;
                    case 11:
                        instance.intent = new exports.Intent();
                        reader.readMessage(instance.intent, exports.Intent.fromBinaryReader);
                        break;
                    case 12:
                        instance.intentDetectionConfidence = reader.readFloat();
                        break;
                    case 14:
                        instance.diagnosticInfo = new exports.Struct();
                        reader.readMessage(instance.diagnosticInfo, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            QueryResult.refineValues(instance);
        };
        QueryResult.toBinaryWriter = function (instance, writer) {
            if (instance.queryText) {
                writer.writeString(1, instance.queryText);
            }
            if (instance.languageCode) {
                writer.writeString(15, instance.languageCode);
            }
            if (instance.speechRecognitionConfidence) {
                writer.writeFloat(2, instance.speechRecognitionConfidence);
            }
            if (instance.action) {
                writer.writeString(3, instance.action);
            }
            if (instance.parameters) {
                writer.writeMessage(4, instance.parameters, exports.Struct.toBinaryWriter);
            }
            if (instance.allRequiredParamsPresent) {
                writer.writeBool(5, instance.allRequiredParamsPresent);
            }
            if (instance.fulfillmentText) {
                writer.writeString(6, instance.fulfillmentText);
            }
            if (instance.fulfillmentMessages && instance.fulfillmentMessages.length) {
                writer.writeRepeatedMessage(7, instance.fulfillmentMessages, exports.Intent.Message.toBinaryWriter);
            }
            if (instance.webhookSource) {
                writer.writeString(8, instance.webhookSource);
            }
            if (instance.webhookPayload) {
                writer.writeMessage(9, instance.webhookPayload, exports.Struct.toBinaryWriter);
            }
            if (instance.outputContexts && instance.outputContexts.length) {
                writer.writeRepeatedMessage(10, instance.outputContexts, exports.Context.toBinaryWriter);
            }
            if (instance.intent) {
                writer.writeMessage(11, instance.intent, exports.Intent.toBinaryWriter);
            }
            if (instance.intentDetectionConfidence) {
                writer.writeFloat(12, instance.intentDetectionConfidence);
            }
            if (instance.diagnosticInfo) {
                writer.writeMessage(14, instance.diagnosticInfo, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(QueryResult.prototype, "queryText", {
            get: function () {
                return this._queryText;
            },
            set: function (value) {
                this._queryText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "speechRecognitionConfidence", {
            get: function () {
                return this._speechRecognitionConfidence;
            },
            set: function (value) {
                this._speechRecognitionConfidence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "action", {
            get: function () {
                return this._action;
            },
            set: function (value) {
                this._action = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "parameters", {
            get: function () {
                return this._parameters;
            },
            set: function (value) {
                this._parameters = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "allRequiredParamsPresent", {
            get: function () {
                return this._allRequiredParamsPresent;
            },
            set: function (value) {
                this._allRequiredParamsPresent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "fulfillmentText", {
            get: function () {
                return this._fulfillmentText;
            },
            set: function (value) {
                this._fulfillmentText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "fulfillmentMessages", {
            get: function () {
                return this._fulfillmentMessages;
            },
            set: function (value) {
                this._fulfillmentMessages = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "webhookSource", {
            get: function () {
                return this._webhookSource;
            },
            set: function (value) {
                this._webhookSource = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "webhookPayload", {
            get: function () {
                return this._webhookPayload;
            },
            set: function (value) {
                this._webhookPayload = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "outputContexts", {
            get: function () {
                return this._outputContexts;
            },
            set: function (value) {
                this._outputContexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "intent", {
            get: function () {
                return this._intent;
            },
            set: function (value) {
                this._intent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "intentDetectionConfidence", {
            get: function () {
                return this._intentDetectionConfidence;
            },
            set: function (value) {
                this._intentDetectionConfidence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(QueryResult.prototype, "diagnosticInfo", {
            get: function () {
                return this._diagnosticInfo;
            },
            set: function (value) {
                this._diagnosticInfo = value;
            },
            enumerable: false,
            configurable: true
        });
        QueryResult.prototype.toObject = function () {
            return {
                queryText: this.queryText,
                languageCode: this.languageCode,
                speechRecognitionConfidence: this.speechRecognitionConfidence,
                action: this.action,
                parameters: this.parameters ? this.parameters.toObject() : undefined,
                allRequiredParamsPresent: this.allRequiredParamsPresent,
                fulfillmentText: this.fulfillmentText,
                fulfillmentMessages: (this.fulfillmentMessages || []).map(function (m) { return m.toObject(); }),
                webhookSource: this.webhookSource,
                webhookPayload: this.webhookPayload
                    ? this.webhookPayload.toObject()
                    : undefined,
                outputContexts: (this.outputContexts || []).map(function (m) { return m.toObject(); }),
                intent: this.intent ? this.intent.toObject() : undefined,
                intentDetectionConfidence: this.intentDetectionConfidence,
                diagnosticInfo: this.diagnosticInfo
                    ? this.diagnosticInfo.toObject()
                    : undefined
            };
        };
        QueryResult.prototype.toJSON = function () {
            return this.toObject();
        };
        return QueryResult;
    }());
    var StreamingDetectIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param StreamingDetectIntentRequest value
         */
        function StreamingDetectIntentRequest(value) {
            value = value || {};
            this.session = value.session;
            this.queryParams = value.queryParams
                ? new QueryParameters(value.queryParams)
                : undefined;
            this.queryInput = value.queryInput
                ? new exports.QueryInput(value.queryInput)
                : undefined;
            this.singleUtterance = value.singleUtterance;
            this.inputAudio = value.inputAudio;
            StreamingDetectIntentRequest.refineValues(this);
        }
        StreamingDetectIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            StreamingDetectIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        StreamingDetectIntentRequest.fromBinary = function (bytes) {
            var instance = new StreamingDetectIntentRequest();
            StreamingDetectIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        StreamingDetectIntentRequest.refineValues = function (instance) {
            instance.session = instance.session || '';
            instance.queryParams = instance.queryParams || undefined;
            instance.queryInput = instance.queryInput || undefined;
            instance.singleUtterance = instance.singleUtterance || false;
            instance.inputAudio = instance.inputAudio || new Uint8Array();
        };
        StreamingDetectIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.session = reader.readString();
                        break;
                    case 2:
                        instance.queryParams = new QueryParameters();
                        reader.readMessage(instance.queryParams, QueryParameters.fromBinaryReader);
                        break;
                    case 3:
                        instance.queryInput = new exports.QueryInput();
                        reader.readMessage(instance.queryInput, exports.QueryInput.fromBinaryReader);
                        break;
                    case 4:
                        instance.singleUtterance = reader.readBool();
                        break;
                    case 6:
                        instance.inputAudio = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            StreamingDetectIntentRequest.refineValues(instance);
        };
        StreamingDetectIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.session) {
                writer.writeString(1, instance.session);
            }
            if (instance.queryParams) {
                writer.writeMessage(2, instance.queryParams, QueryParameters.toBinaryWriter);
            }
            if (instance.queryInput) {
                writer.writeMessage(3, instance.queryInput, exports.QueryInput.toBinaryWriter);
            }
            if (instance.singleUtterance) {
                writer.writeBool(4, instance.singleUtterance);
            }
            if (instance.inputAudio && instance.inputAudio.length) {
                writer.writeBytes(6, instance.inputAudio);
            }
        };
        Object.defineProperty(StreamingDetectIntentRequest.prototype, "session", {
            get: function () {
                return this._session;
            },
            set: function (value) {
                this._session = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentRequest.prototype, "queryParams", {
            get: function () {
                return this._queryParams;
            },
            set: function (value) {
                this._queryParams = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentRequest.prototype, "queryInput", {
            get: function () {
                return this._queryInput;
            },
            set: function (value) {
                this._queryInput = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentRequest.prototype, "singleUtterance", {
            get: function () {
                return this._singleUtterance;
            },
            set: function (value) {
                this._singleUtterance = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentRequest.prototype, "inputAudio", {
            get: function () {
                return this._inputAudio;
            },
            set: function (value) {
                this._inputAudio = value;
            },
            enumerable: false,
            configurable: true
        });
        StreamingDetectIntentRequest.prototype.toObject = function () {
            return {
                session: this.session,
                queryParams: this.queryParams ? this.queryParams.toObject() : undefined,
                queryInput: this.queryInput ? this.queryInput.toObject() : undefined,
                singleUtterance: this.singleUtterance,
                inputAudio: this.inputAudio
                    ? this.inputAudio.subarray(0)
                    : new Uint8Array()
            };
        };
        StreamingDetectIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return StreamingDetectIntentRequest;
    }());
    var StreamingDetectIntentResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param StreamingDetectIntentResponse value
         */
        function StreamingDetectIntentResponse(value) {
            value = value || {};
            this.responseId = value.responseId;
            this.recognitionResult = value.recognitionResult
                ? new exports.StreamingRecognitionResult(value.recognitionResult)
                : undefined;
            this.queryResult = value.queryResult
                ? new QueryResult(value.queryResult)
                : undefined;
            this.webhookStatus = value.webhookStatus
                ? new Status(value.webhookStatus)
                : undefined;
            StreamingDetectIntentResponse.refineValues(this);
        }
        StreamingDetectIntentResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            StreamingDetectIntentResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        StreamingDetectIntentResponse.fromBinary = function (bytes) {
            var instance = new StreamingDetectIntentResponse();
            StreamingDetectIntentResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        StreamingDetectIntentResponse.refineValues = function (instance) {
            instance.responseId = instance.responseId || '';
            instance.recognitionResult = instance.recognitionResult || undefined;
            instance.queryResult = instance.queryResult || undefined;
            instance.webhookStatus = instance.webhookStatus || undefined;
        };
        StreamingDetectIntentResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.responseId = reader.readString();
                        break;
                    case 2:
                        instance.recognitionResult = new exports.StreamingRecognitionResult();
                        reader.readMessage(instance.recognitionResult, exports.StreamingRecognitionResult.fromBinaryReader);
                        break;
                    case 3:
                        instance.queryResult = new QueryResult();
                        reader.readMessage(instance.queryResult, QueryResult.fromBinaryReader);
                        break;
                    case 4:
                        instance.webhookStatus = new Status();
                        reader.readMessage(instance.webhookStatus, Status.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            StreamingDetectIntentResponse.refineValues(instance);
        };
        StreamingDetectIntentResponse.toBinaryWriter = function (instance, writer) {
            if (instance.responseId) {
                writer.writeString(1, instance.responseId);
            }
            if (instance.recognitionResult) {
                writer.writeMessage(2, instance.recognitionResult, exports.StreamingRecognitionResult.toBinaryWriter);
            }
            if (instance.queryResult) {
                writer.writeMessage(3, instance.queryResult, QueryResult.toBinaryWriter);
            }
            if (instance.webhookStatus) {
                writer.writeMessage(4, instance.webhookStatus, Status.toBinaryWriter);
            }
        };
        Object.defineProperty(StreamingDetectIntentResponse.prototype, "responseId", {
            get: function () {
                return this._responseId;
            },
            set: function (value) {
                this._responseId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentResponse.prototype, "recognitionResult", {
            get: function () {
                return this._recognitionResult;
            },
            set: function (value) {
                this._recognitionResult = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentResponse.prototype, "queryResult", {
            get: function () {
                return this._queryResult;
            },
            set: function (value) {
                this._queryResult = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingDetectIntentResponse.prototype, "webhookStatus", {
            get: function () {
                return this._webhookStatus;
            },
            set: function (value) {
                this._webhookStatus = value;
            },
            enumerable: false,
            configurable: true
        });
        StreamingDetectIntentResponse.prototype.toObject = function () {
            return {
                responseId: this.responseId,
                recognitionResult: this.recognitionResult
                    ? this.recognitionResult.toObject()
                    : undefined,
                queryResult: this.queryResult ? this.queryResult.toObject() : undefined,
                webhookStatus: this.webhookStatus
                    ? this.webhookStatus.toObject()
                    : undefined
            };
        };
        StreamingDetectIntentResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return StreamingDetectIntentResponse;
    }());
    exports.StreamingRecognitionResult = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param StreamingRecognitionResult value
         */
        function StreamingRecognitionResult(value) {
            value = value || {};
            this.messageType = value.messageType;
            this.transcript = value.transcript;
            this.isFinal = value.isFinal;
            this.confidence = value.confidence;
            StreamingRecognitionResult.refineValues(this);
        }
        StreamingRecognitionResult.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            StreamingRecognitionResult.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        StreamingRecognitionResult.fromBinary = function (bytes) {
            var instance = new StreamingRecognitionResult();
            StreamingRecognitionResult.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        StreamingRecognitionResult.refineValues = function (instance) {
            instance.messageType = instance.messageType || 0;
            instance.transcript = instance.transcript || '';
            instance.isFinal = instance.isFinal || false;
            instance.confidence = instance.confidence || 0;
        };
        StreamingRecognitionResult.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.messageType = reader.readEnum();
                        break;
                    case 2:
                        instance.transcript = reader.readString();
                        break;
                    case 3:
                        instance.isFinal = reader.readBool();
                        break;
                    case 4:
                        instance.confidence = reader.readFloat();
                        break;
                    default:
                        reader.skipField();
                }
            }
            StreamingRecognitionResult.refineValues(instance);
        };
        StreamingRecognitionResult.toBinaryWriter = function (instance, writer) {
            if (instance.messageType) {
                writer.writeEnum(1, instance.messageType);
            }
            if (instance.transcript) {
                writer.writeString(2, instance.transcript);
            }
            if (instance.isFinal) {
                writer.writeBool(3, instance.isFinal);
            }
            if (instance.confidence) {
                writer.writeFloat(4, instance.confidence);
            }
        };
        Object.defineProperty(StreamingRecognitionResult.prototype, "messageType", {
            get: function () {
                return this._messageType;
            },
            set: function (value) {
                this._messageType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingRecognitionResult.prototype, "transcript", {
            get: function () {
                return this._transcript;
            },
            set: function (value) {
                this._transcript = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingRecognitionResult.prototype, "isFinal", {
            get: function () {
                return this._isFinal;
            },
            set: function (value) {
                this._isFinal = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StreamingRecognitionResult.prototype, "confidence", {
            get: function () {
                return this._confidence;
            },
            set: function (value) {
                this._confidence = value;
            },
            enumerable: false,
            configurable: true
        });
        StreamingRecognitionResult.prototype.toObject = function () {
            return {
                messageType: this.messageType,
                transcript: this.transcript,
                isFinal: this.isFinal,
                confidence: this.confidence
            };
        };
        StreamingRecognitionResult.prototype.toJSON = function () {
            return this.toObject();
        };
        return StreamingRecognitionResult;
    }());
    (function (StreamingRecognitionResult) {
        var MessageType;
        (function (MessageType) {
            MessageType[MessageType["messageTypeUnspecified"] = 0] = "messageTypeUnspecified";
            MessageType[MessageType["transcript"] = 1] = "transcript";
            MessageType[MessageType["endOfSingleUtterance"] = 2] = "endOfSingleUtterance";
        })(MessageType = StreamingRecognitionResult.MessageType || (StreamingRecognitionResult.MessageType = {}));
    })(exports.StreamingRecognitionResult || (exports.StreamingRecognitionResult = {}));
    var InputAudioConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param InputAudioConfig value
         */
        function InputAudioConfig(value) {
            value = value || {};
            this.audioEncoding = value.audioEncoding;
            this.sampleRateHertz = value.sampleRateHertz;
            this.languageCode = value.languageCode;
            this.phraseHints = (value.phraseHints || []).slice();
            InputAudioConfig.refineValues(this);
        }
        InputAudioConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            InputAudioConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        InputAudioConfig.fromBinary = function (bytes) {
            var instance = new InputAudioConfig();
            InputAudioConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        InputAudioConfig.refineValues = function (instance) {
            instance.audioEncoding = instance.audioEncoding || 0;
            instance.sampleRateHertz = instance.sampleRateHertz || 0;
            instance.languageCode = instance.languageCode || '';
            instance.phraseHints = instance.phraseHints || [];
        };
        InputAudioConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.audioEncoding = reader.readEnum();
                        break;
                    case 2:
                        instance.sampleRateHertz = reader.readInt32();
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    case 4:
                        (instance.phraseHints = instance.phraseHints || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            InputAudioConfig.refineValues(instance);
        };
        InputAudioConfig.toBinaryWriter = function (instance, writer) {
            if (instance.audioEncoding) {
                writer.writeEnum(1, instance.audioEncoding);
            }
            if (instance.sampleRateHertz) {
                writer.writeInt32(2, instance.sampleRateHertz);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
            if (instance.phraseHints && instance.phraseHints.length) {
                writer.writeRepeatedString(4, instance.phraseHints);
            }
        };
        Object.defineProperty(InputAudioConfig.prototype, "audioEncoding", {
            get: function () {
                return this._audioEncoding;
            },
            set: function (value) {
                this._audioEncoding = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputAudioConfig.prototype, "sampleRateHertz", {
            get: function () {
                return this._sampleRateHertz;
            },
            set: function (value) {
                this._sampleRateHertz = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputAudioConfig.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(InputAudioConfig.prototype, "phraseHints", {
            get: function () {
                return this._phraseHints;
            },
            set: function (value) {
                this._phraseHints = value;
            },
            enumerable: false,
            configurable: true
        });
        InputAudioConfig.prototype.toObject = function () {
            return {
                audioEncoding: this.audioEncoding,
                sampleRateHertz: this.sampleRateHertz,
                languageCode: this.languageCode,
                phraseHints: (this.phraseHints || []).slice()
            };
        };
        InputAudioConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return InputAudioConfig;
    }());
    var TextInput = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param TextInput value
         */
        function TextInput(value) {
            value = value || {};
            this.text = value.text;
            this.languageCode = value.languageCode;
            TextInput.refineValues(this);
        }
        TextInput.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            TextInput.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        TextInput.fromBinary = function (bytes) {
            var instance = new TextInput();
            TextInput.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        TextInput.refineValues = function (instance) {
            instance.text = instance.text || '';
            instance.languageCode = instance.languageCode || '';
        };
        TextInput.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.text = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            TextInput.refineValues(instance);
        };
        TextInput.toBinaryWriter = function (instance, writer) {
            if (instance.text) {
                writer.writeString(1, instance.text);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
        };
        Object.defineProperty(TextInput.prototype, "text", {
            get: function () {
                return this._text;
            },
            set: function (value) {
                this._text = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TextInput.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        TextInput.prototype.toObject = function () {
            return {
                text: this.text,
                languageCode: this.languageCode
            };
        };
        TextInput.prototype.toJSON = function () {
            return this.toObject();
        };
        return TextInput;
    }());
    var EventInput = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EventInput value
         */
        function EventInput(value) {
            value = value || {};
            this.name = value.name;
            this.parameters = value.parameters
                ? new exports.Struct(value.parameters)
                : undefined;
            this.languageCode = value.languageCode;
            EventInput.refineValues(this);
        }
        EventInput.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EventInput.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EventInput.fromBinary = function (bytes) {
            var instance = new EventInput();
            EventInput.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EventInput.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.parameters = instance.parameters || undefined;
            instance.languageCode = instance.languageCode || '';
        };
        EventInput.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.parameters = new exports.Struct();
                        reader.readMessage(instance.parameters, exports.Struct.fromBinaryReader);
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            EventInput.refineValues(instance);
        };
        EventInput.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.parameters) {
                writer.writeMessage(2, instance.parameters, exports.Struct.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
        };
        Object.defineProperty(EventInput.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventInput.prototype, "parameters", {
            get: function () {
                return this._parameters;
            },
            set: function (value) {
                this._parameters = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventInput.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        EventInput.prototype.toObject = function () {
            return {
                name: this.name,
                parameters: this.parameters ? this.parameters.toObject() : undefined,
                languageCode: this.languageCode
            };
        };
        EventInput.prototype.toJSON = function () {
            return this.toObject();
        };
        return EventInput;
    }());
    exports.Session = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Session value
         */
        function Session(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.sessionSteps = (value.sessionSteps || []).map(function (m) { return new SessionStep(m); });
            this.sessionInfo = value.sessionInfo
                ? new SessionInfo(value.sessionInfo)
                : undefined;
            Session.refineValues(this);
        }
        Session.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Session.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Session.fromBinary = function (bytes) {
            var instance = new Session();
            Session.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Session.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.sessionSteps = instance.sessionSteps || [];
            instance.sessionInfo = instance.sessionInfo || undefined;
        };
        Session.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new SessionStep();
                        reader.readMessage(messageInitializer2, SessionStep.fromBinaryReader);
                        (instance.sessionSteps = instance.sessionSteps || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.sessionInfo = new SessionInfo();
                        reader.readMessage(instance.sessionInfo, SessionInfo.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            Session.refineValues(instance);
        };
        Session.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.sessionSteps && instance.sessionSteps.length) {
                writer.writeRepeatedMessage(2, instance.sessionSteps, SessionStep.toBinaryWriter);
            }
            if (instance.sessionInfo) {
                writer.writeMessage(3, instance.sessionInfo, SessionInfo.toBinaryWriter);
            }
        };
        Object.defineProperty(Session.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Session.prototype, "sessionSteps", {
            get: function () {
                return this._sessionSteps;
            },
            set: function (value) {
                this._sessionSteps = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Session.prototype, "sessionInfo", {
            get: function () {
                return this._sessionInfo;
            },
            set: function (value) {
                this._sessionInfo = value;
            },
            enumerable: false,
            configurable: true
        });
        Session.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                sessionSteps: (this.sessionSteps || []).map(function (m) { return m.toObject(); }),
                sessionInfo: this.sessionInfo ? this.sessionInfo.toObject() : undefined
            };
        };
        Session.prototype.toJSON = function () {
            return this.toObject();
        };
        return Session;
    }());
    (function (Session) {
        var View;
        (function (View) {
            View[View["viewUnspecified"] = 0] = "viewUnspecified";
            View[View["viewFull"] = 1] = "viewFull";
            View[View["viewSparse"] = 2] = "viewSparse";
        })(View = Session.View || (Session.View = {}));
    })(exports.Session || (exports.Session = {}));
    var SessionStep = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SessionStep value
         */
        function SessionStep(value) {
            value = value || {};
            this.detectIntentRequest = value.detectIntentRequest
                ? new DetectIntentRequest(value.detectIntentRequest)
                : undefined;
            this.detectIntentResponse = value.detectIntentResponse
                ? new DetectIntentResponse(value.detectIntentResponse)
                : undefined;
            this.contexts = (value.contexts || []).map(function (m) { return new exports.Context(m); });
            SessionStep.refineValues(this);
        }
        SessionStep.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SessionStep.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SessionStep.fromBinary = function (bytes) {
            var instance = new SessionStep();
            SessionStep.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SessionStep.refineValues = function (instance) {
            instance.detectIntentRequest = instance.detectIntentRequest || undefined;
            instance.detectIntentResponse = instance.detectIntentResponse || undefined;
            instance.contexts = instance.contexts || [];
        };
        SessionStep.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.detectIntentRequest = new DetectIntentRequest();
                        reader.readMessage(instance.detectIntentRequest, DetectIntentRequest.fromBinaryReader);
                        break;
                    case 2:
                        instance.detectIntentResponse = new DetectIntentResponse();
                        reader.readMessage(instance.detectIntentResponse, DetectIntentResponse.fromBinaryReader);
                        break;
                    case 3:
                        var messageInitializer3 = new exports.Context();
                        reader.readMessage(messageInitializer3, exports.Context.fromBinaryReader);
                        (instance.contexts = instance.contexts || []).push(messageInitializer3);
                        break;
                    default:
                        reader.skipField();
                }
            }
            SessionStep.refineValues(instance);
        };
        SessionStep.toBinaryWriter = function (instance, writer) {
            if (instance.detectIntentRequest) {
                writer.writeMessage(1, instance.detectIntentRequest, DetectIntentRequest.toBinaryWriter);
            }
            if (instance.detectIntentResponse) {
                writer.writeMessage(2, instance.detectIntentResponse, DetectIntentResponse.toBinaryWriter);
            }
            if (instance.contexts && instance.contexts.length) {
                writer.writeRepeatedMessage(3, instance.contexts, exports.Context.toBinaryWriter);
            }
        };
        Object.defineProperty(SessionStep.prototype, "detectIntentRequest", {
            get: function () {
                return this._detectIntentRequest;
            },
            set: function (value) {
                this._detectIntentRequest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionStep.prototype, "detectIntentResponse", {
            get: function () {
                return this._detectIntentResponse;
            },
            set: function (value) {
                this._detectIntentResponse = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionStep.prototype, "contexts", {
            get: function () {
                return this._contexts;
            },
            set: function (value) {
                this._contexts = value;
            },
            enumerable: false,
            configurable: true
        });
        SessionStep.prototype.toObject = function () {
            return {
                detectIntentRequest: this.detectIntentRequest
                    ? this.detectIntentRequest.toObject()
                    : undefined,
                detectIntentResponse: this.detectIntentResponse
                    ? this.detectIntentResponse.toObject()
                    : undefined,
                contexts: (this.contexts || []).map(function (m) { return m.toObject(); })
            };
        };
        SessionStep.prototype.toJSON = function () {
            return this.toObject();
        };
        return SessionStep;
    }());
    var TrackSessionStepRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param TrackSessionStepRequest value
         */
        function TrackSessionStepRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.sessionStep = value.sessionStep
                ? new SessionStep(value.sessionStep)
                : undefined;
            this.sessionView = value.sessionView;
            TrackSessionStepRequest.refineValues(this);
        }
        TrackSessionStepRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            TrackSessionStepRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        TrackSessionStepRequest.fromBinary = function (bytes) {
            var instance = new TrackSessionStepRequest();
            TrackSessionStepRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        TrackSessionStepRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.sessionStep = instance.sessionStep || undefined;
            instance.sessionView = instance.sessionView || 0;
        };
        TrackSessionStepRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.sessionStep = new SessionStep();
                        reader.readMessage(instance.sessionStep, SessionStep.fromBinaryReader);
                        break;
                    case 3:
                        instance.sessionView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            TrackSessionStepRequest.refineValues(instance);
        };
        TrackSessionStepRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.sessionStep) {
                writer.writeMessage(2, instance.sessionStep, SessionStep.toBinaryWriter);
            }
            if (instance.sessionView) {
                writer.writeEnum(3, instance.sessionView);
            }
        };
        Object.defineProperty(TrackSessionStepRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TrackSessionStepRequest.prototype, "sessionStep", {
            get: function () {
                return this._sessionStep;
            },
            set: function (value) {
                this._sessionStep = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TrackSessionStepRequest.prototype, "sessionView", {
            get: function () {
                return this._sessionView;
            },
            set: function (value) {
                this._sessionView = value;
            },
            enumerable: false,
            configurable: true
        });
        TrackSessionStepRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                sessionStep: this.sessionStep ? this.sessionStep.toObject() : undefined,
                sessionView: this.sessionView
            };
        };
        TrackSessionStepRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return TrackSessionStepRequest;
    }());
    var ListSessionsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionsRequest value
         */
        function ListSessionsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.sessionView = value.sessionView;
            this.pageToken = value.pageToken;
            this.sessionFilter = value.sessionFilter
                ? new SessionFilter(value.sessionFilter)
                : undefined;
            ListSessionsRequest.refineValues(this);
        }
        ListSessionsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionsRequest.fromBinary = function (bytes) {
            var instance = new ListSessionsRequest();
            ListSessionsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.sessionView = instance.sessionView || 0;
            instance.pageToken = instance.pageToken || '';
            instance.sessionFilter = instance.sessionFilter || undefined;
        };
        ListSessionsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.sessionView = reader.readEnum();
                        break;
                    case 4:
                        instance.pageToken = reader.readString();
                        break;
                    case 5:
                        instance.sessionFilter = new SessionFilter();
                        reader.readMessage(instance.sessionFilter, SessionFilter.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionsRequest.refineValues(instance);
        };
        ListSessionsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.sessionView) {
                writer.writeEnum(2, instance.sessionView);
            }
            if (instance.pageToken) {
                writer.writeString(4, instance.pageToken);
            }
            if (instance.sessionFilter) {
                writer.writeMessage(5, instance.sessionFilter, SessionFilter.toBinaryWriter);
            }
        };
        Object.defineProperty(ListSessionsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionsRequest.prototype, "sessionView", {
            get: function () {
                return this._sessionView;
            },
            set: function (value) {
                this._sessionView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionsRequest.prototype, "sessionFilter", {
            get: function () {
                return this._sessionFilter;
            },
            set: function (value) {
                this._sessionFilter = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                sessionView: this.sessionView,
                pageToken: this.pageToken,
                sessionFilter: this.sessionFilter
                    ? this.sessionFilter.toObject()
                    : undefined
            };
        };
        ListSessionsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionsRequest;
    }());
    var SessionFilter = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SessionFilter value
         */
        function SessionFilter(value) {
            value = value || {};
            this.languageCodes = (value.languageCodes || []).slice();
            this.matchedIntents = (value.matchedIntents || []).map(function (m) { return new exports.Intent(m); });
            this.matchedEntityTypes = (value.matchedEntityTypes || []).map(function (m) { return new exports.EntityType(m); });
            this.minIntentsConfidenceMin = value.minIntentsConfidenceMin;
            this.minIntentsConfidenceMax = value.minIntentsConfidenceMax;
            this.minEntityTypesConfidenceMin = value.minEntityTypesConfidenceMin;
            this.minEntityTypesConfidenceMax = value.minEntityTypesConfidenceMax;
            this.earliest = value.earliest;
            this.latest = value.latest;
            this.minNumberTurns = value.minNumberTurns;
            this.maxNumberTurns = value.maxNumberTurns;
            this.labels = (value.labels || []).slice();
            this.userIds = (value.userIds || []).slice();
            SessionFilter.refineValues(this);
        }
        SessionFilter.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SessionFilter.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SessionFilter.fromBinary = function (bytes) {
            var instance = new SessionFilter();
            SessionFilter.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SessionFilter.refineValues = function (instance) {
            instance.languageCodes = instance.languageCodes || [];
            instance.matchedIntents = instance.matchedIntents || [];
            instance.matchedEntityTypes = instance.matchedEntityTypes || [];
            instance.minIntentsConfidenceMin = instance.minIntentsConfidenceMin || 0;
            instance.minIntentsConfidenceMax = instance.minIntentsConfidenceMax || 0;
            instance.minEntityTypesConfidenceMin =
                instance.minEntityTypesConfidenceMin || 0;
            instance.minEntityTypesConfidenceMax =
                instance.minEntityTypesConfidenceMax || 0;
            instance.earliest = instance.earliest || 0;
            instance.latest = instance.latest || 0;
            instance.minNumberTurns = instance.minNumberTurns || 0;
            instance.maxNumberTurns = instance.maxNumberTurns || 0;
            instance.labels = instance.labels || [];
            instance.userIds = instance.userIds || [];
        };
        SessionFilter.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.languageCodes = instance.languageCodes || []).push(reader.readString());
                        break;
                    case 2:
                        var messageInitializer2 = new exports.Intent();
                        reader.readMessage(messageInitializer2, exports.Intent.fromBinaryReader);
                        (instance.matchedIntents = instance.matchedIntents || []).push(messageInitializer2);
                        break;
                    case 3:
                        var messageInitializer3 = new exports.EntityType();
                        reader.readMessage(messageInitializer3, exports.EntityType.fromBinaryReader);
                        (instance.matchedEntityTypes =
                            instance.matchedEntityTypes || []).push(messageInitializer3);
                        break;
                    case 4:
                        instance.minIntentsConfidenceMin = reader.readFloat();
                        break;
                    case 5:
                        instance.minIntentsConfidenceMax = reader.readFloat();
                        break;
                    case 6:
                        instance.minEntityTypesConfidenceMin = reader.readFloat();
                        break;
                    case 7:
                        instance.minEntityTypesConfidenceMax = reader.readFloat();
                        break;
                    case 8:
                        instance.earliest = reader.readFloat();
                        break;
                    case 9:
                        instance.latest = reader.readFloat();
                        break;
                    case 10:
                        instance.minNumberTurns = reader.readInt32();
                        break;
                    case 11:
                        instance.maxNumberTurns = reader.readInt32();
                        break;
                    case 12:
                        (instance.labels = instance.labels || []).push(reader.readString());
                        break;
                    case 13:
                        (instance.userIds = instance.userIds || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            SessionFilter.refineValues(instance);
        };
        SessionFilter.toBinaryWriter = function (instance, writer) {
            if (instance.languageCodes && instance.languageCodes.length) {
                writer.writeRepeatedString(1, instance.languageCodes);
            }
            if (instance.matchedIntents && instance.matchedIntents.length) {
                writer.writeRepeatedMessage(2, instance.matchedIntents, exports.Intent.toBinaryWriter);
            }
            if (instance.matchedEntityTypes && instance.matchedEntityTypes.length) {
                writer.writeRepeatedMessage(3, instance.matchedEntityTypes, exports.EntityType.toBinaryWriter);
            }
            if (instance.minIntentsConfidenceMin) {
                writer.writeFloat(4, instance.minIntentsConfidenceMin);
            }
            if (instance.minIntentsConfidenceMax) {
                writer.writeFloat(5, instance.minIntentsConfidenceMax);
            }
            if (instance.minEntityTypesConfidenceMin) {
                writer.writeFloat(6, instance.minEntityTypesConfidenceMin);
            }
            if (instance.minEntityTypesConfidenceMax) {
                writer.writeFloat(7, instance.minEntityTypesConfidenceMax);
            }
            if (instance.earliest) {
                writer.writeFloat(8, instance.earliest);
            }
            if (instance.latest) {
                writer.writeFloat(9, instance.latest);
            }
            if (instance.minNumberTurns) {
                writer.writeInt32(10, instance.minNumberTurns);
            }
            if (instance.maxNumberTurns) {
                writer.writeInt32(11, instance.maxNumberTurns);
            }
            if (instance.labels && instance.labels.length) {
                writer.writeRepeatedString(12, instance.labels);
            }
            if (instance.userIds && instance.userIds.length) {
                writer.writeRepeatedString(13, instance.userIds);
            }
        };
        Object.defineProperty(SessionFilter.prototype, "languageCodes", {
            get: function () {
                return this._languageCodes;
            },
            set: function (value) {
                this._languageCodes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "matchedIntents", {
            get: function () {
                return this._matchedIntents;
            },
            set: function (value) {
                this._matchedIntents = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "matchedEntityTypes", {
            get: function () {
                return this._matchedEntityTypes;
            },
            set: function (value) {
                this._matchedEntityTypes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "minIntentsConfidenceMin", {
            get: function () {
                return this._minIntentsConfidenceMin;
            },
            set: function (value) {
                this._minIntentsConfidenceMin = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "minIntentsConfidenceMax", {
            get: function () {
                return this._minIntentsConfidenceMax;
            },
            set: function (value) {
                this._minIntentsConfidenceMax = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "minEntityTypesConfidenceMin", {
            get: function () {
                return this._minEntityTypesConfidenceMin;
            },
            set: function (value) {
                this._minEntityTypesConfidenceMin = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "minEntityTypesConfidenceMax", {
            get: function () {
                return this._minEntityTypesConfidenceMax;
            },
            set: function (value) {
                this._minEntityTypesConfidenceMax = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "earliest", {
            get: function () {
                return this._earliest;
            },
            set: function (value) {
                this._earliest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "latest", {
            get: function () {
                return this._latest;
            },
            set: function (value) {
                this._latest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "minNumberTurns", {
            get: function () {
                return this._minNumberTurns;
            },
            set: function (value) {
                this._minNumberTurns = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "maxNumberTurns", {
            get: function () {
                return this._maxNumberTurns;
            },
            set: function (value) {
                this._maxNumberTurns = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (value) {
                this._labels = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionFilter.prototype, "userIds", {
            get: function () {
                return this._userIds;
            },
            set: function (value) {
                this._userIds = value;
            },
            enumerable: false,
            configurable: true
        });
        SessionFilter.prototype.toObject = function () {
            return {
                languageCodes: (this.languageCodes || []).slice(),
                matchedIntents: (this.matchedIntents || []).map(function (m) { return m.toObject(); }),
                matchedEntityTypes: (this.matchedEntityTypes || []).map(function (m) { return m.toObject(); }),
                minIntentsConfidenceMin: this.minIntentsConfidenceMin,
                minIntentsConfidenceMax: this.minIntentsConfidenceMax,
                minEntityTypesConfidenceMin: this.minEntityTypesConfidenceMin,
                minEntityTypesConfidenceMax: this.minEntityTypesConfidenceMax,
                earliest: this.earliest,
                latest: this.latest,
                minNumberTurns: this.minNumberTurns,
                maxNumberTurns: this.maxNumberTurns,
                labels: (this.labels || []).slice(),
                userIds: (this.userIds || []).slice()
            };
        };
        SessionFilter.prototype.toJSON = function () {
            return this.toObject();
        };
        return SessionFilter;
    }());
    var SessionInfo = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SessionInfo value
         */
        function SessionInfo(value) {
            value = value || {};
            this.languageCodes = (value.languageCodes || []).slice();
            this.matchedIntents = (value.matchedIntents || []).map(function (m) { return new exports.Intent(m); });
            this.matchedEntityTypes = (value.matchedEntityTypes || []).map(function (m) { return new exports.EntityType(m); });
            this.minIntentsConfidence = value.minIntentsConfidence;
            this.minEntityTypesConfidence = value.minEntityTypesConfidence;
            this.earliest = value.earliest;
            this.latest = value.latest;
            this.numberTurns = value.numberTurns;
            this.labels = (value.labels || []).slice();
            this.userIds = (value.userIds || []).slice();
            SessionInfo.refineValues(this);
        }
        SessionInfo.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SessionInfo.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SessionInfo.fromBinary = function (bytes) {
            var instance = new SessionInfo();
            SessionInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SessionInfo.refineValues = function (instance) {
            instance.languageCodes = instance.languageCodes || [];
            instance.matchedIntents = instance.matchedIntents || [];
            instance.matchedEntityTypes = instance.matchedEntityTypes || [];
            instance.minIntentsConfidence = instance.minIntentsConfidence || 0;
            instance.minEntityTypesConfidence = instance.minEntityTypesConfidence || 0;
            instance.earliest = instance.earliest || 0;
            instance.latest = instance.latest || 0;
            instance.numberTurns = instance.numberTurns || 0;
            instance.labels = instance.labels || [];
            instance.userIds = instance.userIds || [];
        };
        SessionInfo.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.languageCodes = instance.languageCodes || []).push(reader.readString());
                        break;
                    case 2:
                        var messageInitializer2 = new exports.Intent();
                        reader.readMessage(messageInitializer2, exports.Intent.fromBinaryReader);
                        (instance.matchedIntents = instance.matchedIntents || []).push(messageInitializer2);
                        break;
                    case 3:
                        var messageInitializer3 = new exports.EntityType();
                        reader.readMessage(messageInitializer3, exports.EntityType.fromBinaryReader);
                        (instance.matchedEntityTypes =
                            instance.matchedEntityTypes || []).push(messageInitializer3);
                        break;
                    case 4:
                        instance.minIntentsConfidence = reader.readFloat();
                        break;
                    case 5:
                        instance.minEntityTypesConfidence = reader.readFloat();
                        break;
                    case 6:
                        instance.earliest = reader.readFloat();
                        break;
                    case 7:
                        instance.latest = reader.readFloat();
                        break;
                    case 8:
                        instance.numberTurns = reader.readInt32();
                        break;
                    case 9:
                        (instance.labels = instance.labels || []).push(reader.readString());
                        break;
                    case 10:
                        (instance.userIds = instance.userIds || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            SessionInfo.refineValues(instance);
        };
        SessionInfo.toBinaryWriter = function (instance, writer) {
            if (instance.languageCodes && instance.languageCodes.length) {
                writer.writeRepeatedString(1, instance.languageCodes);
            }
            if (instance.matchedIntents && instance.matchedIntents.length) {
                writer.writeRepeatedMessage(2, instance.matchedIntents, exports.Intent.toBinaryWriter);
            }
            if (instance.matchedEntityTypes && instance.matchedEntityTypes.length) {
                writer.writeRepeatedMessage(3, instance.matchedEntityTypes, exports.EntityType.toBinaryWriter);
            }
            if (instance.minIntentsConfidence) {
                writer.writeFloat(4, instance.minIntentsConfidence);
            }
            if (instance.minEntityTypesConfidence) {
                writer.writeFloat(5, instance.minEntityTypesConfidence);
            }
            if (instance.earliest) {
                writer.writeFloat(6, instance.earliest);
            }
            if (instance.latest) {
                writer.writeFloat(7, instance.latest);
            }
            if (instance.numberTurns) {
                writer.writeInt32(8, instance.numberTurns);
            }
            if (instance.labels && instance.labels.length) {
                writer.writeRepeatedString(9, instance.labels);
            }
            if (instance.userIds && instance.userIds.length) {
                writer.writeRepeatedString(10, instance.userIds);
            }
        };
        Object.defineProperty(SessionInfo.prototype, "languageCodes", {
            get: function () {
                return this._languageCodes;
            },
            set: function (value) {
                this._languageCodes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "matchedIntents", {
            get: function () {
                return this._matchedIntents;
            },
            set: function (value) {
                this._matchedIntents = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "matchedEntityTypes", {
            get: function () {
                return this._matchedEntityTypes;
            },
            set: function (value) {
                this._matchedEntityTypes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "minIntentsConfidence", {
            get: function () {
                return this._minIntentsConfidence;
            },
            set: function (value) {
                this._minIntentsConfidence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "minEntityTypesConfidence", {
            get: function () {
                return this._minEntityTypesConfidence;
            },
            set: function (value) {
                this._minEntityTypesConfidence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "earliest", {
            get: function () {
                return this._earliest;
            },
            set: function (value) {
                this._earliest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "latest", {
            get: function () {
                return this._latest;
            },
            set: function (value) {
                this._latest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "numberTurns", {
            get: function () {
                return this._numberTurns;
            },
            set: function (value) {
                this._numberTurns = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (value) {
                this._labels = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionInfo.prototype, "userIds", {
            get: function () {
                return this._userIds;
            },
            set: function (value) {
                this._userIds = value;
            },
            enumerable: false,
            configurable: true
        });
        SessionInfo.prototype.toObject = function () {
            return {
                languageCodes: (this.languageCodes || []).slice(),
                matchedIntents: (this.matchedIntents || []).map(function (m) { return m.toObject(); }),
                matchedEntityTypes: (this.matchedEntityTypes || []).map(function (m) { return m.toObject(); }),
                minIntentsConfidence: this.minIntentsConfidence,
                minEntityTypesConfidence: this.minEntityTypesConfidence,
                earliest: this.earliest,
                latest: this.latest,
                numberTurns: this.numberTurns,
                labels: (this.labels || []).slice(),
                userIds: (this.userIds || []).slice()
            };
        };
        SessionInfo.prototype.toJSON = function () {
            return this.toObject();
        };
        return SessionInfo;
    }());
    var ListSessionsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionsResponse value
         */
        function ListSessionsResponse(value) {
            value = value || {};
            this.sessions = (value.sessions || []).map(function (m) { return new exports.Session(m); });
            this.nextPageToken = value.nextPageToken;
            ListSessionsResponse.refineValues(this);
        }
        ListSessionsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionsResponse.fromBinary = function (bytes) {
            var instance = new ListSessionsResponse();
            ListSessionsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionsResponse.refineValues = function (instance) {
            instance.sessions = instance.sessions || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListSessionsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Session();
                        reader.readMessage(messageInitializer1, exports.Session.fromBinaryReader);
                        (instance.sessions = instance.sessions || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionsResponse.refineValues(instance);
        };
        ListSessionsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.sessions && instance.sessions.length) {
                writer.writeRepeatedMessage(1, instance.sessions, exports.Session.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListSessionsResponse.prototype, "sessions", {
            get: function () {
                return this._sessions;
            },
            set: function (value) {
                this._sessions = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionsResponse.prototype.toObject = function () {
            return {
                sessions: (this.sessions || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListSessionsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionsResponse;
    }());
    var GetSessionRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetSessionRequest value
         */
        function GetSessionRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.sessionView = value.sessionView;
            GetSessionRequest.refineValues(this);
        }
        GetSessionRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetSessionRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetSessionRequest.fromBinary = function (bytes) {
            var instance = new GetSessionRequest();
            GetSessionRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetSessionRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.sessionView = instance.sessionView || 0;
        };
        GetSessionRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.sessionView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetSessionRequest.refineValues(instance);
        };
        GetSessionRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.sessionView) {
                writer.writeEnum(2, instance.sessionView);
            }
        };
        Object.defineProperty(GetSessionRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetSessionRequest.prototype, "sessionView", {
            get: function () {
                return this._sessionView;
            },
            set: function (value) {
                this._sessionView = value;
            },
            enumerable: false,
            configurable: true
        });
        GetSessionRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                sessionView: this.sessionView
            };
        };
        GetSessionRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetSessionRequest;
    }());
    var DeleteSessionRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteSessionRequest value
         */
        function DeleteSessionRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            DeleteSessionRequest.refineValues(this);
        }
        DeleteSessionRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteSessionRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteSessionRequest.fromBinary = function (bytes) {
            var instance = new DeleteSessionRequest();
            DeleteSessionRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteSessionRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
        };
        DeleteSessionRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteSessionRequest.refineValues(instance);
        };
        DeleteSessionRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
        };
        Object.defineProperty(DeleteSessionRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteSessionRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId
            };
        };
        DeleteSessionRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteSessionRequest;
    }());
    var CreateSessionReviewRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateSessionReviewRequest value
         */
        function CreateSessionReviewRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.parentReviewId = value.parentReviewId;
            this.sessionReview = value.sessionReview
                ? new exports.SessionReview(value.sessionReview)
                : undefined;
            this.sessionReviewView = value.sessionReviewView;
            CreateSessionReviewRequest.refineValues(this);
        }
        CreateSessionReviewRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateSessionReviewRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateSessionReviewRequest.fromBinary = function (bytes) {
            var instance = new CreateSessionReviewRequest();
            CreateSessionReviewRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateSessionReviewRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.parentReviewId = instance.parentReviewId || '';
            instance.sessionReview = instance.sessionReview || undefined;
            instance.sessionReviewView = instance.sessionReviewView || 0;
        };
        CreateSessionReviewRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.parentReviewId = reader.readString();
                        break;
                    case 3:
                        instance.sessionReview = new exports.SessionReview();
                        reader.readMessage(instance.sessionReview, exports.SessionReview.fromBinaryReader);
                        break;
                    case 4:
                        instance.sessionReviewView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateSessionReviewRequest.refineValues(instance);
        };
        CreateSessionReviewRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.parentReviewId) {
                writer.writeString(2, instance.parentReviewId);
            }
            if (instance.sessionReview) {
                writer.writeMessage(3, instance.sessionReview, exports.SessionReview.toBinaryWriter);
            }
            if (instance.sessionReviewView) {
                writer.writeEnum(4, instance.sessionReviewView);
            }
        };
        Object.defineProperty(CreateSessionReviewRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateSessionReviewRequest.prototype, "parentReviewId", {
            get: function () {
                return this._parentReviewId;
            },
            set: function (value) {
                this._parentReviewId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateSessionReviewRequest.prototype, "sessionReview", {
            get: function () {
                return this._sessionReview;
            },
            set: function (value) {
                this._sessionReview = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateSessionReviewRequest.prototype, "sessionReviewView", {
            get: function () {
                return this._sessionReviewView;
            },
            set: function (value) {
                this._sessionReviewView = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateSessionReviewRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                parentReviewId: this.parentReviewId,
                sessionReview: this.sessionReview
                    ? this.sessionReview.toObject()
                    : undefined,
                sessionReviewView: this.sessionReviewView
            };
        };
        CreateSessionReviewRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateSessionReviewRequest;
    }());
    exports.SessionReview = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SessionReview value
         */
        function SessionReview(value) {
            value = value || {};
            this.sessionReviewId = value.sessionReviewId;
            this.sessionReviewSteps = (value.sessionReviewSteps || []).map(function (m) { return new SessionReviewStep(m); });
            SessionReview.refineValues(this);
        }
        SessionReview.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SessionReview.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SessionReview.fromBinary = function (bytes) {
            var instance = new SessionReview();
            SessionReview.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SessionReview.refineValues = function (instance) {
            instance.sessionReviewId = instance.sessionReviewId || '';
            instance.sessionReviewSteps = instance.sessionReviewSteps || [];
        };
        SessionReview.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionReviewId = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new SessionReviewStep();
                        reader.readMessage(messageInitializer2, SessionReviewStep.fromBinaryReader);
                        (instance.sessionReviewSteps =
                            instance.sessionReviewSteps || []).push(messageInitializer2);
                        break;
                    default:
                        reader.skipField();
                }
            }
            SessionReview.refineValues(instance);
        };
        SessionReview.toBinaryWriter = function (instance, writer) {
            if (instance.sessionReviewId) {
                writer.writeString(1, instance.sessionReviewId);
            }
            if (instance.sessionReviewSteps && instance.sessionReviewSteps.length) {
                writer.writeRepeatedMessage(2, instance.sessionReviewSteps, SessionReviewStep.toBinaryWriter);
            }
        };
        Object.defineProperty(SessionReview.prototype, "sessionReviewId", {
            get: function () {
                return this._sessionReviewId;
            },
            set: function (value) {
                this._sessionReviewId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionReview.prototype, "sessionReviewSteps", {
            get: function () {
                return this._sessionReviewSteps;
            },
            set: function (value) {
                this._sessionReviewSteps = value;
            },
            enumerable: false,
            configurable: true
        });
        SessionReview.prototype.toObject = function () {
            return {
                sessionReviewId: this.sessionReviewId,
                sessionReviewSteps: (this.sessionReviewSteps || []).map(function (m) { return m.toObject(); })
            };
        };
        SessionReview.prototype.toJSON = function () {
            return this.toObject();
        };
        return SessionReview;
    }());
    (function (SessionReview) {
        var View;
        (function (View) {
            View[View["viewUnspecified"] = 0] = "viewUnspecified";
            View[View["viewFull"] = 1] = "viewFull";
            View[View["viewSparse"] = 2] = "viewSparse";
        })(View = SessionReview.View || (SessionReview.View = {}));
    })(exports.SessionReview || (exports.SessionReview = {}));
    var SessionReviewStep = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SessionReviewStep value
         */
        function SessionReviewStep(value) {
            value = value || {};
            this.annotatedUsersays = value.annotatedUsersays
                ? new exports.Intent.TrainingPhrase(value.annotatedUsersays)
                : undefined;
            this.languageCode = value.languageCode;
            this.detectedIntents = (value.detectedIntents || []).map(function (m) { return new DetectedIntent(m); });
            this.contexts = (value.contexts || []).map(function (m) { return new exports.Context(m); });
            SessionReviewStep.refineValues(this);
        }
        SessionReviewStep.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SessionReviewStep.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SessionReviewStep.fromBinary = function (bytes) {
            var instance = new SessionReviewStep();
            SessionReviewStep.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SessionReviewStep.refineValues = function (instance) {
            instance.annotatedUsersays = instance.annotatedUsersays || undefined;
            instance.languageCode = instance.languageCode || '';
            instance.detectedIntents = instance.detectedIntents || [];
            instance.contexts = instance.contexts || [];
        };
        SessionReviewStep.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.annotatedUsersays = new exports.Intent.TrainingPhrase();
                        reader.readMessage(instance.annotatedUsersays, exports.Intent.TrainingPhrase.fromBinaryReader);
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    case 3:
                        var messageInitializer3 = new DetectedIntent();
                        reader.readMessage(messageInitializer3, DetectedIntent.fromBinaryReader);
                        (instance.detectedIntents = instance.detectedIntents || []).push(messageInitializer3);
                        break;
                    case 4:
                        var messageInitializer4 = new exports.Context();
                        reader.readMessage(messageInitializer4, exports.Context.fromBinaryReader);
                        (instance.contexts = instance.contexts || []).push(messageInitializer4);
                        break;
                    default:
                        reader.skipField();
                }
            }
            SessionReviewStep.refineValues(instance);
        };
        SessionReviewStep.toBinaryWriter = function (instance, writer) {
            if (instance.annotatedUsersays) {
                writer.writeMessage(1, instance.annotatedUsersays, exports.Intent.TrainingPhrase.toBinaryWriter);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
            if (instance.detectedIntents && instance.detectedIntents.length) {
                writer.writeRepeatedMessage(3, instance.detectedIntents, DetectedIntent.toBinaryWriter);
            }
            if (instance.contexts && instance.contexts.length) {
                writer.writeRepeatedMessage(4, instance.contexts, exports.Context.toBinaryWriter);
            }
        };
        Object.defineProperty(SessionReviewStep.prototype, "annotatedUsersays", {
            get: function () {
                return this._annotatedUsersays;
            },
            set: function (value) {
                this._annotatedUsersays = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionReviewStep.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionReviewStep.prototype, "detectedIntents", {
            get: function () {
                return this._detectedIntents;
            },
            set: function (value) {
                this._detectedIntents = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SessionReviewStep.prototype, "contexts", {
            get: function () {
                return this._contexts;
            },
            set: function (value) {
                this._contexts = value;
            },
            enumerable: false,
            configurable: true
        });
        SessionReviewStep.prototype.toObject = function () {
            return {
                annotatedUsersays: this.annotatedUsersays
                    ? this.annotatedUsersays.toObject()
                    : undefined,
                languageCode: this.languageCode,
                detectedIntents: (this.detectedIntents || []).map(function (m) { return m.toObject(); }),
                contexts: (this.contexts || []).map(function (m) { return m.toObject(); })
            };
        };
        SessionReviewStep.prototype.toJSON = function () {
            return this.toObject();
        };
        return SessionReviewStep;
    }());
    var DetectedIntent = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DetectedIntent value
         */
        function DetectedIntent(value) {
            value = value || {};
            this.intent = value.intent
                ? new exports.Intent(value.intent)
                : undefined;
            this.score = value.score;
            this.algorithm = value.algorithm;
            this.fulfillmentMessages = (value.fulfillmentMessages || []).map(function (m) { return new exports.Intent.Message(m); });
            this.requiredParamMissing = value.requiredParamMissing;
            DetectedIntent.refineValues(this);
        }
        DetectedIntent.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DetectedIntent.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DetectedIntent.fromBinary = function (bytes) {
            var instance = new DetectedIntent();
            DetectedIntent.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DetectedIntent.refineValues = function (instance) {
            instance.intent = instance.intent || undefined;
            instance.score = instance.score || 0;
            instance.algorithm = instance.algorithm || '';
            instance.fulfillmentMessages = instance.fulfillmentMessages || [];
            instance.requiredParamMissing = instance.requiredParamMissing || false;
        };
        DetectedIntent.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.intent = new exports.Intent();
                        reader.readMessage(instance.intent, exports.Intent.fromBinaryReader);
                        break;
                    case 2:
                        instance.score = reader.readFloat();
                        break;
                    case 3:
                        instance.algorithm = reader.readString();
                        break;
                    case 4:
                        var messageInitializer4 = new exports.Intent.Message();
                        reader.readMessage(messageInitializer4, exports.Intent.Message.fromBinaryReader);
                        (instance.fulfillmentMessages =
                            instance.fulfillmentMessages || []).push(messageInitializer4);
                        break;
                    case 5:
                        instance.requiredParamMissing = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DetectedIntent.refineValues(instance);
        };
        DetectedIntent.toBinaryWriter = function (instance, writer) {
            if (instance.intent) {
                writer.writeMessage(1, instance.intent, exports.Intent.toBinaryWriter);
            }
            if (instance.score) {
                writer.writeFloat(2, instance.score);
            }
            if (instance.algorithm) {
                writer.writeString(3, instance.algorithm);
            }
            if (instance.fulfillmentMessages && instance.fulfillmentMessages.length) {
                writer.writeRepeatedMessage(4, instance.fulfillmentMessages, exports.Intent.Message.toBinaryWriter);
            }
            if (instance.requiredParamMissing) {
                writer.writeBool(5, instance.requiredParamMissing);
            }
        };
        Object.defineProperty(DetectedIntent.prototype, "intent", {
            get: function () {
                return this._intent;
            },
            set: function (value) {
                this._intent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectedIntent.prototype, "score", {
            get: function () {
                return this._score;
            },
            set: function (value) {
                this._score = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectedIntent.prototype, "algorithm", {
            get: function () {
                return this._algorithm;
            },
            set: function (value) {
                this._algorithm = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectedIntent.prototype, "fulfillmentMessages", {
            get: function () {
                return this._fulfillmentMessages;
            },
            set: function (value) {
                this._fulfillmentMessages = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DetectedIntent.prototype, "requiredParamMissing", {
            get: function () {
                return this._requiredParamMissing;
            },
            set: function (value) {
                this._requiredParamMissing = value;
            },
            enumerable: false,
            configurable: true
        });
        DetectedIntent.prototype.toObject = function () {
            return {
                intent: this.intent ? this.intent.toObject() : undefined,
                score: this.score,
                algorithm: this.algorithm,
                fulfillmentMessages: (this.fulfillmentMessages || []).map(function (m) { return m.toObject(); }),
                requiredParamMissing: this.requiredParamMissing
            };
        };
        DetectedIntent.prototype.toJSON = function () {
            return this.toObject();
        };
        return DetectedIntent;
    }());
    var ListSessionLabelsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionLabelsRequest value
         */
        function ListSessionLabelsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            ListSessionLabelsRequest.refineValues(this);
        }
        ListSessionLabelsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionLabelsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionLabelsRequest.fromBinary = function (bytes) {
            var instance = new ListSessionLabelsRequest();
            ListSessionLabelsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionLabelsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        ListSessionLabelsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionLabelsRequest.refineValues(instance);
        };
        ListSessionLabelsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
        };
        Object.defineProperty(ListSessionLabelsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionLabelsRequest.prototype.toObject = function () {
            return {
                parent: this.parent
            };
        };
        ListSessionLabelsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionLabelsRequest;
    }());
    var ListSessionLabelsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionLabelsResponse value
         */
        function ListSessionLabelsResponse(value) {
            value = value || {};
            this.labels = (value.labels || []).slice();
            ListSessionLabelsResponse.refineValues(this);
        }
        ListSessionLabelsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionLabelsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionLabelsResponse.fromBinary = function (bytes) {
            var instance = new ListSessionLabelsResponse();
            ListSessionLabelsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionLabelsResponse.refineValues = function (instance) {
            instance.labels = instance.labels || [];
        };
        ListSessionLabelsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.labels = instance.labels || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionLabelsResponse.refineValues(instance);
        };
        ListSessionLabelsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.labels && instance.labels.length) {
                writer.writeRepeatedString(1, instance.labels);
            }
        };
        Object.defineProperty(ListSessionLabelsResponse.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (value) {
                this._labels = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionLabelsResponse.prototype.toObject = function () {
            return {
                labels: (this.labels || []).slice()
            };
        };
        ListSessionLabelsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionLabelsResponse;
    }());
    var AddSessionLabelsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AddSessionLabelsRequest value
         */
        function AddSessionLabelsRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.labels = (value.labels || []).slice();
            this.sessionView = value.sessionView;
            AddSessionLabelsRequest.refineValues(this);
        }
        AddSessionLabelsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AddSessionLabelsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AddSessionLabelsRequest.fromBinary = function (bytes) {
            var instance = new AddSessionLabelsRequest();
            AddSessionLabelsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AddSessionLabelsRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.labels = instance.labels || [];
            instance.sessionView = instance.sessionView || 0;
        };
        AddSessionLabelsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        (instance.labels = instance.labels || []).push(reader.readString());
                        break;
                    case 3:
                        instance.sessionView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            AddSessionLabelsRequest.refineValues(instance);
        };
        AddSessionLabelsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.labels && instance.labels.length) {
                writer.writeRepeatedString(2, instance.labels);
            }
            if (instance.sessionView) {
                writer.writeEnum(3, instance.sessionView);
            }
        };
        Object.defineProperty(AddSessionLabelsRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AddSessionLabelsRequest.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (value) {
                this._labels = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AddSessionLabelsRequest.prototype, "sessionView", {
            get: function () {
                return this._sessionView;
            },
            set: function (value) {
                this._sessionView = value;
            },
            enumerable: false,
            configurable: true
        });
        AddSessionLabelsRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                labels: (this.labels || []).slice(),
                sessionView: this.sessionView
            };
        };
        AddSessionLabelsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return AddSessionLabelsRequest;
    }());
    var RemoveSessionLabelsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RemoveSessionLabelsRequest value
         */
        function RemoveSessionLabelsRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.labels = (value.labels || []).slice();
            this.sessionView = value.sessionView;
            RemoveSessionLabelsRequest.refineValues(this);
        }
        RemoveSessionLabelsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RemoveSessionLabelsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RemoveSessionLabelsRequest.fromBinary = function (bytes) {
            var instance = new RemoveSessionLabelsRequest();
            RemoveSessionLabelsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RemoveSessionLabelsRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.labels = instance.labels || [];
            instance.sessionView = instance.sessionView || 0;
        };
        RemoveSessionLabelsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        (instance.labels = instance.labels || []).push(reader.readString());
                        break;
                    case 3:
                        instance.sessionView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            RemoveSessionLabelsRequest.refineValues(instance);
        };
        RemoveSessionLabelsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.labels && instance.labels.length) {
                writer.writeRepeatedString(2, instance.labels);
            }
            if (instance.sessionView) {
                writer.writeEnum(3, instance.sessionView);
            }
        };
        Object.defineProperty(RemoveSessionLabelsRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RemoveSessionLabelsRequest.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (value) {
                this._labels = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RemoveSessionLabelsRequest.prototype, "sessionView", {
            get: function () {
                return this._sessionView;
            },
            set: function (value) {
                this._sessionView = value;
            },
            enumerable: false,
            configurable: true
        });
        RemoveSessionLabelsRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                labels: (this.labels || []).slice(),
                sessionView: this.sessionView
            };
        };
        RemoveSessionLabelsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return RemoveSessionLabelsRequest;
    }());
    var ListSessionReviewsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionReviewsRequest value
         */
        function ListSessionReviewsRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.sessionReviewView = value.sessionReviewView;
            this.pageToken = value.pageToken;
            ListSessionReviewsRequest.refineValues(this);
        }
        ListSessionReviewsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionReviewsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionReviewsRequest.fromBinary = function (bytes) {
            var instance = new ListSessionReviewsRequest();
            ListSessionReviewsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionReviewsRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.sessionReviewView = instance.sessionReviewView || 0;
            instance.pageToken = instance.pageToken || '';
        };
        ListSessionReviewsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.sessionReviewView = reader.readEnum();
                        break;
                    case 4:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionReviewsRequest.refineValues(instance);
        };
        ListSessionReviewsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.sessionReviewView) {
                writer.writeEnum(2, instance.sessionReviewView);
            }
            if (instance.pageToken) {
                writer.writeString(4, instance.pageToken);
            }
        };
        Object.defineProperty(ListSessionReviewsRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionReviewsRequest.prototype, "sessionReviewView", {
            get: function () {
                return this._sessionReviewView;
            },
            set: function (value) {
                this._sessionReviewView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionReviewsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionReviewsRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                sessionReviewView: this.sessionReviewView,
                pageToken: this.pageToken
            };
        };
        ListSessionReviewsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionReviewsRequest;
    }());
    var ListSessionReviewsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListSessionReviewsResponse value
         */
        function ListSessionReviewsResponse(value) {
            value = value || {};
            this.sessionReviews = (value.sessionReviews || []).map(function (m) { return new exports.SessionReview(m); });
            this.nextPageToken = value.nextPageToken;
            ListSessionReviewsResponse.refineValues(this);
        }
        ListSessionReviewsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListSessionReviewsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListSessionReviewsResponse.fromBinary = function (bytes) {
            var instance = new ListSessionReviewsResponse();
            ListSessionReviewsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListSessionReviewsResponse.refineValues = function (instance) {
            instance.sessionReviews = instance.sessionReviews || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListSessionReviewsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.SessionReview();
                        reader.readMessage(messageInitializer1, exports.SessionReview.fromBinaryReader);
                        (instance.sessionReviews = instance.sessionReviews || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListSessionReviewsResponse.refineValues(instance);
        };
        ListSessionReviewsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.sessionReviews && instance.sessionReviews.length) {
                writer.writeRepeatedMessage(1, instance.sessionReviews, exports.SessionReview.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListSessionReviewsResponse.prototype, "sessionReviews", {
            get: function () {
                return this._sessionReviews;
            },
            set: function (value) {
                this._sessionReviews = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListSessionReviewsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListSessionReviewsResponse.prototype.toObject = function () {
            return {
                sessionReviews: (this.sessionReviews || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListSessionReviewsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListSessionReviewsResponse;
    }());
    var GetSessionReviewRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetSessionReviewRequest value
         */
        function GetSessionReviewRequest(value) {
            value = value || {};
            this.sessionReviewId = value.sessionReviewId;
            this.sessionReviewView = value.sessionReviewView;
            GetSessionReviewRequest.refineValues(this);
        }
        GetSessionReviewRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetSessionReviewRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetSessionReviewRequest.fromBinary = function (bytes) {
            var instance = new GetSessionReviewRequest();
            GetSessionReviewRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetSessionReviewRequest.refineValues = function (instance) {
            instance.sessionReviewId = instance.sessionReviewId || '';
            instance.sessionReviewView = instance.sessionReviewView || 0;
        };
        GetSessionReviewRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionReviewId = reader.readString();
                        break;
                    case 2:
                        instance.sessionReviewView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetSessionReviewRequest.refineValues(instance);
        };
        GetSessionReviewRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionReviewId) {
                writer.writeString(1, instance.sessionReviewId);
            }
            if (instance.sessionReviewView) {
                writer.writeEnum(2, instance.sessionReviewView);
            }
        };
        Object.defineProperty(GetSessionReviewRequest.prototype, "sessionReviewId", {
            get: function () {
                return this._sessionReviewId;
            },
            set: function (value) {
                this._sessionReviewId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetSessionReviewRequest.prototype, "sessionReviewView", {
            get: function () {
                return this._sessionReviewView;
            },
            set: function (value) {
                this._sessionReviewView = value;
            },
            enumerable: false,
            configurable: true
        });
        GetSessionReviewRequest.prototype.toObject = function () {
            return {
                sessionReviewId: this.sessionReviewId,
                sessionReviewView: this.sessionReviewView
            };
        };
        GetSessionReviewRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetSessionReviewRequest;
    }());
    var GetLatestSessionReviewRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetLatestSessionReviewRequest value
         */
        function GetLatestSessionReviewRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.sessionReviewView = value.sessionReviewView;
            GetLatestSessionReviewRequest.refineValues(this);
        }
        GetLatestSessionReviewRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetLatestSessionReviewRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetLatestSessionReviewRequest.fromBinary = function (bytes) {
            var instance = new GetLatestSessionReviewRequest();
            GetLatestSessionReviewRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetLatestSessionReviewRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.sessionReviewView = instance.sessionReviewView || 0;
        };
        GetLatestSessionReviewRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.sessionReviewView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetLatestSessionReviewRequest.refineValues(instance);
        };
        GetLatestSessionReviewRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.sessionReviewView) {
                writer.writeEnum(2, instance.sessionReviewView);
            }
        };
        Object.defineProperty(GetLatestSessionReviewRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetLatestSessionReviewRequest.prototype, "sessionReviewView", {
            get: function () {
                return this._sessionReviewView;
            },
            set: function (value) {
                this._sessionReviewView = value;
            },
            enumerable: false,
            configurable: true
        });
        GetLatestSessionReviewRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                sessionReviewView: this.sessionReviewView
            };
        };
        GetLatestSessionReviewRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetLatestSessionReviewRequest;
    }());

    var GetAnswerRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAnswerRequest value
         */
        function GetAnswerRequest(value) {
            value = value || {};
            this.sessionId = value.sessionId;
            this.text = value.text ? new TextInput(value.text) : undefined;
            this.maxNumAnswers = value.maxNumAnswers;
            this.thresholdReader = value.thresholdReader;
            this.thresholdRetriever = value.thresholdRetriever;
            this.thresholdOverall = value.thresholdOverall;
            this.readerModelName = value.readerModelName;
            GetAnswerRequest.refineValues(this);
        }
        GetAnswerRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAnswerRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAnswerRequest.fromBinary = function (bytes) {
            var instance = new GetAnswerRequest();
            GetAnswerRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAnswerRequest.refineValues = function (instance) {
            instance.sessionId = instance.sessionId || '';
            instance.text = instance.text || undefined;
            instance.maxNumAnswers = instance.maxNumAnswers || 0;
            instance.thresholdReader = instance.thresholdReader || 0;
            instance.thresholdRetriever = instance.thresholdRetriever || 0;
            instance.thresholdOverall = instance.thresholdOverall || 0;
            instance.readerModelName = instance.readerModelName || '';
        };
        GetAnswerRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sessionId = reader.readString();
                        break;
                    case 2:
                        instance.text = new TextInput();
                        reader.readMessage(instance.text, TextInput.fromBinaryReader);
                        break;
                    case 3:
                        instance.maxNumAnswers = reader.readInt32();
                        break;
                    case 4:
                        instance.thresholdReader = reader.readFloat();
                        break;
                    case 5:
                        instance.thresholdRetriever = reader.readFloat();
                        break;
                    case 6:
                        instance.thresholdOverall = reader.readFloat();
                        break;
                    case 7:
                        instance.readerModelName = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAnswerRequest.refineValues(instance);
        };
        GetAnswerRequest.toBinaryWriter = function (instance, writer) {
            if (instance.sessionId) {
                writer.writeString(1, instance.sessionId);
            }
            if (instance.text) {
                writer.writeMessage(2, instance.text, TextInput.toBinaryWriter);
            }
            if (instance.maxNumAnswers) {
                writer.writeInt32(3, instance.maxNumAnswers);
            }
            if (instance.thresholdReader) {
                writer.writeFloat(4, instance.thresholdReader);
            }
            if (instance.thresholdRetriever) {
                writer.writeFloat(5, instance.thresholdRetriever);
            }
            if (instance.thresholdOverall) {
                writer.writeFloat(6, instance.thresholdOverall);
            }
            if (instance.readerModelName) {
                writer.writeString(7, instance.readerModelName);
            }
        };
        Object.defineProperty(GetAnswerRequest.prototype, "sessionId", {
            get: function () {
                return this._sessionId;
            },
            set: function (value) {
                this._sessionId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "text", {
            get: function () {
                return this._text;
            },
            set: function (value) {
                this._text = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "maxNumAnswers", {
            get: function () {
                return this._maxNumAnswers;
            },
            set: function (value) {
                this._maxNumAnswers = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "thresholdReader", {
            get: function () {
                return this._thresholdReader;
            },
            set: function (value) {
                this._thresholdReader = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "thresholdRetriever", {
            get: function () {
                return this._thresholdRetriever;
            },
            set: function (value) {
                this._thresholdRetriever = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "thresholdOverall", {
            get: function () {
                return this._thresholdOverall;
            },
            set: function (value) {
                this._thresholdOverall = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAnswerRequest.prototype, "readerModelName", {
            get: function () {
                return this._readerModelName;
            },
            set: function (value) {
                this._readerModelName = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAnswerRequest.prototype.toObject = function () {
            return {
                sessionId: this.sessionId,
                text: this.text ? this.text.toObject() : undefined,
                maxNumAnswers: this.maxNumAnswers,
                thresholdReader: this.thresholdReader,
                thresholdRetriever: this.thresholdRetriever,
                thresholdOverall: this.thresholdOverall,
                readerModelName: this.readerModelName
            };
        };
        GetAnswerRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAnswerRequest;
    }());
    var GetAnswerResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAnswerResponse value
         */
        function GetAnswerResponse(value) {
            value = value || {};
            this.queryResult = value.queryResult
                ? new DetectIntentResponse(value.queryResult)
                : undefined;
            GetAnswerResponse.refineValues(this);
        }
        GetAnswerResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAnswerResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAnswerResponse.fromBinary = function (bytes) {
            var instance = new GetAnswerResponse();
            GetAnswerResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAnswerResponse.refineValues = function (instance) {
            instance.queryResult = instance.queryResult || undefined;
        };
        GetAnswerResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        instance.queryResult = new DetectIntentResponse();
                        reader.readMessage(instance.queryResult, DetectIntentResponse.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAnswerResponse.refineValues(instance);
        };
        GetAnswerResponse.toBinaryWriter = function (instance, writer) {
            if (instance.queryResult) {
                writer.writeMessage(2, instance.queryResult, DetectIntentResponse.toBinaryWriter);
            }
        };
        Object.defineProperty(GetAnswerResponse.prototype, "queryResult", {
            get: function () {
                return this._queryResult;
            },
            set: function (value) {
                this._queryResult = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAnswerResponse.prototype.toObject = function () {
            return {
                queryResult: this.queryResult ? this.queryResult.toObject() : undefined
            };
        };
        GetAnswerResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAnswerResponse;
    }());
    var RunScraperResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RunScraperResponse value
         */
        function RunScraperResponse(value) {
            value = value || {};
            this.containerName = value.containerName;
            this.containerId = value.containerId;
            RunScraperResponse.refineValues(this);
        }
        RunScraperResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RunScraperResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RunScraperResponse.fromBinary = function (bytes) {
            var instance = new RunScraperResponse();
            RunScraperResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RunScraperResponse.refineValues = function (instance) {
            instance.containerName = instance.containerName || '';
            instance.containerId = instance.containerId || '';
        };
        RunScraperResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.containerName = reader.readString();
                        break;
                    case 2:
                        instance.containerId = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            RunScraperResponse.refineValues(instance);
        };
        RunScraperResponse.toBinaryWriter = function (instance, writer) {
            if (instance.containerName) {
                writer.writeString(1, instance.containerName);
            }
            if (instance.containerId) {
                writer.writeString(2, instance.containerId);
            }
        };
        Object.defineProperty(RunScraperResponse.prototype, "containerName", {
            get: function () {
                return this._containerName;
            },
            set: function (value) {
                this._containerName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RunScraperResponse.prototype, "containerId", {
            get: function () {
                return this._containerId;
            },
            set: function (value) {
                this._containerId = value;
            },
            enumerable: false,
            configurable: true
        });
        RunScraperResponse.prototype.toObject = function () {
            return {
                containerName: this.containerName,
                containerId: this.containerId
            };
        };
        RunScraperResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return RunScraperResponse;
    }());
    var RunTrainingResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RunTrainingResponse value
         */
        function RunTrainingResponse(value) {
            value = value || {};
            this.f1 = value.f1;
            this.accuracy = value.accuracy;
            RunTrainingResponse.refineValues(this);
        }
        RunTrainingResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RunTrainingResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RunTrainingResponse.fromBinary = function (bytes) {
            var instance = new RunTrainingResponse();
            RunTrainingResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RunTrainingResponse.refineValues = function (instance) {
            instance.f1 = instance.f1 || 0;
            instance.accuracy = instance.accuracy || 0;
        };
        RunTrainingResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.f1 = reader.readFloat();
                        break;
                    case 2:
                        instance.accuracy = reader.readFloat();
                        break;
                    default:
                        reader.skipField();
                }
            }
            RunTrainingResponse.refineValues(instance);
        };
        RunTrainingResponse.toBinaryWriter = function (instance, writer) {
            if (instance.f1) {
                writer.writeFloat(1, instance.f1);
            }
            if (instance.accuracy) {
                writer.writeFloat(2, instance.accuracy);
            }
        };
        Object.defineProperty(RunTrainingResponse.prototype, "f1", {
            get: function () {
                return this._f1;
            },
            set: function (value) {
                this._f1 = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RunTrainingResponse.prototype, "accuracy", {
            get: function () {
                return this._accuracy;
            },
            set: function (value) {
                this._accuracy = value;
            },
            enumerable: false,
            configurable: true
        });
        RunTrainingResponse.prototype.toObject = function () {
            return {
                f1: this.f1,
                accuracy: this.accuracy
            };
        };
        RunTrainingResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return RunTrainingResponse;
    }());

    var Empty = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Empty value
         */
        function Empty(value) {
            value = value || {};
            Empty.refineValues(this);
        }
        Empty.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Empty.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Empty.fromBinary = function (bytes) {
            var instance = new Empty();
            Empty.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Empty.refineValues = function (instance) { };
        Empty.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default:
                        reader.skipField();
                }
            }
            Empty.refineValues(instance);
        };
        Empty.toBinaryWriter = function (instance, writer) { };
        Empty.prototype.toObject = function () {
            return {};
        };
        Empty.prototype.toJSON = function () {
            return this.toObject();
        };
        return Empty;
    }());

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_QA_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_QA_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_QA_CLIENT_SETTINGS');

    /* tslint:disable */
    var QAClient = /** @class */ (function () {
        function QAClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.qa.QA', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetAnswerRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GetAnswerResponse>
         */
        QAClient.prototype.getAnswer = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getAnswer$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetAnswerRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetAnswerResponse>>
         */
        QAClient.prototype.getAnswer$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.qa.QA/GetAnswer',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetAnswerRequest,
                responseClass: GetAnswerResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf000.Empty request
         * @param Metadata metadata
         * @return Observable<thisProto.RunScraperResponse>
         */
        QAClient.prototype.runScraper = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.runScraper$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf000.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.RunScraperResponse>>
         */
        QAClient.prototype.runScraper$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.qa.QA/RunScraper',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: RunScraperResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf000.Empty request
         * @param Metadata metadata
         * @return Observable<thisProto.RunTrainingResponse>
         */
        QAClient.prototype.runTraining = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.runTraining$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf000.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.RunTrainingResponse>>
         */
        QAClient.prototype.runTraining$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.qa.QA/RunTraining',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: RunTrainingResponse
            });
        };
        return QAClient;
    }());
    QAClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function QAClient_Factory() { return new QAClient(i0__namespace.ɵɵinject(GRPC_QA_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: QAClient, providedIn: "root" });
    QAClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    QAClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_QA_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS');

    exports.DefaultProjectRole = void 0;
    (function (DefaultProjectRole) {
        DefaultProjectRole[DefaultProjectRole["projectUnspecified"] = 0] = "projectUnspecified";
        DefaultProjectRole[DefaultProjectRole["projectUser"] = 1] = "projectUser";
        DefaultProjectRole[DefaultProjectRole["projectExecutor"] = 2] = "projectExecutor";
        DefaultProjectRole[DefaultProjectRole["projectDeveloper"] = 3] = "projectDeveloper";
        DefaultProjectRole[DefaultProjectRole["projectAdmin"] = 4] = "projectAdmin";
        DefaultProjectRole[DefaultProjectRole["projectInactive"] = 5] = "projectInactive";
    })(exports.DefaultProjectRole || (exports.DefaultProjectRole = {}));
    exports.ProjectRoleView = void 0;
    (function (ProjectRoleView) {
        ProjectRoleView[ProjectRoleView["projectRoleViewUnspecified"] = 0] = "projectRoleViewUnspecified";
        ProjectRoleView[ProjectRoleView["projectRoleViewShallow"] = 1] = "projectRoleViewShallow";
        ProjectRoleView[ProjectRoleView["projectRoleViewFull"] = 2] = "projectRoleViewFull";
    })(exports.ProjectRoleView || (exports.ProjectRoleView = {}));
    var ProjectRole = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ProjectRole value
         */
        function ProjectRole(value) {
            value = value || {};
            this.roleId = value.roleId;
            this.name = value.name;
            this.permissions = (value.permissions || []).slice();
            ProjectRole.refineValues(this);
        }
        ProjectRole.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ProjectRole.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ProjectRole.fromBinary = function (bytes) {
            var instance = new ProjectRole();
            ProjectRole.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ProjectRole.refineValues = function (instance) {
            instance.roleId = instance.roleId || 0;
            instance.name = instance.name || '';
            instance.permissions = instance.permissions || [];
        };
        ProjectRole.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.roleId = reader.readUint32();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        (instance.permissions = instance.permissions || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            ProjectRole.refineValues(instance);
        };
        ProjectRole.toBinaryWriter = function (instance, writer) {
            if (instance.roleId) {
                writer.writeUint32(1, instance.roleId);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.permissions && instance.permissions.length) {
                writer.writeRepeatedString(3, instance.permissions);
            }
        };
        Object.defineProperty(ProjectRole.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProjectRole.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProjectRole.prototype, "permissions", {
            get: function () {
                return this._permissions;
            },
            set: function (value) {
                this._permissions = value;
            },
            enumerable: false,
            configurable: true
        });
        ProjectRole.prototype.toObject = function () {
            return {
                roleId: this.roleId,
                name: this.name,
                permissions: (this.permissions || []).slice()
            };
        };
        ProjectRole.prototype.toJSON = function () {
            return this.toObject();
        };
        return ProjectRole;
    }());
    var CreateProjectRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateProjectRoleRequest value
         */
        function CreateProjectRoleRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.role = value.role ? new ProjectRole(value.role) : undefined;
            this.projectRoleView = value.projectRoleView;
            CreateProjectRoleRequest.refineValues(this);
        }
        CreateProjectRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateProjectRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateProjectRoleRequest.fromBinary = function (bytes) {
            var instance = new CreateProjectRoleRequest();
            CreateProjectRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateProjectRoleRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.role = instance.role || undefined;
            instance.projectRoleView = instance.projectRoleView || 0;
        };
        CreateProjectRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.role = new ProjectRole();
                        reader.readMessage(instance.role, ProjectRole.fromBinaryReader);
                        break;
                    case 3:
                        instance.projectRoleView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateProjectRoleRequest.refineValues(instance);
        };
        CreateProjectRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.role) {
                writer.writeMessage(2, instance.role, ProjectRole.toBinaryWriter);
            }
            if (instance.projectRoleView) {
                writer.writeEnum(3, instance.projectRoleView);
            }
        };
        Object.defineProperty(CreateProjectRoleRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateProjectRoleRequest.prototype, "role", {
            get: function () {
                return this._role;
            },
            set: function (value) {
                this._role = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateProjectRoleRequest.prototype, "projectRoleView", {
            get: function () {
                return this._projectRoleView;
            },
            set: function (value) {
                this._projectRoleView = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateProjectRoleRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                role: this.role ? this.role.toObject() : undefined,
                projectRoleView: this.projectRoleView
            };
        };
        CreateProjectRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateProjectRoleRequest;
    }());
    var UpdateProjectRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateProjectRoleRequest value
         */
        function UpdateProjectRoleRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.role = value.role ? new ProjectRole(value.role) : undefined;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            this.projectRoleView = value.projectRoleView;
            UpdateProjectRoleRequest.refineValues(this);
        }
        UpdateProjectRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateProjectRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateProjectRoleRequest.fromBinary = function (bytes) {
            var instance = new UpdateProjectRoleRequest();
            UpdateProjectRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateProjectRoleRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.role = instance.role || undefined;
            instance.updateMask = instance.updateMask || undefined;
            instance.projectRoleView = instance.projectRoleView || 0;
        };
        UpdateProjectRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.role = new ProjectRole();
                        reader.readMessage(instance.role, ProjectRole.fromBinaryReader);
                        break;
                    case 3:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    case 4:
                        instance.projectRoleView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateProjectRoleRequest.refineValues(instance);
        };
        UpdateProjectRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.role) {
                writer.writeMessage(2, instance.role, ProjectRole.toBinaryWriter);
            }
            if (instance.updateMask) {
                writer.writeMessage(3, instance.updateMask, FieldMask.toBinaryWriter);
            }
            if (instance.projectRoleView) {
                writer.writeEnum(4, instance.projectRoleView);
            }
        };
        Object.defineProperty(UpdateProjectRoleRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateProjectRoleRequest.prototype, "role", {
            get: function () {
                return this._role;
            },
            set: function (value) {
                this._role = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateProjectRoleRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateProjectRoleRequest.prototype, "projectRoleView", {
            get: function () {
                return this._projectRoleView;
            },
            set: function (value) {
                this._projectRoleView = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateProjectRoleRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                role: this.role ? this.role.toObject() : undefined,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined,
                projectRoleView: this.projectRoleView
            };
        };
        UpdateProjectRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateProjectRoleRequest;
    }());
    exports.GetProjectRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetProjectRoleRequest value
         */
        function GetProjectRoleRequest(value) {
            this._projectRoleIdentifier = GetProjectRoleRequest.ProjectRoleIdentifierCase.none;
            value = value || {};
            this.parent = value.parent;
            this.roleId = value.roleId;
            this.roleName = value.roleName;
            this.projectRoleView = value.projectRoleView;
            GetProjectRoleRequest.refineValues(this);
        }
        GetProjectRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetProjectRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetProjectRoleRequest.fromBinary = function (bytes) {
            var instance = new GetProjectRoleRequest();
            GetProjectRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetProjectRoleRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.projectRoleView = instance.projectRoleView || 0;
        };
        GetProjectRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.roleId = reader.readUint32();
                        break;
                    case 3:
                        instance.roleName = reader.readString();
                        break;
                    case 4:
                        instance.projectRoleView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetProjectRoleRequest.refineValues(instance);
        };
        GetProjectRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.roleId || instance.roleId === 0) {
                writer.writeUint32(2, instance.roleId);
            }
            if (instance.roleName || instance.roleName === '') {
                writer.writeString(3, instance.roleName);
            }
            if (instance.projectRoleView) {
                writer.writeEnum(4, instance.projectRoleView);
            }
        };
        Object.defineProperty(GetProjectRoleRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetProjectRoleRequest.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._roleName = undefined;
                    this._projectRoleIdentifier =
                        GetProjectRoleRequest.ProjectRoleIdentifierCase.roleId;
                }
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetProjectRoleRequest.prototype, "roleName", {
            get: function () {
                return this._roleName;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._roleId = undefined;
                    this._projectRoleIdentifier =
                        GetProjectRoleRequest.ProjectRoleIdentifierCase.roleName;
                }
                this._roleName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetProjectRoleRequest.prototype, "projectRoleView", {
            get: function () {
                return this._projectRoleView;
            },
            set: function (value) {
                this._projectRoleView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetProjectRoleRequest.prototype, "projectRoleIdentifier", {
            get: function () {
                return this._projectRoleIdentifier;
            },
            enumerable: false,
            configurable: true
        });
        GetProjectRoleRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                roleId: this.roleId,
                roleName: this.roleName,
                projectRoleView: this.projectRoleView
            };
        };
        GetProjectRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetProjectRoleRequest;
    }());
    (function (GetProjectRoleRequest) {
        var ProjectRoleIdentifierCase;
        (function (ProjectRoleIdentifierCase) {
            ProjectRoleIdentifierCase[ProjectRoleIdentifierCase["none"] = 0] = "none";
            ProjectRoleIdentifierCase[ProjectRoleIdentifierCase["roleId"] = 1] = "roleId";
            ProjectRoleIdentifierCase[ProjectRoleIdentifierCase["roleName"] = 2] = "roleName";
        })(ProjectRoleIdentifierCase = GetProjectRoleRequest.ProjectRoleIdentifierCase || (GetProjectRoleRequest.ProjectRoleIdentifierCase = {}));
    })(exports.GetProjectRoleRequest || (exports.GetProjectRoleRequest = {}));
    var DeleteProjectRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteProjectRoleRequest value
         */
        function DeleteProjectRoleRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.roleId = value.roleId;
            DeleteProjectRoleRequest.refineValues(this);
        }
        DeleteProjectRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteProjectRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteProjectRoleRequest.fromBinary = function (bytes) {
            var instance = new DeleteProjectRoleRequest();
            DeleteProjectRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteProjectRoleRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.roleId = instance.roleId || 0;
        };
        DeleteProjectRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.roleId = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteProjectRoleRequest.refineValues(instance);
        };
        DeleteProjectRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.roleId) {
                writer.writeUint32(2, instance.roleId);
            }
        };
        Object.defineProperty(DeleteProjectRoleRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DeleteProjectRoleRequest.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteProjectRoleRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                roleId: this.roleId
            };
        };
        DeleteProjectRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteProjectRoleRequest;
    }());
    var ListProjectRolesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListProjectRolesRequest value
         */
        function ListProjectRolesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.pageToken = value.pageToken;
            this.projectRoleView = value.projectRoleView;
            ListProjectRolesRequest.refineValues(this);
        }
        ListProjectRolesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListProjectRolesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListProjectRolesRequest.fromBinary = function (bytes) {
            var instance = new ListProjectRolesRequest();
            ListProjectRolesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListProjectRolesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.pageToken = instance.pageToken || '';
            instance.projectRoleView = instance.projectRoleView || 0;
        };
        ListProjectRolesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.pageToken = reader.readString();
                        break;
                    case 3:
                        instance.projectRoleView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListProjectRolesRequest.refineValues(instance);
        };
        ListProjectRolesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.pageToken) {
                writer.writeString(2, instance.pageToken);
            }
            if (instance.projectRoleView) {
                writer.writeEnum(3, instance.projectRoleView);
            }
        };
        Object.defineProperty(ListProjectRolesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListProjectRolesRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListProjectRolesRequest.prototype, "projectRoleView", {
            get: function () {
                return this._projectRoleView;
            },
            set: function (value) {
                this._projectRoleView = value;
            },
            enumerable: false,
            configurable: true
        });
        ListProjectRolesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                pageToken: this.pageToken,
                projectRoleView: this.projectRoleView
            };
        };
        ListProjectRolesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListProjectRolesRequest;
    }());
    var ListProjectRolesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListProjectRolesResponse value
         */
        function ListProjectRolesResponse(value) {
            value = value || {};
            this.projectRoles = (value.projectRoles || []).map(function (m) { return new ProjectRole(m); });
            this.nextPageToken = value.nextPageToken;
            ListProjectRolesResponse.refineValues(this);
        }
        ListProjectRolesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListProjectRolesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListProjectRolesResponse.fromBinary = function (bytes) {
            var instance = new ListProjectRolesResponse();
            ListProjectRolesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListProjectRolesResponse.refineValues = function (instance) {
            instance.projectRoles = instance.projectRoles || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListProjectRolesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new ProjectRole();
                        reader.readMessage(messageInitializer1, ProjectRole.fromBinaryReader);
                        (instance.projectRoles = instance.projectRoles || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListProjectRolesResponse.refineValues(instance);
        };
        ListProjectRolesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.projectRoles && instance.projectRoles.length) {
                writer.writeRepeatedMessage(1, instance.projectRoles, ProjectRole.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListProjectRolesResponse.prototype, "projectRoles", {
            get: function () {
                return this._projectRoles;
            },
            set: function (value) {
                this._projectRoles = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListProjectRolesResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListProjectRolesResponse.prototype.toObject = function () {
            return {
                projectRoles: (this.projectRoles || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListProjectRolesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListProjectRolesResponse;
    }());

    exports.DefaultServerRole = void 0;
    (function (DefaultServerRole) {
        DefaultServerRole[DefaultServerRole["serverUnspecified"] = 0] = "serverUnspecified";
        DefaultServerRole[DefaultServerRole["serverUser"] = 1] = "serverUser";
        DefaultServerRole[DefaultServerRole["serverManager"] = 2] = "serverManager";
        DefaultServerRole[DefaultServerRole["serverAdmin"] = 3] = "serverAdmin";
        DefaultServerRole[DefaultServerRole["serverInactive"] = 4] = "serverInactive";
    })(exports.DefaultServerRole || (exports.DefaultServerRole = {}));
    var User = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param User value
         */
        function User(value) {
            value = value || {};
            this.userId = value.userId;
            this.displayName = value.displayName;
            this.serverRoleId = value.serverRoleId;
            this.userEmail = value.userEmail;
            User.refineValues(this);
        }
        User.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            User.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        User.fromBinary = function (bytes) {
            var instance = new User();
            User.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        User.refineValues = function (instance) {
            instance.userId = instance.userId || '';
            instance.displayName = instance.displayName || '';
            instance.serverRoleId = instance.serverRoleId || 0;
            instance.userEmail = instance.userEmail || '';
        };
        User.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        instance.userId = reader.readString();
                        break;
                    case 3:
                        instance.displayName = reader.readString();
                        break;
                    case 6:
                        instance.serverRoleId = reader.readUint32();
                        break;
                    case 7:
                        instance.userEmail = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            User.refineValues(instance);
        };
        User.toBinaryWriter = function (instance, writer) {
            if (instance.userId) {
                writer.writeString(2, instance.userId);
            }
            if (instance.displayName) {
                writer.writeString(3, instance.displayName);
            }
            if (instance.serverRoleId) {
                writer.writeUint32(6, instance.serverRoleId);
            }
            if (instance.userEmail) {
                writer.writeString(7, instance.userEmail);
            }
        };
        Object.defineProperty(User.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(User.prototype, "displayName", {
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                this._displayName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(User.prototype, "serverRoleId", {
            get: function () {
                return this._serverRoleId;
            },
            set: function (value) {
                this._serverRoleId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(User.prototype, "userEmail", {
            get: function () {
                return this._userEmail;
            },
            set: function (value) {
                this._userEmail = value;
            },
            enumerable: false,
            configurable: true
        });
        User.prototype.toObject = function () {
            return {
                userId: this.userId,
                displayName: this.displayName,
                serverRoleId: this.serverRoleId,
                userEmail: this.userEmail
            };
        };
        User.prototype.toJSON = function () {
            return this.toObject();
        };
        return User;
    }());
    exports.UserInfo = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UserInfo value
         */
        function UserInfo(value) {
            value = value || {};
            this.user = value.user ? new User(value.user) : undefined;
            this.projectRoles = Object.assign({}, (value.projectRoles || {}));
            UserInfo.refineValues(this);
        }
        UserInfo.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UserInfo.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UserInfo.fromBinary = function (bytes) {
            var instance = new UserInfo();
            UserInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UserInfo.refineValues = function (instance) {
            instance.user = instance.user || undefined;
            instance.projectRoles = instance.projectRoles || {};
        };
        UserInfo.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.user = new User();
                        reader.readMessage(instance.user, User.fromBinaryReader);
                        break;
                    case 2:
                        var msg_2 = {};
                        reader.readMessage(msg_2, UserInfo.ProjectRolesEntry.fromBinaryReader);
                        instance.projectRoles = instance.projectRoles || {};
                        instance.projectRoles[msg_2.key] = msg_2.value;
                        break;
                    default:
                        reader.skipField();
                }
            }
            UserInfo.refineValues(instance);
        };
        UserInfo.toBinaryWriter = function (instance, writer) {
            if (instance.user) {
                writer.writeMessage(1, instance.user, User.toBinaryWriter);
            }
            if (!!instance.projectRoles) {
                var keys_2 = Object.keys(instance.projectRoles);
                if (keys_2.length) {
                    var repeated_2 = keys_2
                        .map(function (key) { return ({
                        key: key,
                        value: instance.projectRoles[key]
                    }); })
                        .reduce(function (r, v) { return __spread(r, [v]); }, []);
                    writer.writeRepeatedMessage(2, repeated_2, UserInfo.ProjectRolesEntry.toBinaryWriter);
                }
            }
        };
        Object.defineProperty(UserInfo.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (value) {
                this._user = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UserInfo.prototype, "projectRoles", {
            get: function () {
                return this._projectRoles;
            },
            set: function (value) {
                this._projectRoles = value;
            },
            enumerable: false,
            configurable: true
        });
        UserInfo.prototype.toObject = function () {
            return {
                user: this.user ? this.user.toObject() : undefined,
                projectRoles: Object.assign({}, (this.projectRoles || {}))
            };
        };
        UserInfo.prototype.toJSON = function () {
            return this.toObject();
        };
        return UserInfo;
    }());
    (function (UserInfo) {
        var ProjectRolesEntry = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param ProjectRolesEntry value
             */
            function ProjectRolesEntry(value) {
                value = value || {};
                this.key = value.key;
                this.value = value.value
                    ? new ProjectRole(value.value)
                    : undefined;
                ProjectRolesEntry.refineValues(this);
            }
            ProjectRolesEntry.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                ProjectRolesEntry.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            ProjectRolesEntry.fromBinary = function (bytes) {
                var instance = new ProjectRolesEntry();
                ProjectRolesEntry.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            ProjectRolesEntry.refineValues = function (instance) {
                instance.key = instance.key || '';
                instance.value = instance.value || undefined;
            };
            ProjectRolesEntry.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.key = reader.readString();
                            break;
                        case 2:
                            instance.value = new ProjectRole();
                            reader.readMessage(instance.value, ProjectRole.fromBinaryReader);
                            break;
                        default:
                            reader.skipField();
                    }
                }
                ProjectRolesEntry.refineValues(instance);
            };
            ProjectRolesEntry.toBinaryWriter = function (instance, writer) {
                if (instance.key) {
                    writer.writeString(1, instance.key);
                }
                if (instance.value) {
                    writer.writeMessage(2, instance.value, ProjectRole.toBinaryWriter);
                }
            };
            Object.defineProperty(ProjectRolesEntry.prototype, "key", {
                get: function () {
                    return this._key;
                },
                set: function (value) {
                    this._key = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(ProjectRolesEntry.prototype, "value", {
                get: function () {
                    return this._value;
                },
                set: function (value) {
                    this._value = value;
                },
                enumerable: false,
                configurable: true
            });
            ProjectRolesEntry.prototype.toObject = function () {
                return {
                    key: this.key,
                    value: this.value ? this.value.toObject() : undefined
                };
            };
            ProjectRolesEntry.prototype.toJSON = function () {
                return this.toObject();
            };
            return ProjectRolesEntry;
        }());
        UserInfo.ProjectRolesEntry = ProjectRolesEntry;
    })(exports.UserInfo || (exports.UserInfo = {}));
    var CreateUserRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateUserRequest value
         */
        function CreateUserRequest(value) {
            value = value || {};
            this.user = value.user ? new User(value.user) : undefined;
            this.password = value.password;
            CreateUserRequest.refineValues(this);
        }
        CreateUserRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateUserRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateUserRequest.fromBinary = function (bytes) {
            var instance = new CreateUserRequest();
            CreateUserRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateUserRequest.refineValues = function (instance) {
            instance.user = instance.user || undefined;
            instance.password = instance.password || '';
        };
        CreateUserRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.user = new User();
                        reader.readMessage(instance.user, User.fromBinaryReader);
                        break;
                    case 3:
                        instance.password = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateUserRequest.refineValues(instance);
        };
        CreateUserRequest.toBinaryWriter = function (instance, writer) {
            if (instance.user) {
                writer.writeMessage(1, instance.user, User.toBinaryWriter);
            }
            if (instance.password) {
                writer.writeString(3, instance.password);
            }
        };
        Object.defineProperty(CreateUserRequest.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (value) {
                this._user = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateUserRequest.prototype, "password", {
            get: function () {
                return this._password;
            },
            set: function (value) {
                this._password = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateUserRequest.prototype.toObject = function () {
            return {
                user: this.user ? this.user.toObject() : undefined,
                password: this.password
            };
        };
        CreateUserRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateUserRequest;
    }());
    var UpdateUserRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateUserRequest value
         */
        function UpdateUserRequest(value) {
            value = value || {};
            this.user = value.user ? new User(value.user) : undefined;
            this.password = value.password;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            UpdateUserRequest.refineValues(this);
        }
        UpdateUserRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateUserRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateUserRequest.fromBinary = function (bytes) {
            var instance = new UpdateUserRequest();
            UpdateUserRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateUserRequest.refineValues = function (instance) {
            instance.user = instance.user || undefined;
            instance.password = instance.password || '';
            instance.updateMask = instance.updateMask || undefined;
        };
        UpdateUserRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.user = new User();
                        reader.readMessage(instance.user, User.fromBinaryReader);
                        break;
                    case 4:
                        instance.password = reader.readString();
                        break;
                    case 5:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateUserRequest.refineValues(instance);
        };
        UpdateUserRequest.toBinaryWriter = function (instance, writer) {
            if (instance.user) {
                writer.writeMessage(1, instance.user, User.toBinaryWriter);
            }
            if (instance.password) {
                writer.writeString(4, instance.password);
            }
            if (instance.updateMask) {
                writer.writeMessage(5, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(UpdateUserRequest.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (value) {
                this._user = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateUserRequest.prototype, "password", {
            get: function () {
                return this._password;
            },
            set: function (value) {
                this._password = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateUserRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateUserRequest.prototype.toObject = function () {
            return {
                user: this.user ? this.user.toObject() : undefined,
                password: this.password,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        UpdateUserRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateUserRequest;
    }());
    exports.GetUserRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetUserRequest value
         */
        function GetUserRequest(value) {
            this._userIdentifier = GetUserRequest.UserIdentifierCase.none;
            value = value || {};
            this.userId = value.userId;
            this.userEmail = value.userEmail;
            GetUserRequest.refineValues(this);
        }
        GetUserRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetUserRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetUserRequest.fromBinary = function (bytes) {
            var instance = new GetUserRequest();
            GetUserRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetUserRequest.refineValues = function (instance) { };
        GetUserRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.userId = reader.readString();
                        break;
                    case 3:
                        instance.userEmail = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetUserRequest.refineValues(instance);
        };
        GetUserRequest.toBinaryWriter = function (instance, writer) {
            if (instance.userId || instance.userId === '') {
                writer.writeString(1, instance.userId);
            }
            if (instance.userEmail || instance.userEmail === '') {
                writer.writeString(3, instance.userEmail);
            }
        };
        Object.defineProperty(GetUserRequest.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._userEmail = undefined;
                    this._userIdentifier = GetUserRequest.UserIdentifierCase.userId;
                }
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetUserRequest.prototype, "userEmail", {
            get: function () {
                return this._userEmail;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._userId = undefined;
                    this._userIdentifier = GetUserRequest.UserIdentifierCase.userEmail;
                }
                this._userEmail = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetUserRequest.prototype, "userIdentifier", {
            get: function () {
                return this._userIdentifier;
            },
            enumerable: false,
            configurable: true
        });
        GetUserRequest.prototype.toObject = function () {
            return {
                userId: this.userId,
                userEmail: this.userEmail
            };
        };
        GetUserRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetUserRequest;
    }());
    (function (GetUserRequest) {
        var UserIdentifierCase;
        (function (UserIdentifierCase) {
            UserIdentifierCase[UserIdentifierCase["none"] = 0] = "none";
            UserIdentifierCase[UserIdentifierCase["userId"] = 1] = "userId";
            UserIdentifierCase[UserIdentifierCase["userEmail"] = 2] = "userEmail";
        })(UserIdentifierCase = GetUserRequest.UserIdentifierCase || (GetUserRequest.UserIdentifierCase = {}));
    })(exports.GetUserRequest || (exports.GetUserRequest = {}));
    var DeleteUserRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteUserRequest value
         */
        function DeleteUserRequest(value) {
            value = value || {};
            this.userId = value.userId;
            DeleteUserRequest.refineValues(this);
        }
        DeleteUserRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteUserRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteUserRequest.fromBinary = function (bytes) {
            var instance = new DeleteUserRequest();
            DeleteUserRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteUserRequest.refineValues = function (instance) {
            instance.userId = instance.userId || '';
        };
        DeleteUserRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.userId = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteUserRequest.refineValues(instance);
        };
        DeleteUserRequest.toBinaryWriter = function (instance, writer) {
            if (instance.userId) {
                writer.writeString(1, instance.userId);
            }
        };
        Object.defineProperty(DeleteUserRequest.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteUserRequest.prototype.toObject = function () {
            return {
                userId: this.userId
            };
        };
        DeleteUserRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteUserRequest;
    }());
    var ListUsersRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListUsersRequest value
         */
        function ListUsersRequest(value) {
            value = value || {};
            this.pageToken = value.pageToken;
            ListUsersRequest.refineValues(this);
        }
        ListUsersRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListUsersRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListUsersRequest.fromBinary = function (bytes) {
            var instance = new ListUsersRequest();
            ListUsersRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListUsersRequest.refineValues = function (instance) {
            instance.pageToken = instance.pageToken || '';
        };
        ListUsersRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListUsersRequest.refineValues(instance);
        };
        ListUsersRequest.toBinaryWriter = function (instance, writer) {
            if (instance.pageToken) {
                writer.writeString(1, instance.pageToken);
            }
        };
        Object.defineProperty(ListUsersRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListUsersRequest.prototype.toObject = function () {
            return {
                pageToken: this.pageToken
            };
        };
        ListUsersRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListUsersRequest;
    }());
    var ListUsersResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListUsersResponse value
         */
        function ListUsersResponse(value) {
            value = value || {};
            this.users = (value.users || []).map(function (m) { return new User(m); });
            this.nextPageToken = value.nextPageToken;
            ListUsersResponse.refineValues(this);
        }
        ListUsersResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListUsersResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListUsersResponse.fromBinary = function (bytes) {
            var instance = new ListUsersResponse();
            ListUsersResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListUsersResponse.refineValues = function (instance) {
            instance.users = instance.users || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListUsersResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new User();
                        reader.readMessage(messageInitializer1, User.fromBinaryReader);
                        (instance.users = instance.users || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListUsersResponse.refineValues(instance);
        };
        ListUsersResponse.toBinaryWriter = function (instance, writer) {
            if (instance.users && instance.users.length) {
                writer.writeRepeatedMessage(1, instance.users, User.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListUsersResponse.prototype, "users", {
            get: function () {
                return this._users;
            },
            set: function (value) {
                this._users = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListUsersResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListUsersResponse.prototype.toObject = function () {
            return {
                users: (this.users || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListUsersResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListUsersResponse;
    }());
    var ListUserInfosResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListUserInfosResponse value
         */
        function ListUserInfosResponse(value) {
            value = value || {};
            this.users = (value.users || []).map(function (m) { return new exports.UserInfo(m); });
            this.nextPageToken = value.nextPageToken;
            ListUserInfosResponse.refineValues(this);
        }
        ListUserInfosResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListUserInfosResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListUserInfosResponse.fromBinary = function (bytes) {
            var instance = new ListUserInfosResponse();
            ListUserInfosResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListUserInfosResponse.refineValues = function (instance) {
            instance.users = instance.users || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListUserInfosResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.UserInfo();
                        reader.readMessage(messageInitializer1, exports.UserInfo.fromBinaryReader);
                        (instance.users = instance.users || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListUserInfosResponse.refineValues(instance);
        };
        ListUserInfosResponse.toBinaryWriter = function (instance, writer) {
            if (instance.users && instance.users.length) {
                writer.writeRepeatedMessage(1, instance.users, exports.UserInfo.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListUserInfosResponse.prototype, "users", {
            get: function () {
                return this._users;
            },
            set: function (value) {
                this._users = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListUserInfosResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListUserInfosResponse.prototype.toObject = function () {
            return {
                users: (this.users || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListUserInfosResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListUserInfosResponse;
    }());
    var ServerRole = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ServerRole value
         */
        function ServerRole(value) {
            value = value || {};
            this.roleId = value.roleId;
            this.name = value.name;
            this.permissions = (value.permissions || []).slice();
            ServerRole.refineValues(this);
        }
        ServerRole.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ServerRole.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ServerRole.fromBinary = function (bytes) {
            var instance = new ServerRole();
            ServerRole.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ServerRole.refineValues = function (instance) {
            instance.roleId = instance.roleId || 0;
            instance.name = instance.name || '';
            instance.permissions = instance.permissions || [];
        };
        ServerRole.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.roleId = reader.readUint32();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        (instance.permissions = instance.permissions || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            ServerRole.refineValues(instance);
        };
        ServerRole.toBinaryWriter = function (instance, writer) {
            if (instance.roleId) {
                writer.writeUint32(1, instance.roleId);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.permissions && instance.permissions.length) {
                writer.writeRepeatedString(3, instance.permissions);
            }
        };
        Object.defineProperty(ServerRole.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ServerRole.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ServerRole.prototype, "permissions", {
            get: function () {
                return this._permissions;
            },
            set: function (value) {
                this._permissions = value;
            },
            enumerable: false,
            configurable: true
        });
        ServerRole.prototype.toObject = function () {
            return {
                roleId: this.roleId,
                name: this.name,
                permissions: (this.permissions || []).slice()
            };
        };
        ServerRole.prototype.toJSON = function () {
            return this.toObject();
        };
        return ServerRole;
    }());
    var CreateServerRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateServerRoleRequest value
         */
        function CreateServerRoleRequest(value) {
            value = value || {};
            this.role = value.role ? new ServerRole(value.role) : undefined;
            CreateServerRoleRequest.refineValues(this);
        }
        CreateServerRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateServerRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateServerRoleRequest.fromBinary = function (bytes) {
            var instance = new CreateServerRoleRequest();
            CreateServerRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateServerRoleRequest.refineValues = function (instance) {
            instance.role = instance.role || undefined;
        };
        CreateServerRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.role = new ServerRole();
                        reader.readMessage(instance.role, ServerRole.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateServerRoleRequest.refineValues(instance);
        };
        CreateServerRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.role) {
                writer.writeMessage(1, instance.role, ServerRole.toBinaryWriter);
            }
        };
        Object.defineProperty(CreateServerRoleRequest.prototype, "role", {
            get: function () {
                return this._role;
            },
            set: function (value) {
                this._role = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateServerRoleRequest.prototype.toObject = function () {
            return {
                role: this.role ? this.role.toObject() : undefined
            };
        };
        CreateServerRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateServerRoleRequest;
    }());
    var UpdateServerRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateServerRoleRequest value
         */
        function UpdateServerRoleRequest(value) {
            value = value || {};
            this.role = value.role ? new ServerRole(value.role) : undefined;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            UpdateServerRoleRequest.refineValues(this);
        }
        UpdateServerRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateServerRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateServerRoleRequest.fromBinary = function (bytes) {
            var instance = new UpdateServerRoleRequest();
            UpdateServerRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateServerRoleRequest.refineValues = function (instance) {
            instance.role = instance.role || undefined;
            instance.updateMask = instance.updateMask || undefined;
        };
        UpdateServerRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.role = new ServerRole();
                        reader.readMessage(instance.role, ServerRole.fromBinaryReader);
                        break;
                    case 2:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateServerRoleRequest.refineValues(instance);
        };
        UpdateServerRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.role) {
                writer.writeMessage(1, instance.role, ServerRole.toBinaryWriter);
            }
            if (instance.updateMask) {
                writer.writeMessage(2, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(UpdateServerRoleRequest.prototype, "role", {
            get: function () {
                return this._role;
            },
            set: function (value) {
                this._role = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateServerRoleRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateServerRoleRequest.prototype.toObject = function () {
            return {
                role: this.role ? this.role.toObject() : undefined,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        UpdateServerRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateServerRoleRequest;
    }());
    var DeleteServerRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteServerRoleRequest value
         */
        function DeleteServerRoleRequest(value) {
            value = value || {};
            this.roleId = value.roleId;
            DeleteServerRoleRequest.refineValues(this);
        }
        DeleteServerRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteServerRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteServerRoleRequest.fromBinary = function (bytes) {
            var instance = new DeleteServerRoleRequest();
            DeleteServerRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteServerRoleRequest.refineValues = function (instance) {
            instance.roleId = instance.roleId || 0;
        };
        DeleteServerRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.roleId = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteServerRoleRequest.refineValues(instance);
        };
        DeleteServerRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.roleId) {
                writer.writeUint32(1, instance.roleId);
            }
        };
        Object.defineProperty(DeleteServerRoleRequest.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteServerRoleRequest.prototype.toObject = function () {
            return {
                roleId: this.roleId
            };
        };
        DeleteServerRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteServerRoleRequest;
    }());
    exports.GetServerRoleRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetServerRoleRequest value
         */
        function GetServerRoleRequest(value) {
            this._serverRoleIdentifier = GetServerRoleRequest.ServerRoleIdentifierCase.none;
            value = value || {};
            this.roleId = value.roleId;
            this.roleName = value.roleName;
            GetServerRoleRequest.refineValues(this);
        }
        GetServerRoleRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetServerRoleRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetServerRoleRequest.fromBinary = function (bytes) {
            var instance = new GetServerRoleRequest();
            GetServerRoleRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetServerRoleRequest.refineValues = function (instance) { };
        GetServerRoleRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.roleId = reader.readUint32();
                        break;
                    case 2:
                        instance.roleName = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetServerRoleRequest.refineValues(instance);
        };
        GetServerRoleRequest.toBinaryWriter = function (instance, writer) {
            if (instance.roleId || instance.roleId === 0) {
                writer.writeUint32(1, instance.roleId);
            }
            if (instance.roleName || instance.roleName === '') {
                writer.writeString(2, instance.roleName);
            }
        };
        Object.defineProperty(GetServerRoleRequest.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._roleName = undefined;
                    this._serverRoleIdentifier =
                        GetServerRoleRequest.ServerRoleIdentifierCase.roleId;
                }
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetServerRoleRequest.prototype, "roleName", {
            get: function () {
                return this._roleName;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._roleId = undefined;
                    this._serverRoleIdentifier =
                        GetServerRoleRequest.ServerRoleIdentifierCase.roleName;
                }
                this._roleName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetServerRoleRequest.prototype, "serverRoleIdentifier", {
            get: function () {
                return this._serverRoleIdentifier;
            },
            enumerable: false,
            configurable: true
        });
        GetServerRoleRequest.prototype.toObject = function () {
            return {
                roleId: this.roleId,
                roleName: this.roleName
            };
        };
        GetServerRoleRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetServerRoleRequest;
    }());
    (function (GetServerRoleRequest) {
        var ServerRoleIdentifierCase;
        (function (ServerRoleIdentifierCase) {
            ServerRoleIdentifierCase[ServerRoleIdentifierCase["none"] = 0] = "none";
            ServerRoleIdentifierCase[ServerRoleIdentifierCase["roleId"] = 1] = "roleId";
            ServerRoleIdentifierCase[ServerRoleIdentifierCase["roleName"] = 2] = "roleName";
        })(ServerRoleIdentifierCase = GetServerRoleRequest.ServerRoleIdentifierCase || (GetServerRoleRequest.ServerRoleIdentifierCase = {}));
    })(exports.GetServerRoleRequest || (exports.GetServerRoleRequest = {}));
    var ListServerRolesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListServerRolesRequest value
         */
        function ListServerRolesRequest(value) {
            value = value || {};
            this.pageToken = value.pageToken;
            ListServerRolesRequest.refineValues(this);
        }
        ListServerRolesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListServerRolesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListServerRolesRequest.fromBinary = function (bytes) {
            var instance = new ListServerRolesRequest();
            ListServerRolesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListServerRolesRequest.refineValues = function (instance) {
            instance.pageToken = instance.pageToken || '';
        };
        ListServerRolesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListServerRolesRequest.refineValues(instance);
        };
        ListServerRolesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.pageToken) {
                writer.writeString(1, instance.pageToken);
            }
        };
        Object.defineProperty(ListServerRolesRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListServerRolesRequest.prototype.toObject = function () {
            return {
                pageToken: this.pageToken
            };
        };
        ListServerRolesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListServerRolesRequest;
    }());
    var ListServerRolesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListServerRolesResponse value
         */
        function ListServerRolesResponse(value) {
            value = value || {};
            this.serverRoles = (value.serverRoles || []).map(function (m) { return new ServerRole(m); });
            this.nextPageToken = value.nextPageToken;
            ListServerRolesResponse.refineValues(this);
        }
        ListServerRolesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListServerRolesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListServerRolesResponse.fromBinary = function (bytes) {
            var instance = new ListServerRolesResponse();
            ListServerRolesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListServerRolesResponse.refineValues = function (instance) {
            instance.serverRoles = instance.serverRoles || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListServerRolesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new ServerRole();
                        reader.readMessage(messageInitializer1, ServerRole.fromBinaryReader);
                        (instance.serverRoles = instance.serverRoles || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListServerRolesResponse.refineValues(instance);
        };
        ListServerRolesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.serverRoles && instance.serverRoles.length) {
                writer.writeRepeatedMessage(1, instance.serverRoles, ServerRole.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListServerRolesResponse.prototype, "serverRoles", {
            get: function () {
                return this._serverRoles;
            },
            set: function (value) {
                this._serverRoles = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListServerRolesResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListServerRolesResponse.prototype.toObject = function () {
            return {
                serverRoles: (this.serverRoles || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListServerRolesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListServerRolesResponse;
    }());
    var ListServerPermissionsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListServerPermissionsRequest value
         */
        function ListServerPermissionsRequest(value) {
            value = value || {};
            this.pageToken = value.pageToken;
            ListServerPermissionsRequest.refineValues(this);
        }
        ListServerPermissionsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListServerPermissionsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListServerPermissionsRequest.fromBinary = function (bytes) {
            var instance = new ListServerPermissionsRequest();
            ListServerPermissionsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListServerPermissionsRequest.refineValues = function (instance) {
            instance.pageToken = instance.pageToken || '';
        };
        ListServerPermissionsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListServerPermissionsRequest.refineValues(instance);
        };
        ListServerPermissionsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.pageToken) {
                writer.writeString(1, instance.pageToken);
            }
        };
        Object.defineProperty(ListServerPermissionsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListServerPermissionsRequest.prototype.toObject = function () {
            return {
                pageToken: this.pageToken
            };
        };
        ListServerPermissionsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListServerPermissionsRequest;
    }());
    var ListServerPermissionsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListServerPermissionsResponse value
         */
        function ListServerPermissionsResponse(value) {
            value = value || {};
            this.permissions = (value.permissions || []).slice();
            this.nextPageToken = value.nextPageToken;
            ListServerPermissionsResponse.refineValues(this);
        }
        ListServerPermissionsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListServerPermissionsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListServerPermissionsResponse.fromBinary = function (bytes) {
            var instance = new ListServerPermissionsResponse();
            ListServerPermissionsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListServerPermissionsResponse.refineValues = function (instance) {
            instance.permissions = instance.permissions || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListServerPermissionsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.permissions = instance.permissions || []).push(reader.readString());
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListServerPermissionsResponse.refineValues(instance);
        };
        ListServerPermissionsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.permissions && instance.permissions.length) {
                writer.writeRepeatedString(1, instance.permissions);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListServerPermissionsResponse.prototype, "permissions", {
            get: function () {
                return this._permissions;
            },
            set: function (value) {
                this._permissions = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListServerPermissionsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListServerPermissionsResponse.prototype.toObject = function () {
            return {
                permissions: (this.permissions || []).slice(),
                nextPageToken: this.nextPageToken
            };
        };
        ListServerPermissionsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListServerPermissionsResponse;
    }());
    var LoginRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param LoginRequest value
         */
        function LoginRequest(value) {
            value = value || {};
            this.userEmail = value.userEmail;
            this.password = value.password;
            LoginRequest.refineValues(this);
        }
        LoginRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            LoginRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        LoginRequest.fromBinary = function (bytes) {
            var instance = new LoginRequest();
            LoginRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        LoginRequest.refineValues = function (instance) {
            instance.userEmail = instance.userEmail || '';
            instance.password = instance.password || '';
        };
        LoginRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.userEmail = reader.readString();
                        break;
                    case 2:
                        instance.password = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            LoginRequest.refineValues(instance);
        };
        LoginRequest.toBinaryWriter = function (instance, writer) {
            if (instance.userEmail) {
                writer.writeString(1, instance.userEmail);
            }
            if (instance.password) {
                writer.writeString(2, instance.password);
            }
        };
        Object.defineProperty(LoginRequest.prototype, "userEmail", {
            get: function () {
                return this._userEmail;
            },
            set: function (value) {
                this._userEmail = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoginRequest.prototype, "password", {
            get: function () {
                return this._password;
            },
            set: function (value) {
                this._password = value;
            },
            enumerable: false,
            configurable: true
        });
        LoginRequest.prototype.toObject = function () {
            return {
                userEmail: this.userEmail,
                password: this.password
            };
        };
        LoginRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return LoginRequest;
    }());
    var LoginResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param LoginResponse value
         */
        function LoginResponse(value) {
            value = value || {};
            this.user = value.user ? new User(value.user) : undefined;
            this.authToken = value.authToken;
            LoginResponse.refineValues(this);
        }
        LoginResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            LoginResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        LoginResponse.fromBinary = function (bytes) {
            var instance = new LoginResponse();
            LoginResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        LoginResponse.refineValues = function (instance) {
            instance.user = instance.user || undefined;
            instance.authToken = instance.authToken || '';
        };
        LoginResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.user = new User();
                        reader.readMessage(instance.user, User.fromBinaryReader);
                        break;
                    case 2:
                        instance.authToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            LoginResponse.refineValues(instance);
        };
        LoginResponse.toBinaryWriter = function (instance, writer) {
            if (instance.user) {
                writer.writeMessage(1, instance.user, User.toBinaryWriter);
            }
            if (instance.authToken) {
                writer.writeString(2, instance.authToken);
            }
        };
        Object.defineProperty(LoginResponse.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (value) {
                this._user = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoginResponse.prototype, "authToken", {
            get: function () {
                return this._authToken;
            },
            set: function (value) {
                this._authToken = value;
            },
            enumerable: false,
            configurable: true
        });
        LoginResponse.prototype.toObject = function () {
            return {
                user: this.user ? this.user.toObject() : undefined,
                authToken: this.authToken
            };
        };
        LoginResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return LoginResponse;
    }());

    exports.AgentView = void 0;
    (function (AgentView) {
        AgentView[AgentView["agentViewUnspecified"] = 0] = "agentViewUnspecified";
        AgentView[AgentView["agentViewFull"] = 1] = "agentViewFull";
        AgentView[AgentView["agentViewShallow"] = 2] = "agentViewShallow";
    })(exports.AgentView || (exports.AgentView = {}));
    exports.ReportType = void 0;
    (function (ReportType) {
        ReportType[ReportType["all"] = 0] = "all";
        ReportType[ReportType["intentPerLanguage"] = 1] = "intentPerLanguage";
        ReportType[ReportType["entityPerLanguage"] = 2] = "entityPerLanguage";
        ReportType[ReportType["entityCollision"] = 3] = "entityCollision";
        ReportType[ReportType["intentGeneral"] = 4] = "intentGeneral";
    })(exports.ReportType || (exports.ReportType = {}));
    exports.ReportFormat = void 0;
    (function (ReportFormat) {
        ReportFormat[ReportFormat["csv"] = 0] = "csv";
        ReportFormat[ReportFormat["html"] = 1] = "html";
        ReportFormat[ReportFormat["json"] = 2] = "json";
    })(exports.ReportFormat || (exports.ReportFormat = {}));
    exports.AgentStatus = void 0;
    (function (AgentStatus) {
        AgentStatus[AgentStatus["active"] = 0] = "active";
        AgentStatus[AgentStatus["inactive"] = 1] = "inactive";
    })(exports.AgentStatus || (exports.AgentStatus = {}));
    var Agent = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Agent value
         */
        function Agent(value) {
            value = value || {};
            this.parent = value.parent;
            this.displayName = value.displayName;
            this.defaultLanguageCode = value.defaultLanguageCode;
            this.supportedLanguageCodes = (value.supportedLanguageCodes || []).slice();
            this.timeZone = value.timeZone;
            this.nluPlatform = value.nluPlatform;
            this.configs = value.configs
                ? new exports.Struct(value.configs)
                : undefined;
            this.ownerId = value.ownerId;
            this.status = value.status;
            this.description = value.description;
            Agent.refineValues(this);
        }
        Agent.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Agent.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Agent.fromBinary = function (bytes) {
            var instance = new Agent();
            Agent.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Agent.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.displayName = instance.displayName || '';
            instance.defaultLanguageCode = instance.defaultLanguageCode || '';
            instance.supportedLanguageCodes = instance.supportedLanguageCodes || [];
            instance.timeZone = instance.timeZone || '';
            instance.nluPlatform = instance.nluPlatform || '';
            instance.configs = instance.configs || undefined;
            instance.ownerId = instance.ownerId || '';
            instance.status = instance.status || 0;
            instance.description = instance.description || '';
        };
        Agent.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.displayName = reader.readString();
                        break;
                    case 3:
                        instance.defaultLanguageCode = reader.readString();
                        break;
                    case 4:
                        (instance.supportedLanguageCodes =
                            instance.supportedLanguageCodes || []).push(reader.readString());
                        break;
                    case 5:
                        instance.timeZone = reader.readString();
                        break;
                    case 6:
                        instance.nluPlatform = reader.readString();
                        break;
                    case 7:
                        instance.configs = new exports.Struct();
                        reader.readMessage(instance.configs, exports.Struct.fromBinaryReader);
                        break;
                    case 8:
                        instance.ownerId = reader.readString();
                        break;
                    case 9:
                        instance.status = reader.readEnum();
                        break;
                    case 10:
                        instance.description = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Agent.refineValues(instance);
        };
        Agent.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.displayName) {
                writer.writeString(2, instance.displayName);
            }
            if (instance.defaultLanguageCode) {
                writer.writeString(3, instance.defaultLanguageCode);
            }
            if (instance.supportedLanguageCodes &&
                instance.supportedLanguageCodes.length) {
                writer.writeRepeatedString(4, instance.supportedLanguageCodes);
            }
            if (instance.timeZone) {
                writer.writeString(5, instance.timeZone);
            }
            if (instance.nluPlatform) {
                writer.writeString(6, instance.nluPlatform);
            }
            if (instance.configs) {
                writer.writeMessage(7, instance.configs, exports.Struct.toBinaryWriter);
            }
            if (instance.ownerId) {
                writer.writeString(8, instance.ownerId);
            }
            if (instance.status) {
                writer.writeEnum(9, instance.status);
            }
            if (instance.description) {
                writer.writeString(10, instance.description);
            }
        };
        Object.defineProperty(Agent.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "displayName", {
            get: function () {
                return this._displayName;
            },
            set: function (value) {
                this._displayName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "defaultLanguageCode", {
            get: function () {
                return this._defaultLanguageCode;
            },
            set: function (value) {
                this._defaultLanguageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "supportedLanguageCodes", {
            get: function () {
                return this._supportedLanguageCodes;
            },
            set: function (value) {
                this._supportedLanguageCodes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "timeZone", {
            get: function () {
                return this._timeZone;
            },
            set: function (value) {
                this._timeZone = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "nluPlatform", {
            get: function () {
                return this._nluPlatform;
            },
            set: function (value) {
                this._nluPlatform = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "configs", {
            get: function () {
                return this._configs;
            },
            set: function (value) {
                this._configs = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "ownerId", {
            get: function () {
                return this._ownerId;
            },
            set: function (value) {
                this._ownerId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "status", {
            get: function () {
                return this._status;
            },
            set: function (value) {
                this._status = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Agent.prototype, "description", {
            get: function () {
                return this._description;
            },
            set: function (value) {
                this._description = value;
            },
            enumerable: false,
            configurable: true
        });
        Agent.prototype.toObject = function () {
            return {
                parent: this.parent,
                displayName: this.displayName,
                defaultLanguageCode: this.defaultLanguageCode,
                supportedLanguageCodes: (this.supportedLanguageCodes || []).slice(),
                timeZone: this.timeZone,
                nluPlatform: this.nluPlatform,
                configs: this.configs ? this.configs.toObject() : undefined,
                ownerId: this.ownerId,
                status: this.status,
                description: this.description
            };
        };
        Agent.prototype.toJSON = function () {
            return this.toObject();
        };
        return Agent;
    }());
    var AgentWithOwner = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AgentWithOwner value
         */
        function AgentWithOwner(value) {
            value = value || {};
            this.agent = value.agent ? new Agent(value.agent) : undefined;
            this.owner = value.owner ? new User(value.owner) : undefined;
            AgentWithOwner.refineValues(this);
        }
        AgentWithOwner.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AgentWithOwner.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AgentWithOwner.fromBinary = function (bytes) {
            var instance = new AgentWithOwner();
            AgentWithOwner.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AgentWithOwner.refineValues = function (instance) {
            instance.agent = instance.agent || undefined;
            instance.owner = instance.owner || undefined;
        };
        AgentWithOwner.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agent = new Agent();
                        reader.readMessage(instance.agent, Agent.fromBinaryReader);
                        break;
                    case 2:
                        instance.owner = new User();
                        reader.readMessage(instance.owner, User.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            AgentWithOwner.refineValues(instance);
        };
        AgentWithOwner.toBinaryWriter = function (instance, writer) {
            if (instance.agent) {
                writer.writeMessage(1, instance.agent, Agent.toBinaryWriter);
            }
            if (instance.owner) {
                writer.writeMessage(2, instance.owner, User.toBinaryWriter);
            }
        };
        Object.defineProperty(AgentWithOwner.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            set: function (value) {
                this._agent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AgentWithOwner.prototype, "owner", {
            get: function () {
                return this._owner;
            },
            set: function (value) {
                this._owner = value;
            },
            enumerable: false,
            configurable: true
        });
        AgentWithOwner.prototype.toObject = function () {
            return {
                agent: this.agent ? this.agent.toObject() : undefined,
                owner: this.owner ? this.owner.toObject() : undefined
            };
        };
        AgentWithOwner.prototype.toJSON = function () {
            return this.toObject();
        };
        return AgentWithOwner;
    }());
    var AgentOfUserWithOwner = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AgentOfUserWithOwner value
         */
        function AgentOfUserWithOwner(value) {
            value = value || {};
            this.agentWithOwner = value.agentWithOwner
                ? new AgentWithOwner(value.agentWithOwner)
                : undefined;
            this.projectRole = value.projectRole
                ? new ProjectRole(value.projectRole)
                : undefined;
            AgentOfUserWithOwner.refineValues(this);
        }
        AgentOfUserWithOwner.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AgentOfUserWithOwner.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AgentOfUserWithOwner.fromBinary = function (bytes) {
            var instance = new AgentOfUserWithOwner();
            AgentOfUserWithOwner.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AgentOfUserWithOwner.refineValues = function (instance) {
            instance.agentWithOwner = instance.agentWithOwner || undefined;
            instance.projectRole = instance.projectRole || undefined;
        };
        AgentOfUserWithOwner.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agentWithOwner = new AgentWithOwner();
                        reader.readMessage(instance.agentWithOwner, AgentWithOwner.fromBinaryReader);
                        break;
                    case 2:
                        instance.projectRole = new ProjectRole();
                        reader.readMessage(instance.projectRole, ProjectRole.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            AgentOfUserWithOwner.refineValues(instance);
        };
        AgentOfUserWithOwner.toBinaryWriter = function (instance, writer) {
            if (instance.agentWithOwner) {
                writer.writeMessage(1, instance.agentWithOwner, AgentWithOwner.toBinaryWriter);
            }
            if (instance.projectRole) {
                writer.writeMessage(2, instance.projectRole, ProjectRole.toBinaryWriter);
            }
        };
        Object.defineProperty(AgentOfUserWithOwner.prototype, "agentWithOwner", {
            get: function () {
                return this._agentWithOwner;
            },
            set: function (value) {
                this._agentWithOwner = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AgentOfUserWithOwner.prototype, "projectRole", {
            get: function () {
                return this._projectRole;
            },
            set: function (value) {
                this._projectRole = value;
            },
            enumerable: false,
            configurable: true
        });
        AgentOfUserWithOwner.prototype.toObject = function () {
            return {
                agentWithOwner: this.agentWithOwner
                    ? this.agentWithOwner.toObject()
                    : undefined,
                projectRole: this.projectRole ? this.projectRole.toObject() : undefined
            };
        };
        AgentOfUserWithOwner.prototype.toJSON = function () {
            return this.toObject();
        };
        return AgentOfUserWithOwner;
    }());
    var CreateAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CreateAgentRequest value
         */
        function CreateAgentRequest(value) {
            value = value || {};
            this.agent = value.agent ? new Agent(value.agent) : undefined;
            this.agentView = value.agentView;
            CreateAgentRequest.refineValues(this);
        }
        CreateAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CreateAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CreateAgentRequest.fromBinary = function (bytes) {
            var instance = new CreateAgentRequest();
            CreateAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CreateAgentRequest.refineValues = function (instance) {
            instance.agent = instance.agent || undefined;
            instance.agentView = instance.agentView || 0;
        };
        CreateAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agent = new Agent();
                        reader.readMessage(instance.agent, Agent.fromBinaryReader);
                        break;
                    case 2:
                        instance.agentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CreateAgentRequest.refineValues(instance);
        };
        CreateAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.agent) {
                writer.writeMessage(1, instance.agent, Agent.toBinaryWriter);
            }
            if (instance.agentView) {
                writer.writeEnum(2, instance.agentView);
            }
        };
        Object.defineProperty(CreateAgentRequest.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            set: function (value) {
                this._agent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CreateAgentRequest.prototype, "agentView", {
            get: function () {
                return this._agentView;
            },
            set: function (value) {
                this._agentView = value;
            },
            enumerable: false,
            configurable: true
        });
        CreateAgentRequest.prototype.toObject = function () {
            return {
                agent: this.agent ? this.agent.toObject() : undefined,
                agentView: this.agentView
            };
        };
        CreateAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CreateAgentRequest;
    }());
    var UpdateAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UpdateAgentRequest value
         */
        function UpdateAgentRequest(value) {
            value = value || {};
            this.agent = value.agent ? new Agent(value.agent) : undefined;
            this.agentView = value.agentView;
            this.updateMask = value.updateMask
                ? new FieldMask(value.updateMask)
                : undefined;
            UpdateAgentRequest.refineValues(this);
        }
        UpdateAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UpdateAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UpdateAgentRequest.fromBinary = function (bytes) {
            var instance = new UpdateAgentRequest();
            UpdateAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UpdateAgentRequest.refineValues = function (instance) {
            instance.agent = instance.agent || undefined;
            instance.agentView = instance.agentView || 0;
            instance.updateMask = instance.updateMask || undefined;
        };
        UpdateAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agent = new Agent();
                        reader.readMessage(instance.agent, Agent.fromBinaryReader);
                        break;
                    case 2:
                        instance.agentView = reader.readEnum();
                        break;
                    case 3:
                        instance.updateMask = new FieldMask();
                        reader.readMessage(instance.updateMask, FieldMask.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            UpdateAgentRequest.refineValues(instance);
        };
        UpdateAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.agent) {
                writer.writeMessage(1, instance.agent, Agent.toBinaryWriter);
            }
            if (instance.agentView) {
                writer.writeEnum(2, instance.agentView);
            }
            if (instance.updateMask) {
                writer.writeMessage(3, instance.updateMask, FieldMask.toBinaryWriter);
            }
        };
        Object.defineProperty(UpdateAgentRequest.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            set: function (value) {
                this._agent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateAgentRequest.prototype, "agentView", {
            get: function () {
                return this._agentView;
            },
            set: function (value) {
                this._agentView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UpdateAgentRequest.prototype, "updateMask", {
            get: function () {
                return this._updateMask;
            },
            set: function (value) {
                this._updateMask = value;
            },
            enumerable: false,
            configurable: true
        });
        UpdateAgentRequest.prototype.toObject = function () {
            return {
                agent: this.agent ? this.agent.toObject() : undefined,
                agentView: this.agentView,
                updateMask: this.updateMask ? this.updateMask.toObject() : undefined
            };
        };
        UpdateAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return UpdateAgentRequest;
    }());
    var DeleteAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteAgentRequest value
         */
        function DeleteAgentRequest(value) {
            value = value || {};
            this.parent = value.parent;
            DeleteAgentRequest.refineValues(this);
        }
        DeleteAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteAgentRequest.fromBinary = function (bytes) {
            var instance = new DeleteAgentRequest();
            DeleteAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        DeleteAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteAgentRequest.refineValues(instance);
        };
        DeleteAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
        };
        Object.defineProperty(DeleteAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent
            };
        };
        DeleteAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteAgentRequest;
    }());
    var GetAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAgentRequest value
         */
        function GetAgentRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.agentView = value.agentView;
            GetAgentRequest.refineValues(this);
        }
        GetAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAgentRequest.fromBinary = function (bytes) {
            var instance = new GetAgentRequest();
            GetAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.agentView = instance.agentView || 0;
        };
        GetAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.agentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAgentRequest.refineValues(instance);
        };
        GetAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.agentView) {
                writer.writeEnum(2, instance.agentView);
            }
        };
        Object.defineProperty(GetAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentRequest.prototype, "agentView", {
            get: function () {
                return this._agentView;
            },
            set: function (value) {
                this._agentView = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                agentView: this.agentView
            };
        };
        GetAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAgentRequest;
    }());
    var ListAgentsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListAgentsRequest value
         */
        function ListAgentsRequest(value) {
            value = value || {};
            this.agentView = value.agentView;
            this.pageToken = value.pageToken;
            this.sortByField = value.sortByField
                ? new exports.AgentSorting(value.sortByField)
                : undefined;
            ListAgentsRequest.refineValues(this);
        }
        ListAgentsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListAgentsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListAgentsRequest.fromBinary = function (bytes) {
            var instance = new ListAgentsRequest();
            ListAgentsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListAgentsRequest.refineValues = function (instance) {
            instance.agentView = instance.agentView || 0;
            instance.pageToken = instance.pageToken || '';
            instance.sortByField = instance.sortByField || undefined;
        };
        ListAgentsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agentView = reader.readEnum();
                        break;
                    case 2:
                        instance.pageToken = reader.readString();
                        break;
                    case 3:
                        instance.sortByField = new exports.AgentSorting();
                        reader.readMessage(instance.sortByField, exports.AgentSorting.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListAgentsRequest.refineValues(instance);
        };
        ListAgentsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.agentView) {
                writer.writeEnum(1, instance.agentView);
            }
            if (instance.pageToken) {
                writer.writeString(2, instance.pageToken);
            }
            if (instance.sortByField) {
                writer.writeMessage(3, instance.sortByField, exports.AgentSorting.toBinaryWriter);
            }
        };
        Object.defineProperty(ListAgentsRequest.prototype, "agentView", {
            get: function () {
                return this._agentView;
            },
            set: function (value) {
                this._agentView = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListAgentsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListAgentsRequest.prototype, "sortByField", {
            get: function () {
                return this._sortByField;
            },
            set: function (value) {
                this._sortByField = value;
            },
            enumerable: false,
            configurable: true
        });
        ListAgentsRequest.prototype.toObject = function () {
            return {
                agentView: this.agentView,
                pageToken: this.pageToken,
                sortByField: this.sortByField ? this.sortByField.toObject() : undefined
            };
        };
        ListAgentsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListAgentsRequest;
    }());
    var ListAgentsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListAgentsResponse value
         */
        function ListAgentsResponse(value) {
            value = value || {};
            this.agentsWithOwners = (value.agentsWithOwners || []).map(function (m) { return new AgentWithOwner(m); });
            this.nextPageToken = value.nextPageToken;
            ListAgentsResponse.refineValues(this);
        }
        ListAgentsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListAgentsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListAgentsResponse.fromBinary = function (bytes) {
            var instance = new ListAgentsResponse();
            ListAgentsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListAgentsResponse.refineValues = function (instance) {
            instance.agentsWithOwners = instance.agentsWithOwners || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListAgentsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new AgentWithOwner();
                        reader.readMessage(messageInitializer1, AgentWithOwner.fromBinaryReader);
                        (instance.agentsWithOwners = instance.agentsWithOwners || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListAgentsResponse.refineValues(instance);
        };
        ListAgentsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.agentsWithOwners && instance.agentsWithOwners.length) {
                writer.writeRepeatedMessage(1, instance.agentsWithOwners, AgentWithOwner.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListAgentsResponse.prototype, "agentsWithOwners", {
            get: function () {
                return this._agentsWithOwners;
            },
            set: function (value) {
                this._agentsWithOwners = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListAgentsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListAgentsResponse.prototype.toObject = function () {
            return {
                agentsWithOwners: (this.agentsWithOwners || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListAgentsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListAgentsResponse;
    }());
    var ListAgentsOfUserResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListAgentsOfUserResponse value
         */
        function ListAgentsOfUserResponse(value) {
            value = value || {};
            this.agentsOfUserWithOwners = (value.agentsOfUserWithOwners || []).map(function (m) { return new AgentOfUserWithOwner(m); });
            this.nextPageToken = value.nextPageToken;
            ListAgentsOfUserResponse.refineValues(this);
        }
        ListAgentsOfUserResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListAgentsOfUserResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListAgentsOfUserResponse.fromBinary = function (bytes) {
            var instance = new ListAgentsOfUserResponse();
            ListAgentsOfUserResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListAgentsOfUserResponse.refineValues = function (instance) {
            instance.agentsOfUserWithOwners = instance.agentsOfUserWithOwners || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListAgentsOfUserResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new AgentOfUserWithOwner();
                        reader.readMessage(messageInitializer1, AgentOfUserWithOwner.fromBinaryReader);
                        (instance.agentsOfUserWithOwners =
                            instance.agentsOfUserWithOwners || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListAgentsOfUserResponse.refineValues(instance);
        };
        ListAgentsOfUserResponse.toBinaryWriter = function (instance, writer) {
            if (instance.agentsOfUserWithOwners &&
                instance.agentsOfUserWithOwners.length) {
                writer.writeRepeatedMessage(1, instance.agentsOfUserWithOwners, AgentOfUserWithOwner.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListAgentsOfUserResponse.prototype, "agentsOfUserWithOwners", {
            get: function () {
                return this._agentsOfUserWithOwners;
            },
            set: function (value) {
                this._agentsOfUserWithOwners = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListAgentsOfUserResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListAgentsOfUserResponse.prototype.toObject = function () {
            return {
                agentsOfUserWithOwners: (this.agentsOfUserWithOwners || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListAgentsOfUserResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListAgentsOfUserResponse;
    }());
    var TrainAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param TrainAgentRequest value
         */
        function TrainAgentRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.branch = value.branch;
            TrainAgentRequest.refineValues(this);
        }
        TrainAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            TrainAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        TrainAgentRequest.fromBinary = function (bytes) {
            var instance = new TrainAgentRequest();
            TrainAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        TrainAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.branch = instance.branch || '';
        };
        TrainAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.branch = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            TrainAgentRequest.refineValues(instance);
        };
        TrainAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.branch) {
                writer.writeString(2, instance.branch);
            }
        };
        Object.defineProperty(TrainAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TrainAgentRequest.prototype, "branch", {
            get: function () {
                return this._branch;
            },
            set: function (value) {
                this._branch = value;
            },
            enumerable: false,
            configurable: true
        });
        TrainAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                branch: this.branch
            };
        };
        TrainAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return TrainAgentRequest;
    }());
    var BuildCacheRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BuildCacheRequest value
         */
        function BuildCacheRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.branch = value.branch;
            BuildCacheRequest.refineValues(this);
        }
        BuildCacheRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BuildCacheRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BuildCacheRequest.fromBinary = function (bytes) {
            var instance = new BuildCacheRequest();
            BuildCacheRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BuildCacheRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.branch = instance.branch || '';
        };
        BuildCacheRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.branch = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            BuildCacheRequest.refineValues(instance);
        };
        BuildCacheRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.branch) {
                writer.writeString(2, instance.branch);
            }
        };
        Object.defineProperty(BuildCacheRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BuildCacheRequest.prototype, "branch", {
            get: function () {
                return this._branch;
            },
            set: function (value) {
                this._branch = value;
            },
            enumerable: false,
            configurable: true
        });
        BuildCacheRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                branch: this.branch
            };
        };
        BuildCacheRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return BuildCacheRequest;
    }());
    var ExportAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExportAgentRequest value
         */
        function ExportAgentRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.agentUri = value.agentUri;
            ExportAgentRequest.refineValues(this);
        }
        ExportAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExportAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExportAgentRequest.fromBinary = function (bytes) {
            var instance = new ExportAgentRequest();
            ExportAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExportAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.agentUri = instance.agentUri || '';
        };
        ExportAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.agentUri = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExportAgentRequest.refineValues(instance);
        };
        ExportAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.agentUri) {
                writer.writeString(2, instance.agentUri);
            }
        };
        Object.defineProperty(ExportAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportAgentRequest.prototype, "agentUri", {
            get: function () {
                return this._agentUri;
            },
            set: function (value) {
                this._agentUri = value;
            },
            enumerable: false,
            configurable: true
        });
        ExportAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                agentUri: this.agentUri
            };
        };
        ExportAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExportAgentRequest;
    }());
    exports.ExportAgentResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExportAgentResponse value
         */
        function ExportAgentResponse(value) {
            this._agent = ExportAgentResponse.AgentCase.none;
            value = value || {};
            this.agentUri = value.agentUri;
            this.agentContent = value.agentContent;
            ExportAgentResponse.refineValues(this);
        }
        ExportAgentResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExportAgentResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExportAgentResponse.fromBinary = function (bytes) {
            var instance = new ExportAgentResponse();
            ExportAgentResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExportAgentResponse.refineValues = function (instance) { };
        ExportAgentResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.agentUri = reader.readString();
                        break;
                    case 2:
                        instance.agentContent = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExportAgentResponse.refineValues(instance);
        };
        ExportAgentResponse.toBinaryWriter = function (instance, writer) {
            if (instance.agentUri || instance.agentUri === '') {
                writer.writeString(1, instance.agentUri);
            }
            if (instance.agentContent && instance.agentContent.length) {
                writer.writeBytes(2, instance.agentContent);
            }
        };
        Object.defineProperty(ExportAgentResponse.prototype, "agentUri", {
            get: function () {
                return this._agentUri;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentContent = undefined;
                    this._agent = ExportAgentResponse.AgentCase.agentUri;
                }
                this._agentUri = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportAgentResponse.prototype, "agentContent", {
            get: function () {
                return this._agentContent;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentUri = undefined;
                    this._agent = ExportAgentResponse.AgentCase.agentContent;
                }
                this._agentContent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportAgentResponse.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            enumerable: false,
            configurable: true
        });
        ExportAgentResponse.prototype.toObject = function () {
            return {
                agentUri: this.agentUri,
                agentContent: this.agentContent
                    ? this.agentContent.subarray(0)
                    : new Uint8Array()
            };
        };
        ExportAgentResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExportAgentResponse;
    }());
    (function (ExportAgentResponse) {
        var AgentCase;
        (function (AgentCase) {
            AgentCase[AgentCase["none"] = 0] = "none";
            AgentCase[AgentCase["agentUri"] = 1] = "agentUri";
            AgentCase[AgentCase["agentContent"] = 2] = "agentContent";
        })(AgentCase = ExportAgentResponse.AgentCase || (ExportAgentResponse.AgentCase = {}));
    })(exports.ExportAgentResponse || (exports.ExportAgentResponse = {}));
    var OptimizeRankingMatchRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OptimizeRankingMatchRequest value
         */
        function OptimizeRankingMatchRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.languageCodes = (value.languageCodes || []).slice();
            this.optimizationConfigs = (value.optimizationConfigs || []).map(function (m) { return new RankingMatchOptimizationConfig(m); });
            this.inPlace = value.inPlace;
            OptimizeRankingMatchRequest.refineValues(this);
        }
        OptimizeRankingMatchRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OptimizeRankingMatchRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OptimizeRankingMatchRequest.fromBinary = function (bytes) {
            var instance = new OptimizeRankingMatchRequest();
            OptimizeRankingMatchRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OptimizeRankingMatchRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.languageCodes = instance.languageCodes || [];
            instance.optimizationConfigs = instance.optimizationConfigs || [];
            instance.inPlace = instance.inPlace || false;
        };
        OptimizeRankingMatchRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        (instance.languageCodes = instance.languageCodes || []).push(reader.readString());
                        break;
                    case 3:
                        var messageInitializer3 = new RankingMatchOptimizationConfig();
                        reader.readMessage(messageInitializer3, RankingMatchOptimizationConfig.fromBinaryReader);
                        (instance.optimizationConfigs =
                            instance.optimizationConfigs || []).push(messageInitializer3);
                        break;
                    case 4:
                        instance.inPlace = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            OptimizeRankingMatchRequest.refineValues(instance);
        };
        OptimizeRankingMatchRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.languageCodes && instance.languageCodes.length) {
                writer.writeRepeatedString(2, instance.languageCodes);
            }
            if (instance.optimizationConfigs && instance.optimizationConfigs.length) {
                writer.writeRepeatedMessage(3, instance.optimizationConfigs, RankingMatchOptimizationConfig.toBinaryWriter);
            }
            if (instance.inPlace) {
                writer.writeBool(4, instance.inPlace);
            }
        };
        Object.defineProperty(OptimizeRankingMatchRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OptimizeRankingMatchRequest.prototype, "languageCodes", {
            get: function () {
                return this._languageCodes;
            },
            set: function (value) {
                this._languageCodes = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OptimizeRankingMatchRequest.prototype, "optimizationConfigs", {
            get: function () {
                return this._optimizationConfigs;
            },
            set: function (value) {
                this._optimizationConfigs = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OptimizeRankingMatchRequest.prototype, "inPlace", {
            get: function () {
                return this._inPlace;
            },
            set: function (value) {
                this._inPlace = value;
            },
            enumerable: false,
            configurable: true
        });
        OptimizeRankingMatchRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                languageCodes: (this.languageCodes || []).slice(),
                optimizationConfigs: (this.optimizationConfigs || []).map(function (m) { return m.toObject(); }),
                inPlace: this.inPlace
            };
        };
        OptimizeRankingMatchRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return OptimizeRankingMatchRequest;
    }());
    var RankingMatchOptimizationConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RankingMatchOptimizationConfig value
         */
        function RankingMatchOptimizationConfig(value) {
            value = value || {};
            this.languageCode = value.languageCode;
            this.nSplits = value.nSplits;
            this.randomSeed = value.randomSeed;
            this.initialThresholds = value.initialThresholds
                ? new exports.Struct(value.initialThresholds)
                : undefined;
            RankingMatchOptimizationConfig.refineValues(this);
        }
        RankingMatchOptimizationConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RankingMatchOptimizationConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RankingMatchOptimizationConfig.fromBinary = function (bytes) {
            var instance = new RankingMatchOptimizationConfig();
            RankingMatchOptimizationConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RankingMatchOptimizationConfig.refineValues = function (instance) {
            instance.languageCode = instance.languageCode || '';
            instance.nSplits = instance.nSplits || 0;
            instance.randomSeed = instance.randomSeed || 0;
            instance.initialThresholds = instance.initialThresholds || undefined;
        };
        RankingMatchOptimizationConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.languageCode = reader.readString();
                        break;
                    case 2:
                        instance.nSplits = reader.readInt32();
                        break;
                    case 3:
                        instance.randomSeed = reader.readInt32();
                        break;
                    case 4:
                        instance.initialThresholds = new exports.Struct();
                        reader.readMessage(instance.initialThresholds, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            RankingMatchOptimizationConfig.refineValues(instance);
        };
        RankingMatchOptimizationConfig.toBinaryWriter = function (instance, writer) {
            if (instance.languageCode) {
                writer.writeString(1, instance.languageCode);
            }
            if (instance.nSplits) {
                writer.writeInt32(2, instance.nSplits);
            }
            if (instance.randomSeed) {
                writer.writeInt32(3, instance.randomSeed);
            }
            if (instance.initialThresholds) {
                writer.writeMessage(4, instance.initialThresholds, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(RankingMatchOptimizationConfig.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RankingMatchOptimizationConfig.prototype, "nSplits", {
            get: function () {
                return this._nSplits;
            },
            set: function (value) {
                this._nSplits = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RankingMatchOptimizationConfig.prototype, "randomSeed", {
            get: function () {
                return this._randomSeed;
            },
            set: function (value) {
                this._randomSeed = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RankingMatchOptimizationConfig.prototype, "initialThresholds", {
            get: function () {
                return this._initialThresholds;
            },
            set: function (value) {
                this._initialThresholds = value;
            },
            enumerable: false,
            configurable: true
        });
        RankingMatchOptimizationConfig.prototype.toObject = function () {
            return {
                languageCode: this.languageCode,
                nSplits: this.nSplits,
                randomSeed: this.randomSeed,
                initialThresholds: this.initialThresholds
                    ? this.initialThresholds.toObject()
                    : undefined
            };
        };
        RankingMatchOptimizationConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return RankingMatchOptimizationConfig;
    }());
    var OptimizeRankingMatchResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OptimizeRankingMatchResponse value
         */
        function OptimizeRankingMatchResponse(value) {
            value = value || {};
            this.optimizationInfo = value.optimizationInfo
                ? new exports.Struct(value.optimizationInfo)
                : undefined;
            this.optimizedOndewoConfig = value.optimizedOndewoConfig
                ? new exports.Struct(value.optimizedOndewoConfig)
                : undefined;
            OptimizeRankingMatchResponse.refineValues(this);
        }
        OptimizeRankingMatchResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OptimizeRankingMatchResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OptimizeRankingMatchResponse.fromBinary = function (bytes) {
            var instance = new OptimizeRankingMatchResponse();
            OptimizeRankingMatchResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OptimizeRankingMatchResponse.refineValues = function (instance) {
            instance.optimizationInfo = instance.optimizationInfo || undefined;
            instance.optimizedOndewoConfig =
                instance.optimizedOndewoConfig || undefined;
        };
        OptimizeRankingMatchResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.optimizationInfo = new exports.Struct();
                        reader.readMessage(instance.optimizationInfo, exports.Struct.fromBinaryReader);
                        break;
                    case 3:
                        instance.optimizedOndewoConfig = new exports.Struct();
                        reader.readMessage(instance.optimizedOndewoConfig, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            OptimizeRankingMatchResponse.refineValues(instance);
        };
        OptimizeRankingMatchResponse.toBinaryWriter = function (instance, writer) {
            if (instance.optimizationInfo) {
                writer.writeMessage(1, instance.optimizationInfo, exports.Struct.toBinaryWriter);
            }
            if (instance.optimizedOndewoConfig) {
                writer.writeMessage(3, instance.optimizedOndewoConfig, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(OptimizeRankingMatchResponse.prototype, "optimizationInfo", {
            get: function () {
                return this._optimizationInfo;
            },
            set: function (value) {
                this._optimizationInfo = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OptimizeRankingMatchResponse.prototype, "optimizedOndewoConfig", {
            get: function () {
                return this._optimizedOndewoConfig;
            },
            set: function (value) {
                this._optimizedOndewoConfig = value;
            },
            enumerable: false,
            configurable: true
        });
        OptimizeRankingMatchResponse.prototype.toObject = function () {
            return {
                optimizationInfo: this.optimizationInfo
                    ? this.optimizationInfo.toObject()
                    : undefined,
                optimizedOndewoConfig: this.optimizedOndewoConfig
                    ? this.optimizedOndewoConfig.toObject()
                    : undefined
            };
        };
        OptimizeRankingMatchResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return OptimizeRankingMatchResponse;
    }());
    exports.ImportAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ImportAgentRequest value
         */
        function ImportAgentRequest(value) {
            this._agent = ImportAgentRequest.AgentCase.none;
            value = value || {};
            this.parent = value.parent;
            this.agentUri = value.agentUri;
            this.agentContent = value.agentContent;
            ImportAgentRequest.refineValues(this);
        }
        ImportAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ImportAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ImportAgentRequest.fromBinary = function (bytes) {
            var instance = new ImportAgentRequest();
            ImportAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ImportAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        ImportAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.agentUri = reader.readString();
                        break;
                    case 3:
                        instance.agentContent = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ImportAgentRequest.refineValues(instance);
        };
        ImportAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.agentUri || instance.agentUri === '') {
                writer.writeString(2, instance.agentUri);
            }
            if (instance.agentContent && instance.agentContent.length) {
                writer.writeBytes(3, instance.agentContent);
            }
        };
        Object.defineProperty(ImportAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImportAgentRequest.prototype, "agentUri", {
            get: function () {
                return this._agentUri;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentContent = undefined;
                    this._agent = ImportAgentRequest.AgentCase.agentUri;
                }
                this._agentUri = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImportAgentRequest.prototype, "agentContent", {
            get: function () {
                return this._agentContent;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentUri = undefined;
                    this._agent = ImportAgentRequest.AgentCase.agentContent;
                }
                this._agentContent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ImportAgentRequest.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            enumerable: false,
            configurable: true
        });
        ImportAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                agentUri: this.agentUri,
                agentContent: this.agentContent
                    ? this.agentContent.subarray(0)
                    : new Uint8Array()
            };
        };
        ImportAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ImportAgentRequest;
    }());
    (function (ImportAgentRequest) {
        var AgentCase;
        (function (AgentCase) {
            AgentCase[AgentCase["none"] = 0] = "none";
            AgentCase[AgentCase["agentUri"] = 1] = "agentUri";
            AgentCase[AgentCase["agentContent"] = 2] = "agentContent";
        })(AgentCase = ImportAgentRequest.AgentCase || (ImportAgentRequest.AgentCase = {}));
    })(exports.ImportAgentRequest || (exports.ImportAgentRequest = {}));
    exports.RestoreAgentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RestoreAgentRequest value
         */
        function RestoreAgentRequest(value) {
            this._agent = RestoreAgentRequest.AgentCase.none;
            value = value || {};
            this.parent = value.parent;
            this.agentUri = value.agentUri;
            this.agentContent = value.agentContent;
            RestoreAgentRequest.refineValues(this);
        }
        RestoreAgentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RestoreAgentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RestoreAgentRequest.fromBinary = function (bytes) {
            var instance = new RestoreAgentRequest();
            RestoreAgentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RestoreAgentRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        RestoreAgentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.agentUri = reader.readString();
                        break;
                    case 3:
                        instance.agentContent = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            RestoreAgentRequest.refineValues(instance);
        };
        RestoreAgentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.agentUri || instance.agentUri === '') {
                writer.writeString(2, instance.agentUri);
            }
            if (instance.agentContent && instance.agentContent.length) {
                writer.writeBytes(3, instance.agentContent);
            }
        };
        Object.defineProperty(RestoreAgentRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RestoreAgentRequest.prototype, "agentUri", {
            get: function () {
                return this._agentUri;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentContent = undefined;
                    this._agent = RestoreAgentRequest.AgentCase.agentUri;
                }
                this._agentUri = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RestoreAgentRequest.prototype, "agentContent", {
            get: function () {
                return this._agentContent;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._agentUri = undefined;
                    this._agent = RestoreAgentRequest.AgentCase.agentContent;
                }
                this._agentContent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RestoreAgentRequest.prototype, "agent", {
            get: function () {
                return this._agent;
            },
            enumerable: false,
            configurable: true
        });
        RestoreAgentRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                agentUri: this.agentUri,
                agentContent: this.agentContent
                    ? this.agentContent.subarray(0)
                    : new Uint8Array()
            };
        };
        RestoreAgentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return RestoreAgentRequest;
    }());
    (function (RestoreAgentRequest) {
        var AgentCase;
        (function (AgentCase) {
            AgentCase[AgentCase["none"] = 0] = "none";
            AgentCase[AgentCase["agentUri"] = 1] = "agentUri";
            AgentCase[AgentCase["agentContent"] = 2] = "agentContent";
        })(AgentCase = RestoreAgentRequest.AgentCase || (RestoreAgentRequest.AgentCase = {}));
    })(exports.RestoreAgentRequest || (exports.RestoreAgentRequest = {}));
    var GetAgentStatisticsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAgentStatisticsRequest value
         */
        function GetAgentStatisticsRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.format = value.format;
            this.languageCode = value.languageCode;
            this.type = value.type;
            GetAgentStatisticsRequest.refineValues(this);
        }
        GetAgentStatisticsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAgentStatisticsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAgentStatisticsRequest.fromBinary = function (bytes) {
            var instance = new GetAgentStatisticsRequest();
            GetAgentStatisticsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAgentStatisticsRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.format = instance.format || 0;
            instance.languageCode = instance.languageCode || '';
            instance.type = instance.type || 0;
        };
        GetAgentStatisticsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.format = reader.readEnum();
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    case 4:
                        instance.type = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAgentStatisticsRequest.refineValues(instance);
        };
        GetAgentStatisticsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.format) {
                writer.writeEnum(2, instance.format);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
            if (instance.type) {
                writer.writeEnum(4, instance.type);
            }
        };
        Object.defineProperty(GetAgentStatisticsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentStatisticsRequest.prototype, "format", {
            get: function () {
                return this._format;
            },
            set: function (value) {
                this._format = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentStatisticsRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentStatisticsRequest.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAgentStatisticsRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                format: this.format,
                languageCode: this.languageCode,
                type: this.type
            };
        };
        GetAgentStatisticsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAgentStatisticsRequest;
    }());
    var GetAgentStatisticsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAgentStatisticsResponse value
         */
        function GetAgentStatisticsResponse(value) {
            value = value || {};
            this.reports = value.reports;
            this.format = value.format;
            this.type = value.type;
            GetAgentStatisticsResponse.refineValues(this);
        }
        GetAgentStatisticsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAgentStatisticsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAgentStatisticsResponse.fromBinary = function (bytes) {
            var instance = new GetAgentStatisticsResponse();
            GetAgentStatisticsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAgentStatisticsResponse.refineValues = function (instance) {
            instance.reports = instance.reports || new Uint8Array();
            instance.format = instance.format || 0;
            instance.type = instance.type || 0;
        };
        GetAgentStatisticsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.reports = reader.readBytes();
                        break;
                    case 2:
                        instance.format = reader.readEnum();
                        break;
                    case 3:
                        instance.type = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAgentStatisticsResponse.refineValues(instance);
        };
        GetAgentStatisticsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.reports && instance.reports.length) {
                writer.writeBytes(1, instance.reports);
            }
            if (instance.format) {
                writer.writeEnum(2, instance.format);
            }
            if (instance.type) {
                writer.writeEnum(3, instance.type);
            }
        };
        Object.defineProperty(GetAgentStatisticsResponse.prototype, "reports", {
            get: function () {
                return this._reports;
            },
            set: function (value) {
                this._reports = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentStatisticsResponse.prototype, "format", {
            get: function () {
                return this._format;
            },
            set: function (value) {
                this._format = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAgentStatisticsResponse.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAgentStatisticsResponse.prototype.toObject = function () {
            return {
                reports: this.reports ? this.reports.subarray(0) : new Uint8Array(),
                format: this.format,
                type: this.type
            };
        };
        GetAgentStatisticsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAgentStatisticsResponse;
    }());
    var AddUserToProjectRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AddUserToProjectRequest value
         */
        function AddUserToProjectRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.userId = value.userId;
            this.projectRoleId = value.projectRoleId;
            AddUserToProjectRequest.refineValues(this);
        }
        AddUserToProjectRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AddUserToProjectRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AddUserToProjectRequest.fromBinary = function (bytes) {
            var instance = new AddUserToProjectRequest();
            AddUserToProjectRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AddUserToProjectRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.userId = instance.userId || '';
            instance.projectRoleId = instance.projectRoleId || 0;
        };
        AddUserToProjectRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.userId = reader.readString();
                        break;
                    case 4:
                        instance.projectRoleId = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            AddUserToProjectRequest.refineValues(instance);
        };
        AddUserToProjectRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.userId) {
                writer.writeString(2, instance.userId);
            }
            if (instance.projectRoleId) {
                writer.writeUint32(4, instance.projectRoleId);
            }
        };
        Object.defineProperty(AddUserToProjectRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AddUserToProjectRequest.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AddUserToProjectRequest.prototype, "projectRoleId", {
            get: function () {
                return this._projectRoleId;
            },
            set: function (value) {
                this._projectRoleId = value;
            },
            enumerable: false,
            configurable: true
        });
        AddUserToProjectRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                userId: this.userId,
                projectRoleId: this.projectRoleId
            };
        };
        AddUserToProjectRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return AddUserToProjectRequest;
    }());
    var RemoveUserFromProjectRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param RemoveUserFromProjectRequest value
         */
        function RemoveUserFromProjectRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.userId = value.userId;
            RemoveUserFromProjectRequest.refineValues(this);
        }
        RemoveUserFromProjectRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            RemoveUserFromProjectRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        RemoveUserFromProjectRequest.fromBinary = function (bytes) {
            var instance = new RemoveUserFromProjectRequest();
            RemoveUserFromProjectRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        RemoveUserFromProjectRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.userId = instance.userId || '';
        };
        RemoveUserFromProjectRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.userId = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            RemoveUserFromProjectRequest.refineValues(instance);
        };
        RemoveUserFromProjectRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.userId) {
                writer.writeString(2, instance.userId);
            }
        };
        Object.defineProperty(RemoveUserFromProjectRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RemoveUserFromProjectRequest.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        RemoveUserFromProjectRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                userId: this.userId
            };
        };
        RemoveUserFromProjectRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return RemoveUserFromProjectRequest;
    }());
    var ListUsersInProjectRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListUsersInProjectRequest value
         */
        function ListUsersInProjectRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.pageToken = value.pageToken;
            ListUsersInProjectRequest.refineValues(this);
        }
        ListUsersInProjectRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListUsersInProjectRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListUsersInProjectRequest.fromBinary = function (bytes) {
            var instance = new ListUsersInProjectRequest();
            ListUsersInProjectRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListUsersInProjectRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.pageToken = instance.pageToken || '';
        };
        ListUsersInProjectRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListUsersInProjectRequest.refineValues(instance);
        };
        ListUsersInProjectRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.pageToken) {
                writer.writeString(2, instance.pageToken);
            }
        };
        Object.defineProperty(ListUsersInProjectRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListUsersInProjectRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListUsersInProjectRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                pageToken: this.pageToken
            };
        };
        ListUsersInProjectRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListUsersInProjectRequest;
    }());
    var UserInProject = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UserInProject value
         */
        function UserInProject(value) {
            value = value || {};
            this.parent = value.parent;
            this.user = value.user ? new User(value.user) : undefined;
            this.roleId = value.roleId;
            UserInProject.refineValues(this);
        }
        UserInProject.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UserInProject.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UserInProject.fromBinary = function (bytes) {
            var instance = new UserInProject();
            UserInProject.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UserInProject.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.user = instance.user || undefined;
            instance.roleId = instance.roleId || 0;
        };
        UserInProject.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.user = new User();
                        reader.readMessage(instance.user, User.fromBinaryReader);
                        break;
                    case 3:
                        instance.roleId = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            UserInProject.refineValues(instance);
        };
        UserInProject.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.user) {
                writer.writeMessage(2, instance.user, User.toBinaryWriter);
            }
            if (instance.roleId) {
                writer.writeUint32(3, instance.roleId);
            }
        };
        Object.defineProperty(UserInProject.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UserInProject.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (value) {
                this._user = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UserInProject.prototype, "roleId", {
            get: function () {
                return this._roleId;
            },
            set: function (value) {
                this._roleId = value;
            },
            enumerable: false,
            configurable: true
        });
        UserInProject.prototype.toObject = function () {
            return {
                parent: this.parent,
                user: this.user ? this.user.toObject() : undefined,
                roleId: this.roleId
            };
        };
        UserInProject.prototype.toJSON = function () {
            return this.toObject();
        };
        return UserInProject;
    }());
    var ListUsersInProjectResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListUsersInProjectResponse value
         */
        function ListUsersInProjectResponse(value) {
            value = value || {};
            this.users = (value.users || []).map(function (m) { return new UserInProject(m); });
            this.nextPageToken = value.nextPageToken;
            ListUsersInProjectResponse.refineValues(this);
        }
        ListUsersInProjectResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListUsersInProjectResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListUsersInProjectResponse.fromBinary = function (bytes) {
            var instance = new ListUsersInProjectResponse();
            ListUsersInProjectResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListUsersInProjectResponse.refineValues = function (instance) {
            instance.users = instance.users || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListUsersInProjectResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new UserInProject();
                        reader.readMessage(messageInitializer1, UserInProject.fromBinaryReader);
                        (instance.users = instance.users || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListUsersInProjectResponse.refineValues(instance);
        };
        ListUsersInProjectResponse.toBinaryWriter = function (instance, writer) {
            if (instance.users && instance.users.length) {
                writer.writeRepeatedMessage(1, instance.users, UserInProject.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListUsersInProjectResponse.prototype, "users", {
            get: function () {
                return this._users;
            },
            set: function (value) {
                this._users = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListUsersInProjectResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListUsersInProjectResponse.prototype.toObject = function () {
            return {
                users: (this.users || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListUsersInProjectResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListUsersInProjectResponse;
    }());
    var GetPlatformInfoResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetPlatformInfoResponse value
         */
        function GetPlatformInfoResponse(value) {
            value = value || {};
            this.version = value.version;
            this.commitHash = value.commitHash;
            GetPlatformInfoResponse.refineValues(this);
        }
        GetPlatformInfoResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetPlatformInfoResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetPlatformInfoResponse.fromBinary = function (bytes) {
            var instance = new GetPlatformInfoResponse();
            GetPlatformInfoResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetPlatformInfoResponse.refineValues = function (instance) {
            instance.version = instance.version || '';
            instance.commitHash = instance.commitHash || '';
        };
        GetPlatformInfoResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.version = reader.readString();
                        break;
                    case 2:
                        instance.commitHash = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetPlatformInfoResponse.refineValues(instance);
        };
        GetPlatformInfoResponse.toBinaryWriter = function (instance, writer) {
            if (instance.version) {
                writer.writeString(1, instance.version);
            }
            if (instance.commitHash) {
                writer.writeString(2, instance.commitHash);
            }
        };
        Object.defineProperty(GetPlatformInfoResponse.prototype, "version", {
            get: function () {
                return this._version;
            },
            set: function (value) {
                this._version = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetPlatformInfoResponse.prototype, "commitHash", {
            get: function () {
                return this._commitHash;
            },
            set: function (value) {
                this._commitHash = value;
            },
            enumerable: false,
            configurable: true
        });
        GetPlatformInfoResponse.prototype.toObject = function () {
            return {
                version: this.version,
                commitHash: this.commitHash
            };
        };
        GetPlatformInfoResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetPlatformInfoResponse;
    }());
    var ListProjectPermissionsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListProjectPermissionsRequest value
         */
        function ListProjectPermissionsRequest(value) {
            value = value || {};
            this.pageToken = value.pageToken;
            ListProjectPermissionsRequest.refineValues(this);
        }
        ListProjectPermissionsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListProjectPermissionsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListProjectPermissionsRequest.fromBinary = function (bytes) {
            var instance = new ListProjectPermissionsRequest();
            ListProjectPermissionsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListProjectPermissionsRequest.refineValues = function (instance) {
            instance.pageToken = instance.pageToken || '';
        };
        ListProjectPermissionsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListProjectPermissionsRequest.refineValues(instance);
        };
        ListProjectPermissionsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.pageToken) {
                writer.writeString(1, instance.pageToken);
            }
        };
        Object.defineProperty(ListProjectPermissionsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListProjectPermissionsRequest.prototype.toObject = function () {
            return {
                pageToken: this.pageToken
            };
        };
        ListProjectPermissionsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListProjectPermissionsRequest;
    }());
    var ListProjectPermissionsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListProjectPermissionsResponse value
         */
        function ListProjectPermissionsResponse(value) {
            value = value || {};
            this.permissions = (value.permissions || []).slice();
            this.nextPageToken = value.nextPageToken;
            ListProjectPermissionsResponse.refineValues(this);
        }
        ListProjectPermissionsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListProjectPermissionsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListProjectPermissionsResponse.fromBinary = function (bytes) {
            var instance = new ListProjectPermissionsResponse();
            ListProjectPermissionsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListProjectPermissionsResponse.refineValues = function (instance) {
            instance.permissions = instance.permissions || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListProjectPermissionsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        (instance.permissions = instance.permissions || []).push(reader.readString());
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListProjectPermissionsResponse.refineValues(instance);
        };
        ListProjectPermissionsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.permissions && instance.permissions.length) {
                writer.writeRepeatedString(1, instance.permissions);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListProjectPermissionsResponse.prototype, "permissions", {
            get: function () {
                return this._permissions;
            },
            set: function (value) {
                this._permissions = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListProjectPermissionsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListProjectPermissionsResponse.prototype.toObject = function () {
            return {
                permissions: (this.permissions || []).slice(),
                nextPageToken: this.nextPageToken
            };
        };
        ListProjectPermissionsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListProjectPermissionsResponse;
    }());
    var SetAgentStatusRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SetAgentStatusRequest value
         */
        function SetAgentStatusRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.status = value.status;
            this.agentView = value.agentView;
            SetAgentStatusRequest.refineValues(this);
        }
        SetAgentStatusRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SetAgentStatusRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SetAgentStatusRequest.fromBinary = function (bytes) {
            var instance = new SetAgentStatusRequest();
            SetAgentStatusRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SetAgentStatusRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.status = instance.status || 0;
            instance.agentView = instance.agentView || 0;
        };
        SetAgentStatusRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.status = reader.readEnum();
                        break;
                    case 3:
                        instance.agentView = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            SetAgentStatusRequest.refineValues(instance);
        };
        SetAgentStatusRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.status) {
                writer.writeEnum(2, instance.status);
            }
            if (instance.agentView) {
                writer.writeEnum(3, instance.agentView);
            }
        };
        Object.defineProperty(SetAgentStatusRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetAgentStatusRequest.prototype, "status", {
            get: function () {
                return this._status;
            },
            set: function (value) {
                this._status = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetAgentStatusRequest.prototype, "agentView", {
            get: function () {
                return this._agentView;
            },
            set: function (value) {
                this._agentView = value;
            },
            enumerable: false,
            configurable: true
        });
        SetAgentStatusRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                status: this.status,
                agentView: this.agentView
            };
        };
        SetAgentStatusRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return SetAgentStatusRequest;
    }());
    exports.AgentSorting = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AgentSorting value
         */
        function AgentSorting(value) {
            value = value || {};
            this.sortingField = value.sortingField;
            this.sortingMode = value.sortingMode;
            AgentSorting.refineValues(this);
        }
        AgentSorting.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AgentSorting.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AgentSorting.fromBinary = function (bytes) {
            var instance = new AgentSorting();
            AgentSorting.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AgentSorting.refineValues = function (instance) {
            instance.sortingField = instance.sortingField || 0;
            instance.sortingMode = instance.sortingMode || 0;
        };
        AgentSorting.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sortingField = reader.readEnum();
                        break;
                    case 2:
                        instance.sortingMode = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            AgentSorting.refineValues(instance);
        };
        AgentSorting.toBinaryWriter = function (instance, writer) {
            if (instance.sortingField) {
                writer.writeEnum(1, instance.sortingField);
            }
            if (instance.sortingMode) {
                writer.writeEnum(2, instance.sortingMode);
            }
        };
        Object.defineProperty(AgentSorting.prototype, "sortingField", {
            get: function () {
                return this._sortingField;
            },
            set: function (value) {
                this._sortingField = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AgentSorting.prototype, "sortingMode", {
            get: function () {
                return this._sortingMode;
            },
            set: function (value) {
                this._sortingMode = value;
            },
            enumerable: false,
            configurable: true
        });
        AgentSorting.prototype.toObject = function () {
            return {
                sortingField: this.sortingField,
                sortingMode: this.sortingMode
            };
        };
        AgentSorting.prototype.toJSON = function () {
            return this.toObject();
        };
        return AgentSorting;
    }());
    (function (AgentSorting) {
        var AgentSortingField;
        (function (AgentSortingField) {
            AgentSortingField[AgentSortingField["noAgentSorting"] = 0] = "noAgentSorting";
            AgentSortingField[AgentSortingField["sortAgentByName"] = 1] = "sortAgentByName";
            AgentSortingField[AgentSortingField["sortAgentByCreationDate"] = 2] = "sortAgentByCreationDate";
            AgentSortingField[AgentSortingField["sortAgentByLastUpdated"] = 3] = "sortAgentByLastUpdated";
            AgentSortingField[AgentSortingField["sortAgentByOwnerName"] = 4] = "sortAgentByOwnerName";
        })(AgentSortingField = AgentSorting.AgentSortingField || (AgentSorting.AgentSortingField = {}));
    })(exports.AgentSorting || (exports.AgentSorting = {}));
    var SetResourcesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SetResourcesRequest value
         */
        function SetResourcesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.name = value.name;
            this.type = value.type;
            this.resourceFile = value.resourceFile;
            this.languageCode = value.languageCode;
            SetResourcesRequest.refineValues(this);
        }
        SetResourcesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SetResourcesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SetResourcesRequest.fromBinary = function (bytes) {
            var instance = new SetResourcesRequest();
            SetResourcesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SetResourcesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.name = instance.name || '';
            instance.type = instance.type || '';
            instance.resourceFile = instance.resourceFile || new Uint8Array();
            instance.languageCode = instance.languageCode || '';
        };
        SetResourcesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        instance.type = reader.readString();
                        break;
                    case 4:
                        instance.resourceFile = reader.readBytes();
                        break;
                    case 5:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            SetResourcesRequest.refineValues(instance);
        };
        SetResourcesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.type) {
                writer.writeString(3, instance.type);
            }
            if (instance.resourceFile && instance.resourceFile.length) {
                writer.writeBytes(4, instance.resourceFile);
            }
            if (instance.languageCode) {
                writer.writeString(5, instance.languageCode);
            }
        };
        Object.defineProperty(SetResourcesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetResourcesRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetResourcesRequest.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetResourcesRequest.prototype, "resourceFile", {
            get: function () {
                return this._resourceFile;
            },
            set: function (value) {
                this._resourceFile = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SetResourcesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        SetResourcesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                name: this.name,
                type: this.type,
                resourceFile: this.resourceFile
                    ? this.resourceFile.subarray(0)
                    : new Uint8Array(),
                languageCode: this.languageCode
            };
        };
        SetResourcesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return SetResourcesRequest;
    }());
    var DeleteResourcesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteResourcesRequest value
         */
        function DeleteResourcesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.name = value.name;
            this.type = value.type;
            this.languageCode = value.languageCode;
            DeleteResourcesRequest.refineValues(this);
        }
        DeleteResourcesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteResourcesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteResourcesRequest.fromBinary = function (bytes) {
            var instance = new DeleteResourcesRequest();
            DeleteResourcesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteResourcesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.name = instance.name || '';
            instance.type = instance.type || '';
            instance.languageCode = instance.languageCode || '';
        };
        DeleteResourcesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        instance.type = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteResourcesRequest.refineValues(instance);
        };
        DeleteResourcesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.type) {
                writer.writeString(3, instance.type);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
        };
        Object.defineProperty(DeleteResourcesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DeleteResourcesRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DeleteResourcesRequest.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DeleteResourcesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteResourcesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                name: this.name,
                type: this.type,
                languageCode: this.languageCode
            };
        };
        DeleteResourcesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteResourcesRequest;
    }());
    var ExportResourcesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExportResourcesRequest value
         */
        function ExportResourcesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.name = value.name;
            this.type = value.type;
            this.languageCode = value.languageCode;
            ExportResourcesRequest.refineValues(this);
        }
        ExportResourcesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExportResourcesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExportResourcesRequest.fromBinary = function (bytes) {
            var instance = new ExportResourcesRequest();
            ExportResourcesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExportResourcesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.name = instance.name || '';
            instance.type = instance.type || '';
            instance.languageCode = instance.languageCode || '';
        };
        ExportResourcesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        instance.type = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExportResourcesRequest.refineValues(instance);
        };
        ExportResourcesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.type) {
                writer.writeString(3, instance.type);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
        };
        Object.defineProperty(ExportResourcesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesRequest.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        ExportResourcesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                name: this.name,
                type: this.type,
                languageCode: this.languageCode
            };
        };
        ExportResourcesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExportResourcesRequest;
    }());
    var ExportResourcesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExportResourcesResponse value
         */
        function ExportResourcesResponse(value) {
            value = value || {};
            this.parent = value.parent;
            this.name = value.name;
            this.type = value.type;
            this.languageCode = value.languageCode;
            this.resourceFile = value.resourceFile;
            ExportResourcesResponse.refineValues(this);
        }
        ExportResourcesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExportResourcesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExportResourcesResponse.fromBinary = function (bytes) {
            var instance = new ExportResourcesResponse();
            ExportResourcesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExportResourcesResponse.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.name = instance.name || '';
            instance.type = instance.type || '';
            instance.languageCode = instance.languageCode || '';
            instance.resourceFile = instance.resourceFile || new Uint8Array();
        };
        ExportResourcesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        instance.type = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.resourceFile = reader.readBytes();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExportResourcesResponse.refineValues(instance);
        };
        ExportResourcesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.name) {
                writer.writeString(2, instance.name);
            }
            if (instance.type) {
                writer.writeString(3, instance.type);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.resourceFile && instance.resourceFile.length) {
                writer.writeBytes(5, instance.resourceFile);
            }
        };
        Object.defineProperty(ExportResourcesResponse.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesResponse.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesResponse.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesResponse.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExportResourcesResponse.prototype, "resourceFile", {
            get: function () {
                return this._resourceFile;
            },
            set: function (value) {
                this._resourceFile = value;
            },
            enumerable: false,
            configurable: true
        });
        ExportResourcesResponse.prototype.toObject = function () {
            return {
                parent: this.parent,
                name: this.name,
                type: this.type,
                languageCode: this.languageCode,
                resourceFile: this.resourceFile
                    ? this.resourceFile.subarray(0)
                    : new Uint8Array()
            };
        };
        ExportResourcesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExportResourcesResponse;
    }());

    exports.SortingMode = void 0;
    (function (SortingMode) {
        SortingMode[SortingMode["ascending"] = 0] = "ascending";
        SortingMode[SortingMode["descending"] = 1] = "descending";
    })(exports.SortingMode || (exports.SortingMode = {}));
    var StatResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param StatResponse value
         */
        function StatResponse(value) {
            value = value || {};
            this.value = value.value;
            StatResponse.refineValues(this);
        }
        StatResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            StatResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        StatResponse.fromBinary = function (bytes) {
            var instance = new StatResponse();
            StatResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        StatResponse.refineValues = function (instance) {
            instance.value = instance.value || 0;
        };
        StatResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.value = reader.readUint32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            StatResponse.refineValues(instance);
        };
        StatResponse.toBinaryWriter = function (instance, writer) {
            if (instance.value) {
                writer.writeUint32(1, instance.value);
            }
        };
        Object.defineProperty(StatResponse.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (value) {
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        StatResponse.prototype.toObject = function () {
            return {
                value: this.value
            };
        };
        StatResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return StatResponse;
    }());

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_WEBHOOK_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_WEBHOOK_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_WEBHOOK_CLIENT_SETTINGS');

    var PingRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param PingRequest value
         */
        function PingRequest(value) {
            value = value || {};
            this.session = value.session;
            PingRequest.refineValues(this);
        }
        PingRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            PingRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        PingRequest.fromBinary = function (bytes) {
            var instance = new PingRequest();
            PingRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        PingRequest.refineValues = function (instance) {
            instance.session = instance.session || '';
        };
        PingRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.session = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            PingRequest.refineValues(instance);
        };
        PingRequest.toBinaryWriter = function (instance, writer) {
            if (instance.session) {
                writer.writeString(1, instance.session);
            }
        };
        Object.defineProperty(PingRequest.prototype, "session", {
            get: function () {
                return this._session;
            },
            set: function (value) {
                this._session = value;
            },
            enumerable: false,
            configurable: true
        });
        PingRequest.prototype.toObject = function () {
            return {
                session: this.session
            };
        };
        PingRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return PingRequest;
    }());
    var WebhookRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param WebhookRequest value
         */
        function WebhookRequest(value) {
            value = value || {};
            this.session = value.session;
            this.responseId = value.responseId;
            this.queryResult = value.queryResult
                ? new QueryResult(value.queryResult)
                : undefined;
            this.originalDetectIntentRequest = value.originalDetectIntentRequest
                ? new OriginalDetectIntentRequest(value.originalDetectIntentRequest)
                : undefined;
            this.headers = value.headers
                ? new exports.Struct(value.headers)
                : undefined;
            WebhookRequest.refineValues(this);
        }
        WebhookRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            WebhookRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        WebhookRequest.fromBinary = function (bytes) {
            var instance = new WebhookRequest();
            WebhookRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        WebhookRequest.refineValues = function (instance) {
            instance.session = instance.session || '';
            instance.responseId = instance.responseId || '';
            instance.queryResult = instance.queryResult || undefined;
            instance.originalDetectIntentRequest =
                instance.originalDetectIntentRequest || undefined;
            instance.headers = instance.headers || undefined;
        };
        WebhookRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 4:
                        instance.session = reader.readString();
                        break;
                    case 1:
                        instance.responseId = reader.readString();
                        break;
                    case 2:
                        instance.queryResult = new QueryResult();
                        reader.readMessage(instance.queryResult, QueryResult.fromBinaryReader);
                        break;
                    case 3:
                        instance.originalDetectIntentRequest = new OriginalDetectIntentRequest();
                        reader.readMessage(instance.originalDetectIntentRequest, OriginalDetectIntentRequest.fromBinaryReader);
                        break;
                    case 5:
                        instance.headers = new exports.Struct();
                        reader.readMessage(instance.headers, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            WebhookRequest.refineValues(instance);
        };
        WebhookRequest.toBinaryWriter = function (instance, writer) {
            if (instance.session) {
                writer.writeString(4, instance.session);
            }
            if (instance.responseId) {
                writer.writeString(1, instance.responseId);
            }
            if (instance.queryResult) {
                writer.writeMessage(2, instance.queryResult, QueryResult.toBinaryWriter);
            }
            if (instance.originalDetectIntentRequest) {
                writer.writeMessage(3, instance.originalDetectIntentRequest, OriginalDetectIntentRequest.toBinaryWriter);
            }
            if (instance.headers) {
                writer.writeMessage(5, instance.headers, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(WebhookRequest.prototype, "session", {
            get: function () {
                return this._session;
            },
            set: function (value) {
                this._session = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookRequest.prototype, "responseId", {
            get: function () {
                return this._responseId;
            },
            set: function (value) {
                this._responseId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookRequest.prototype, "queryResult", {
            get: function () {
                return this._queryResult;
            },
            set: function (value) {
                this._queryResult = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookRequest.prototype, "originalDetectIntentRequest", {
            get: function () {
                return this._originalDetectIntentRequest;
            },
            set: function (value) {
                this._originalDetectIntentRequest = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookRequest.prototype, "headers", {
            get: function () {
                return this._headers;
            },
            set: function (value) {
                this._headers = value;
            },
            enumerable: false,
            configurable: true
        });
        WebhookRequest.prototype.toObject = function () {
            return {
                session: this.session,
                responseId: this.responseId,
                queryResult: this.queryResult ? this.queryResult.toObject() : undefined,
                originalDetectIntentRequest: this.originalDetectIntentRequest
                    ? this.originalDetectIntentRequest.toObject()
                    : undefined,
                headers: this.headers ? this.headers.toObject() : undefined
            };
        };
        WebhookRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return WebhookRequest;
    }());
    var WebhookResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param WebhookResponse value
         */
        function WebhookResponse(value) {
            value = value || {};
            this.fulfillmentText = value.fulfillmentText;
            this.fulfillmentMessages = (value.fulfillmentMessages || []).map(function (m) { return new exports.Intent.Message(m); });
            this.source = value.source;
            this.payload = value.payload
                ? new exports.Struct(value.payload)
                : undefined;
            this.outputContexts = (value.outputContexts || []).map(function (m) { return new exports.Context(m); });
            this.followupEventInput = value.followupEventInput
                ? new EventInput(value.followupEventInput)
                : undefined;
            WebhookResponse.refineValues(this);
        }
        WebhookResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            WebhookResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        WebhookResponse.fromBinary = function (bytes) {
            var instance = new WebhookResponse();
            WebhookResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        WebhookResponse.refineValues = function (instance) {
            instance.fulfillmentText = instance.fulfillmentText || '';
            instance.fulfillmentMessages = instance.fulfillmentMessages || [];
            instance.source = instance.source || '';
            instance.payload = instance.payload || undefined;
            instance.outputContexts = instance.outputContexts || [];
            instance.followupEventInput = instance.followupEventInput || undefined;
        };
        WebhookResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.fulfillmentText = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new exports.Intent.Message();
                        reader.readMessage(messageInitializer2, exports.Intent.Message.fromBinaryReader);
                        (instance.fulfillmentMessages =
                            instance.fulfillmentMessages || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.source = reader.readString();
                        break;
                    case 4:
                        instance.payload = new exports.Struct();
                        reader.readMessage(instance.payload, exports.Struct.fromBinaryReader);
                        break;
                    case 5:
                        var messageInitializer5 = new exports.Context();
                        reader.readMessage(messageInitializer5, exports.Context.fromBinaryReader);
                        (instance.outputContexts = instance.outputContexts || []).push(messageInitializer5);
                        break;
                    case 6:
                        instance.followupEventInput = new EventInput();
                        reader.readMessage(instance.followupEventInput, EventInput.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            WebhookResponse.refineValues(instance);
        };
        WebhookResponse.toBinaryWriter = function (instance, writer) {
            if (instance.fulfillmentText) {
                writer.writeString(1, instance.fulfillmentText);
            }
            if (instance.fulfillmentMessages && instance.fulfillmentMessages.length) {
                writer.writeRepeatedMessage(2, instance.fulfillmentMessages, exports.Intent.Message.toBinaryWriter);
            }
            if (instance.source) {
                writer.writeString(3, instance.source);
            }
            if (instance.payload) {
                writer.writeMessage(4, instance.payload, exports.Struct.toBinaryWriter);
            }
            if (instance.outputContexts && instance.outputContexts.length) {
                writer.writeRepeatedMessage(5, instance.outputContexts, exports.Context.toBinaryWriter);
            }
            if (instance.followupEventInput) {
                writer.writeMessage(6, instance.followupEventInput, EventInput.toBinaryWriter);
            }
        };
        Object.defineProperty(WebhookResponse.prototype, "fulfillmentText", {
            get: function () {
                return this._fulfillmentText;
            },
            set: function (value) {
                this._fulfillmentText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookResponse.prototype, "fulfillmentMessages", {
            get: function () {
                return this._fulfillmentMessages;
            },
            set: function (value) {
                this._fulfillmentMessages = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookResponse.prototype, "source", {
            get: function () {
                return this._source;
            },
            set: function (value) {
                this._source = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookResponse.prototype, "payload", {
            get: function () {
                return this._payload;
            },
            set: function (value) {
                this._payload = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookResponse.prototype, "outputContexts", {
            get: function () {
                return this._outputContexts;
            },
            set: function (value) {
                this._outputContexts = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WebhookResponse.prototype, "followupEventInput", {
            get: function () {
                return this._followupEventInput;
            },
            set: function (value) {
                this._followupEventInput = value;
            },
            enumerable: false,
            configurable: true
        });
        WebhookResponse.prototype.toObject = function () {
            return {
                fulfillmentText: this.fulfillmentText,
                fulfillmentMessages: (this.fulfillmentMessages || []).map(function (m) { return m.toObject(); }),
                source: this.source,
                payload: this.payload ? this.payload.toObject() : undefined,
                outputContexts: (this.outputContexts || []).map(function (m) { return m.toObject(); }),
                followupEventInput: this.followupEventInput
                    ? this.followupEventInput.toObject()
                    : undefined
            };
        };
        WebhookResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return WebhookResponse;
    }());
    var OriginalDetectIntentRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OriginalDetectIntentRequest value
         */
        function OriginalDetectIntentRequest(value) {
            value = value || {};
            this.source = value.source;
            this.payload = value.payload
                ? new exports.Struct(value.payload)
                : undefined;
            OriginalDetectIntentRequest.refineValues(this);
        }
        OriginalDetectIntentRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OriginalDetectIntentRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OriginalDetectIntentRequest.fromBinary = function (bytes) {
            var instance = new OriginalDetectIntentRequest();
            OriginalDetectIntentRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OriginalDetectIntentRequest.refineValues = function (instance) {
            instance.source = instance.source || '';
            instance.payload = instance.payload || undefined;
        };
        OriginalDetectIntentRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.source = reader.readString();
                        break;
                    case 3:
                        instance.payload = new exports.Struct();
                        reader.readMessage(instance.payload, exports.Struct.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            OriginalDetectIntentRequest.refineValues(instance);
        };
        OriginalDetectIntentRequest.toBinaryWriter = function (instance, writer) {
            if (instance.source) {
                writer.writeString(1, instance.source);
            }
            if (instance.payload) {
                writer.writeMessage(3, instance.payload, exports.Struct.toBinaryWriter);
            }
        };
        Object.defineProperty(OriginalDetectIntentRequest.prototype, "source", {
            get: function () {
                return this._source;
            },
            set: function (value) {
                this._source = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OriginalDetectIntentRequest.prototype, "payload", {
            get: function () {
                return this._payload;
            },
            set: function (value) {
                this._payload = value;
            },
            enumerable: false,
            configurable: true
        });
        OriginalDetectIntentRequest.prototype.toObject = function () {
            return {
                source: this.source,
                payload: this.payload ? this.payload.toObject() : undefined
            };
        };
        OriginalDetectIntentRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return OriginalDetectIntentRequest;
    }());
    var PingResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param PingResponse value
         */
        function PingResponse(value) {
            value = value || {};
            this.isReachable = value.isReachable;
            PingResponse.refineValues(this);
        }
        PingResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            PingResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        PingResponse.fromBinary = function (bytes) {
            var instance = new PingResponse();
            PingResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        PingResponse.refineValues = function (instance) {
            instance.isReachable = instance.isReachable || false;
        };
        PingResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isReachable = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            PingResponse.refineValues(instance);
        };
        PingResponse.toBinaryWriter = function (instance, writer) {
            if (instance.isReachable) {
                writer.writeBool(1, instance.isReachable);
            }
        };
        Object.defineProperty(PingResponse.prototype, "isReachable", {
            get: function () {
                return this._isReachable;
            },
            set: function (value) {
                this._isReachable = value;
            },
            enumerable: false,
            configurable: true
        });
        PingResponse.prototype.toObject = function () {
            return {
                isReachable: this.isReachable
            };
        };
        PingResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return PingResponse;
    }());

    /* tslint:disable */
    var WebhookClient = /** @class */ (function () {
        function WebhookClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Webhook', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.WebhookRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.WebhookResponse>
         */
        WebhookClient.prototype.responseRefinement = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.responseRefinement$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.WebhookRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.WebhookResponse>>
         */
        WebhookClient.prototype.responseRefinement$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Webhook/ResponseRefinement',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: WebhookRequest,
                responseClass: WebhookResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.WebhookRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.WebhookResponse>
         */
        WebhookClient.prototype.slotFilling = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.slotFilling$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.WebhookRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.WebhookResponse>>
         */
        WebhookClient.prototype.slotFilling$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Webhook/SlotFilling',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: WebhookRequest,
                responseClass: WebhookResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.PingRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.PingResponse>
         */
        WebhookClient.prototype.ping = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.ping$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.PingRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.PingResponse>>
         */
        WebhookClient.prototype.ping$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Webhook/Ping',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: PingRequest,
                responseClass: PingResponse
            });
        };
        return WebhookClient;
    }());
    WebhookClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function WebhookClient_Factory() { return new WebhookClient(i0__namespace.ɵɵinject(GRPC_WEBHOOK_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: WebhookClient, providedIn: "root" });
    WebhookClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    WebhookClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_WEBHOOK_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    var ExtractEntitiesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExtractEntitiesRequest value
         */
        function ExtractEntitiesRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.text = value.text;
            this.languageCode = value.languageCode;
            ExtractEntitiesRequest.refineValues(this);
        }
        ExtractEntitiesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExtractEntitiesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExtractEntitiesRequest.fromBinary = function (bytes) {
            var instance = new ExtractEntitiesRequest();
            ExtractEntitiesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExtractEntitiesRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.text = instance.text || '';
            instance.languageCode = instance.languageCode || '';
        };
        ExtractEntitiesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.text = reader.readString();
                        break;
                    case 3:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExtractEntitiesRequest.refineValues(instance);
        };
        ExtractEntitiesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.text) {
                writer.writeString(2, instance.text);
            }
            if (instance.languageCode) {
                writer.writeString(3, instance.languageCode);
            }
        };
        Object.defineProperty(ExtractEntitiesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExtractEntitiesRequest.prototype, "text", {
            get: function () {
                return this._text;
            },
            set: function (value) {
                this._text = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExtractEntitiesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        ExtractEntitiesRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                text: this.text,
                languageCode: this.languageCode
            };
        };
        ExtractEntitiesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExtractEntitiesRequest;
    }());
    var ExtractEntitiesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExtractEntitiesResponse value
         */
        function ExtractEntitiesResponse(value) {
            value = value || {};
            this.entities = (value.entities || []).map(function (m) { return new exports.Intent.TrainingPhrase.Entity(m); });
            this.text = value.text;
            ExtractEntitiesResponse.refineValues(this);
        }
        ExtractEntitiesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExtractEntitiesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExtractEntitiesResponse.fromBinary = function (bytes) {
            var instance = new ExtractEntitiesResponse();
            ExtractEntitiesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExtractEntitiesResponse.refineValues = function (instance) {
            instance.entities = instance.entities || [];
            instance.text = instance.text || '';
        };
        ExtractEntitiesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Intent.TrainingPhrase.Entity();
                        reader.readMessage(messageInitializer1, exports.Intent.TrainingPhrase.Entity.fromBinaryReader);
                        (instance.entities = instance.entities || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.text = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExtractEntitiesResponse.refineValues(instance);
        };
        ExtractEntitiesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.entities && instance.entities.length) {
                writer.writeRepeatedMessage(1, instance.entities, exports.Intent.TrainingPhrase.Entity.toBinaryWriter);
            }
            if (instance.text) {
                writer.writeString(2, instance.text);
            }
        };
        Object.defineProperty(ExtractEntitiesResponse.prototype, "entities", {
            get: function () {
                return this._entities;
            },
            set: function (value) {
                this._entities = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ExtractEntitiesResponse.prototype, "text", {
            get: function () {
                return this._text;
            },
            set: function (value) {
                this._text = value;
            },
            enumerable: false,
            configurable: true
        });
        ExtractEntitiesResponse.prototype.toObject = function () {
            return {
                entities: (this.entities || []).map(function (m) { return m.toObject(); }),
                text: this.text
            };
        };
        ExtractEntitiesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExtractEntitiesResponse;
    }());
    var GetAlternativeSentencesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAlternativeSentencesRequest value
         */
        function GetAlternativeSentencesRequest(value) {
            value = value || {};
            this.config = value.config
                ? new DataEnrichmentConfig(value.config)
                : undefined;
            this.sentence = value.sentence;
            this.languageCode = value.languageCode;
            this.parent = value.parent;
            this.protectedWords = (value.protectedWords || []).slice();
            this.wordsToChange = (value.wordsToChange || []).slice();
            GetAlternativeSentencesRequest.refineValues(this);
        }
        GetAlternativeSentencesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAlternativeSentencesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAlternativeSentencesRequest.fromBinary = function (bytes) {
            var instance = new GetAlternativeSentencesRequest();
            GetAlternativeSentencesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAlternativeSentencesRequest.refineValues = function (instance) {
            instance.config = instance.config || undefined;
            instance.sentence = instance.sentence || '';
            instance.languageCode = instance.languageCode || '';
            instance.parent = instance.parent || '';
            instance.protectedWords = instance.protectedWords || [];
            instance.wordsToChange = instance.wordsToChange || [];
        };
        GetAlternativeSentencesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.config = new DataEnrichmentConfig();
                        reader.readMessage(instance.config, DataEnrichmentConfig.fromBinaryReader);
                        break;
                    case 2:
                        instance.sentence = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.parent = reader.readString();
                        break;
                    case 6:
                        (instance.protectedWords = instance.protectedWords || []).push(reader.readString());
                        break;
                    case 7:
                        (instance.wordsToChange = instance.wordsToChange || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAlternativeSentencesRequest.refineValues(instance);
        };
        GetAlternativeSentencesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.config) {
                writer.writeMessage(1, instance.config, DataEnrichmentConfig.toBinaryWriter);
            }
            if (instance.sentence) {
                writer.writeString(2, instance.sentence);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.parent) {
                writer.writeString(5, instance.parent);
            }
            if (instance.protectedWords && instance.protectedWords.length) {
                writer.writeRepeatedString(6, instance.protectedWords);
            }
            if (instance.wordsToChange && instance.wordsToChange.length) {
                writer.writeRepeatedString(7, instance.wordsToChange);
            }
        };
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "config", {
            get: function () {
                return this._config;
            },
            set: function (value) {
                this._config = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "sentence", {
            get: function () {
                return this._sentence;
            },
            set: function (value) {
                this._sentence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "protectedWords", {
            get: function () {
                return this._protectedWords;
            },
            set: function (value) {
                this._protectedWords = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeSentencesRequest.prototype, "wordsToChange", {
            get: function () {
                return this._wordsToChange;
            },
            set: function (value) {
                this._wordsToChange = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAlternativeSentencesRequest.prototype.toObject = function () {
            return {
                config: this.config ? this.config.toObject() : undefined,
                sentence: this.sentence,
                languageCode: this.languageCode,
                parent: this.parent,
                protectedWords: (this.protectedWords || []).slice(),
                wordsToChange: (this.wordsToChange || []).slice()
            };
        };
        GetAlternativeSentencesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAlternativeSentencesRequest;
    }());
    var GenerateUserSaysRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GenerateUserSaysRequest value
         */
        function GenerateUserSaysRequest(value) {
            value = value || {};
            this.languageCode = value.languageCode;
            this.parent = value.parent;
            this.nRepeatSynonym = value.nRepeatSynonym;
            this.branch = value.branch;
            GenerateUserSaysRequest.refineValues(this);
        }
        GenerateUserSaysRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GenerateUserSaysRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GenerateUserSaysRequest.fromBinary = function (bytes) {
            var instance = new GenerateUserSaysRequest();
            GenerateUserSaysRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GenerateUserSaysRequest.refineValues = function (instance) {
            instance.languageCode = instance.languageCode || '';
            instance.parent = instance.parent || '';
            instance.nRepeatSynonym = instance.nRepeatSynonym || 0;
            instance.branch = instance.branch || '';
        };
        GenerateUserSaysRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.parent = reader.readString();
                        break;
                    case 6:
                        instance.nRepeatSynonym = reader.readInt32();
                        break;
                    case 8:
                        instance.branch = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GenerateUserSaysRequest.refineValues(instance);
        };
        GenerateUserSaysRequest.toBinaryWriter = function (instance, writer) {
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.parent) {
                writer.writeString(5, instance.parent);
            }
            if (instance.nRepeatSynonym) {
                writer.writeInt32(6, instance.nRepeatSynonym);
            }
            if (instance.branch) {
                writer.writeString(8, instance.branch);
            }
        };
        Object.defineProperty(GenerateUserSaysRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateUserSaysRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateUserSaysRequest.prototype, "nRepeatSynonym", {
            get: function () {
                return this._nRepeatSynonym;
            },
            set: function (value) {
                this._nRepeatSynonym = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateUserSaysRequest.prototype, "branch", {
            get: function () {
                return this._branch;
            },
            set: function (value) {
                this._branch = value;
            },
            enumerable: false,
            configurable: true
        });
        GenerateUserSaysRequest.prototype.toObject = function () {
            return {
                languageCode: this.languageCode,
                parent: this.parent,
                nRepeatSynonym: this.nRepeatSynonym,
                branch: this.branch
            };
        };
        GenerateUserSaysRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GenerateUserSaysRequest;
    }());
    var GenerateResponsesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GenerateResponsesRequest value
         */
        function GenerateResponsesRequest(value) {
            value = value || {};
            this.languageCode = value.languageCode;
            this.parent = value.parent;
            this.nRepeatSynonym = value.nRepeatSynonym;
            this.branch = value.branch;
            this.dropUnknownParameters = value.dropUnknownParameters;
            GenerateResponsesRequest.refineValues(this);
        }
        GenerateResponsesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GenerateResponsesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GenerateResponsesRequest.fromBinary = function (bytes) {
            var instance = new GenerateResponsesRequest();
            GenerateResponsesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GenerateResponsesRequest.refineValues = function (instance) {
            instance.languageCode = instance.languageCode || '';
            instance.parent = instance.parent || '';
            instance.nRepeatSynonym = instance.nRepeatSynonym || 0;
            instance.branch = instance.branch || '';
            instance.dropUnknownParameters = instance.dropUnknownParameters || false;
        };
        GenerateResponsesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.parent = reader.readString();
                        break;
                    case 7:
                        instance.nRepeatSynonym = reader.readInt32();
                        break;
                    case 8:
                        instance.branch = reader.readString();
                        break;
                    case 9:
                        instance.dropUnknownParameters = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GenerateResponsesRequest.refineValues(instance);
        };
        GenerateResponsesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.parent) {
                writer.writeString(5, instance.parent);
            }
            if (instance.nRepeatSynonym) {
                writer.writeInt32(7, instance.nRepeatSynonym);
            }
            if (instance.branch) {
                writer.writeString(8, instance.branch);
            }
            if (instance.dropUnknownParameters) {
                writer.writeBool(9, instance.dropUnknownParameters);
            }
        };
        Object.defineProperty(GenerateResponsesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateResponsesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateResponsesRequest.prototype, "nRepeatSynonym", {
            get: function () {
                return this._nRepeatSynonym;
            },
            set: function (value) {
                this._nRepeatSynonym = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateResponsesRequest.prototype, "branch", {
            get: function () {
                return this._branch;
            },
            set: function (value) {
                this._branch = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GenerateResponsesRequest.prototype, "dropUnknownParameters", {
            get: function () {
                return this._dropUnknownParameters;
            },
            set: function (value) {
                this._dropUnknownParameters = value;
            },
            enumerable: false,
            configurable: true
        });
        GenerateResponsesRequest.prototype.toObject = function () {
            return {
                languageCode: this.languageCode,
                parent: this.parent,
                nRepeatSynonym: this.nRepeatSynonym,
                branch: this.branch,
                dropUnknownParameters: this.dropUnknownParameters
            };
        };
        GenerateResponsesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GenerateResponsesRequest;
    }());
    var GetAlternativeTrainingPhrasesRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAlternativeTrainingPhrasesRequest value
         */
        function GetAlternativeTrainingPhrasesRequest(value) {
            value = value || {};
            this.config = value.config
                ? new DataEnrichmentConfig(value.config)
                : undefined;
            this.trainingPhrase = value.trainingPhrase
                ? new exports.Intent.TrainingPhrase(value.trainingPhrase)
                : undefined;
            this.intentName = value.intentName;
            this.languageCode = value.languageCode;
            this.parent = value.parent;
            this.detectEntities = value.detectEntities;
            this.similarityThreshold = value.similarityThreshold;
            this.protectedWords = (value.protectedWords || []).slice();
            this.wordsToChange = (value.wordsToChange || []).slice();
            this.branch = value.branch;
            GetAlternativeTrainingPhrasesRequest.refineValues(this);
        }
        GetAlternativeTrainingPhrasesRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAlternativeTrainingPhrasesRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAlternativeTrainingPhrasesRequest.fromBinary = function (bytes) {
            var instance = new GetAlternativeTrainingPhrasesRequest();
            GetAlternativeTrainingPhrasesRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAlternativeTrainingPhrasesRequest.refineValues = function (instance) {
            instance.config = instance.config || undefined;
            instance.trainingPhrase = instance.trainingPhrase || undefined;
            instance.intentName = instance.intentName || '';
            instance.languageCode = instance.languageCode || '';
            instance.parent = instance.parent || '';
            instance.detectEntities = instance.detectEntities || false;
            instance.similarityThreshold = instance.similarityThreshold || 0;
            instance.protectedWords = instance.protectedWords || [];
            instance.wordsToChange = instance.wordsToChange || [];
            instance.branch = instance.branch || '';
        };
        GetAlternativeTrainingPhrasesRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.config = new DataEnrichmentConfig();
                        reader.readMessage(instance.config, DataEnrichmentConfig.fromBinaryReader);
                        break;
                    case 2:
                        instance.trainingPhrase = new exports.Intent.TrainingPhrase();
                        reader.readMessage(instance.trainingPhrase, exports.Intent.TrainingPhrase.fromBinaryReader);
                        break;
                    case 3:
                        instance.intentName = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.parent = reader.readString();
                        break;
                    case 6:
                        instance.detectEntities = reader.readBool();
                        break;
                    case 7:
                        instance.similarityThreshold = reader.readFloat();
                        break;
                    case 8:
                        (instance.protectedWords = instance.protectedWords || []).push(reader.readString());
                        break;
                    case 9:
                        (instance.wordsToChange = instance.wordsToChange || []).push(reader.readString());
                        break;
                    case 10:
                        instance.branch = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAlternativeTrainingPhrasesRequest.refineValues(instance);
        };
        GetAlternativeTrainingPhrasesRequest.toBinaryWriter = function (instance, writer) {
            if (instance.config) {
                writer.writeMessage(1, instance.config, DataEnrichmentConfig.toBinaryWriter);
            }
            if (instance.trainingPhrase) {
                writer.writeMessage(2, instance.trainingPhrase, exports.Intent.TrainingPhrase.toBinaryWriter);
            }
            if (instance.intentName) {
                writer.writeString(3, instance.intentName);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.parent) {
                writer.writeString(5, instance.parent);
            }
            if (instance.detectEntities) {
                writer.writeBool(6, instance.detectEntities);
            }
            if (instance.similarityThreshold) {
                writer.writeFloat(7, instance.similarityThreshold);
            }
            if (instance.protectedWords && instance.protectedWords.length) {
                writer.writeRepeatedString(8, instance.protectedWords);
            }
            if (instance.wordsToChange && instance.wordsToChange.length) {
                writer.writeRepeatedString(9, instance.wordsToChange);
            }
            if (instance.branch) {
                writer.writeString(10, instance.branch);
            }
        };
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "config", {
            get: function () {
                return this._config;
            },
            set: function (value) {
                this._config = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "trainingPhrase", {
            get: function () {
                return this._trainingPhrase;
            },
            set: function (value) {
                this._trainingPhrase = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "intentName", {
            get: function () {
                return this._intentName;
            },
            set: function (value) {
                this._intentName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "detectEntities", {
            get: function () {
                return this._detectEntities;
            },
            set: function (value) {
                this._detectEntities = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "similarityThreshold", {
            get: function () {
                return this._similarityThreshold;
            },
            set: function (value) {
                this._similarityThreshold = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "protectedWords", {
            get: function () {
                return this._protectedWords;
            },
            set: function (value) {
                this._protectedWords = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "wordsToChange", {
            get: function () {
                return this._wordsToChange;
            },
            set: function (value) {
                this._wordsToChange = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetAlternativeTrainingPhrasesRequest.prototype, "branch", {
            get: function () {
                return this._branch;
            },
            set: function (value) {
                this._branch = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAlternativeTrainingPhrasesRequest.prototype.toObject = function () {
            return {
                config: this.config ? this.config.toObject() : undefined,
                trainingPhrase: this.trainingPhrase
                    ? this.trainingPhrase.toObject()
                    : undefined,
                intentName: this.intentName,
                languageCode: this.languageCode,
                parent: this.parent,
                detectEntities: this.detectEntities,
                similarityThreshold: this.similarityThreshold,
                protectedWords: (this.protectedWords || []).slice(),
                wordsToChange: (this.wordsToChange || []).slice(),
                branch: this.branch
            };
        };
        GetAlternativeTrainingPhrasesRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAlternativeTrainingPhrasesRequest;
    }());
    var GetSynonymsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetSynonymsRequest value
         */
        function GetSynonymsRequest(value) {
            value = value || {};
            this.config = value.config
                ? new DataEnrichmentConfig(value.config)
                : undefined;
            this.word = value.word;
            this.languageCode = value.languageCode;
            this.parent = value.parent;
            GetSynonymsRequest.refineValues(this);
        }
        GetSynonymsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetSynonymsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetSynonymsRequest.fromBinary = function (bytes) {
            var instance = new GetSynonymsRequest();
            GetSynonymsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetSynonymsRequest.refineValues = function (instance) {
            instance.config = instance.config || undefined;
            instance.word = instance.word || '';
            instance.languageCode = instance.languageCode || '';
            instance.parent = instance.parent || '';
        };
        GetSynonymsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.config = new DataEnrichmentConfig();
                        reader.readMessage(instance.config, DataEnrichmentConfig.fromBinaryReader);
                        break;
                    case 2:
                        instance.word = reader.readString();
                        break;
                    case 4:
                        instance.languageCode = reader.readString();
                        break;
                    case 5:
                        instance.parent = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetSynonymsRequest.refineValues(instance);
        };
        GetSynonymsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.config) {
                writer.writeMessage(1, instance.config, DataEnrichmentConfig.toBinaryWriter);
            }
            if (instance.word) {
                writer.writeString(2, instance.word);
            }
            if (instance.languageCode) {
                writer.writeString(4, instance.languageCode);
            }
            if (instance.parent) {
                writer.writeString(5, instance.parent);
            }
        };
        Object.defineProperty(GetSynonymsRequest.prototype, "config", {
            get: function () {
                return this._config;
            },
            set: function (value) {
                this._config = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetSynonymsRequest.prototype, "word", {
            get: function () {
                return this._word;
            },
            set: function (value) {
                this._word = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetSynonymsRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetSynonymsRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        GetSynonymsRequest.prototype.toObject = function () {
            return {
                config: this.config ? this.config.toObject() : undefined,
                word: this.word,
                languageCode: this.languageCode,
                parent: this.parent
            };
        };
        GetSynonymsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetSynonymsRequest;
    }());
    var GetSynonymsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetSynonymsResponse value
         */
        function GetSynonymsResponse(value) {
            value = value || {};
            this.synonyms = (value.synonyms || []).map(function (m) { return new Synonym(m); });
            GetSynonymsResponse.refineValues(this);
        }
        GetSynonymsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetSynonymsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetSynonymsResponse.fromBinary = function (bytes) {
            var instance = new GetSynonymsResponse();
            GetSynonymsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetSynonymsResponse.refineValues = function (instance) {
            instance.synonyms = instance.synonyms || [];
        };
        GetSynonymsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new Synonym();
                        reader.readMessage(messageInitializer1, Synonym.fromBinaryReader);
                        (instance.synonyms = instance.synonyms || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetSynonymsResponse.refineValues(instance);
        };
        GetSynonymsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.synonyms && instance.synonyms.length) {
                writer.writeRepeatedMessage(1, instance.synonyms, Synonym.toBinaryWriter);
            }
        };
        Object.defineProperty(GetSynonymsResponse.prototype, "synonyms", {
            get: function () {
                return this._synonyms;
            },
            set: function (value) {
                this._synonyms = value;
            },
            enumerable: false,
            configurable: true
        });
        GetSynonymsResponse.prototype.toObject = function () {
            return {
                synonyms: (this.synonyms || []).map(function (m) { return m.toObject(); })
            };
        };
        GetSynonymsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetSynonymsResponse;
    }());
    var Synonym = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Synonym value
         */
        function Synonym(value) {
            value = value || {};
            this.synonym = value.synonym;
            this.score = value.score;
            Synonym.refineValues(this);
        }
        Synonym.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Synonym.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Synonym.fromBinary = function (bytes) {
            var instance = new Synonym();
            Synonym.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Synonym.refineValues = function (instance) {
            instance.synonym = instance.synonym || '';
            instance.score = instance.score || 0;
        };
        Synonym.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.synonym = reader.readString();
                        break;
                    case 2:
                        instance.score = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Synonym.refineValues(instance);
        };
        Synonym.toBinaryWriter = function (instance, writer) {
            if (instance.synonym) {
                writer.writeString(1, instance.synonym);
            }
            if (instance.score) {
                writer.writeInt32(2, instance.score);
            }
        };
        Object.defineProperty(Synonym.prototype, "synonym", {
            get: function () {
                return this._synonym;
            },
            set: function (value) {
                this._synonym = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Synonym.prototype, "score", {
            get: function () {
                return this._score;
            },
            set: function (value) {
                this._score = value;
            },
            enumerable: false,
            configurable: true
        });
        Synonym.prototype.toObject = function () {
            return {
                synonym: this.synonym,
                score: this.score
            };
        };
        Synonym.prototype.toJSON = function () {
            return this.toObject();
        };
        return Synonym;
    }());
    var GetAlternativeSentencesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAlternativeSentencesResponse value
         */
        function GetAlternativeSentencesResponse(value) {
            value = value || {};
            this.alternativeSentences = (value.alternativeSentences || []).map(function (m) { return new AltSentence(m); });
            GetAlternativeSentencesResponse.refineValues(this);
        }
        GetAlternativeSentencesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAlternativeSentencesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAlternativeSentencesResponse.fromBinary = function (bytes) {
            var instance = new GetAlternativeSentencesResponse();
            GetAlternativeSentencesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAlternativeSentencesResponse.refineValues = function (instance) {
            instance.alternativeSentences = instance.alternativeSentences || [];
        };
        GetAlternativeSentencesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new AltSentence();
                        reader.readMessage(messageInitializer1, AltSentence.fromBinaryReader);
                        (instance.alternativeSentences =
                            instance.alternativeSentences || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAlternativeSentencesResponse.refineValues(instance);
        };
        GetAlternativeSentencesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.alternativeSentences && instance.alternativeSentences.length) {
                writer.writeRepeatedMessage(1, instance.alternativeSentences, AltSentence.toBinaryWriter);
            }
        };
        Object.defineProperty(GetAlternativeSentencesResponse.prototype, "alternativeSentences", {
            get: function () {
                return this._alternativeSentences;
            },
            set: function (value) {
                this._alternativeSentences = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAlternativeSentencesResponse.prototype.toObject = function () {
            return {
                alternativeSentences: (this.alternativeSentences || []).map(function (m) { return m.toObject(); })
            };
        };
        GetAlternativeSentencesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAlternativeSentencesResponse;
    }());
    var GenerateResponsesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GenerateResponsesResponse value
         */
        function GenerateResponsesResponse(value) {
            value = value || {};
            this.responses = (value.responses || []).slice();
            GenerateResponsesResponse.refineValues(this);
        }
        GenerateResponsesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GenerateResponsesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GenerateResponsesResponse.fromBinary = function (bytes) {
            var instance = new GenerateResponsesResponse();
            GenerateResponsesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GenerateResponsesResponse.refineValues = function (instance) {
            instance.responses = instance.responses || [];
        };
        GenerateResponsesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        (instance.responses = instance.responses || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            GenerateResponsesResponse.refineValues(instance);
        };
        GenerateResponsesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.responses && instance.responses.length) {
                writer.writeRepeatedString(2, instance.responses);
            }
        };
        Object.defineProperty(GenerateResponsesResponse.prototype, "responses", {
            get: function () {
                return this._responses;
            },
            set: function (value) {
                this._responses = value;
            },
            enumerable: false,
            configurable: true
        });
        GenerateResponsesResponse.prototype.toObject = function () {
            return {
                responses: (this.responses || []).slice()
            };
        };
        GenerateResponsesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GenerateResponsesResponse;
    }());
    var GenerateUserSaysResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GenerateUserSaysResponse value
         */
        function GenerateUserSaysResponse(value) {
            value = value || {};
            this.userSays = (value.userSays || []).slice();
            GenerateUserSaysResponse.refineValues(this);
        }
        GenerateUserSaysResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GenerateUserSaysResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GenerateUserSaysResponse.fromBinary = function (bytes) {
            var instance = new GenerateUserSaysResponse();
            GenerateUserSaysResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GenerateUserSaysResponse.refineValues = function (instance) {
            instance.userSays = instance.userSays || [];
        };
        GenerateUserSaysResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        (instance.userSays = instance.userSays || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            GenerateUserSaysResponse.refineValues(instance);
        };
        GenerateUserSaysResponse.toBinaryWriter = function (instance, writer) {
            if (instance.userSays && instance.userSays.length) {
                writer.writeRepeatedString(2, instance.userSays);
            }
        };
        Object.defineProperty(GenerateUserSaysResponse.prototype, "userSays", {
            get: function () {
                return this._userSays;
            },
            set: function (value) {
                this._userSays = value;
            },
            enumerable: false,
            configurable: true
        });
        GenerateUserSaysResponse.prototype.toObject = function () {
            return {
                userSays: (this.userSays || []).slice()
            };
        };
        GenerateUserSaysResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GenerateUserSaysResponse;
    }());
    var GetAlternativeTrainingPhrasesResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetAlternativeTrainingPhrasesResponse value
         */
        function GetAlternativeTrainingPhrasesResponse(value) {
            value = value || {};
            this.alternativeTrainingPhrases = (value.alternativeTrainingPhrases || []).map(function (m) { return new AltTrainingPhrase(m); });
            GetAlternativeTrainingPhrasesResponse.refineValues(this);
        }
        GetAlternativeTrainingPhrasesResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetAlternativeTrainingPhrasesResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetAlternativeTrainingPhrasesResponse.fromBinary = function (bytes) {
            var instance = new GetAlternativeTrainingPhrasesResponse();
            GetAlternativeTrainingPhrasesResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetAlternativeTrainingPhrasesResponse.refineValues = function (instance) {
            instance.alternativeTrainingPhrases =
                instance.alternativeTrainingPhrases || [];
        };
        GetAlternativeTrainingPhrasesResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new AltTrainingPhrase();
                        reader.readMessage(messageInitializer1, AltTrainingPhrase.fromBinaryReader);
                        (instance.alternativeTrainingPhrases =
                            instance.alternativeTrainingPhrases || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetAlternativeTrainingPhrasesResponse.refineValues(instance);
        };
        GetAlternativeTrainingPhrasesResponse.toBinaryWriter = function (instance, writer) {
            if (instance.alternativeTrainingPhrases &&
                instance.alternativeTrainingPhrases.length) {
                writer.writeRepeatedMessage(1, instance.alternativeTrainingPhrases, AltTrainingPhrase.toBinaryWriter);
            }
        };
        Object.defineProperty(GetAlternativeTrainingPhrasesResponse.prototype, "alternativeTrainingPhrases", {
            get: function () {
                return this._alternativeTrainingPhrases;
            },
            set: function (value) {
                this._alternativeTrainingPhrases = value;
            },
            enumerable: false,
            configurable: true
        });
        GetAlternativeTrainingPhrasesResponse.prototype.toObject = function () {
            return {
                alternativeTrainingPhrases: (this.alternativeTrainingPhrases || []).map(function (m) { return m.toObject(); })
            };
        };
        GetAlternativeTrainingPhrasesResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetAlternativeTrainingPhrasesResponse;
    }());
    var AltSentence = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AltSentence value
         */
        function AltSentence(value) {
            value = value || {};
            this.sentence = value.sentence;
            this.score = value.score;
            AltSentence.refineValues(this);
        }
        AltSentence.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AltSentence.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AltSentence.fromBinary = function (bytes) {
            var instance = new AltSentence();
            AltSentence.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AltSentence.refineValues = function (instance) {
            instance.sentence = instance.sentence || '';
            instance.score = instance.score || 0;
        };
        AltSentence.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.sentence = reader.readString();
                        break;
                    case 2:
                        instance.score = reader.readFloat();
                        break;
                    default:
                        reader.skipField();
                }
            }
            AltSentence.refineValues(instance);
        };
        AltSentence.toBinaryWriter = function (instance, writer) {
            if (instance.sentence) {
                writer.writeString(1, instance.sentence);
            }
            if (instance.score) {
                writer.writeFloat(2, instance.score);
            }
        };
        Object.defineProperty(AltSentence.prototype, "sentence", {
            get: function () {
                return this._sentence;
            },
            set: function (value) {
                this._sentence = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AltSentence.prototype, "score", {
            get: function () {
                return this._score;
            },
            set: function (value) {
                this._score = value;
            },
            enumerable: false,
            configurable: true
        });
        AltSentence.prototype.toObject = function () {
            return {
                sentence: this.sentence,
                score: this.score
            };
        };
        AltSentence.prototype.toJSON = function () {
            return this.toObject();
        };
        return AltSentence;
    }());
    var AltTrainingPhrase = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param AltTrainingPhrase value
         */
        function AltTrainingPhrase(value) {
            value = value || {};
            this.trainingPhrase = value.trainingPhrase
                ? new exports.Intent.TrainingPhrase(value.trainingPhrase)
                : undefined;
            this.score = value.score;
            AltTrainingPhrase.refineValues(this);
        }
        AltTrainingPhrase.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            AltTrainingPhrase.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        AltTrainingPhrase.fromBinary = function (bytes) {
            var instance = new AltTrainingPhrase();
            AltTrainingPhrase.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        AltTrainingPhrase.refineValues = function (instance) {
            instance.trainingPhrase = instance.trainingPhrase || undefined;
            instance.score = instance.score || 0;
        };
        AltTrainingPhrase.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.trainingPhrase = new exports.Intent.TrainingPhrase();
                        reader.readMessage(instance.trainingPhrase, exports.Intent.TrainingPhrase.fromBinaryReader);
                        break;
                    case 2:
                        instance.score = reader.readFloat();
                        break;
                    default:
                        reader.skipField();
                }
            }
            AltTrainingPhrase.refineValues(instance);
        };
        AltTrainingPhrase.toBinaryWriter = function (instance, writer) {
            if (instance.trainingPhrase) {
                writer.writeMessage(1, instance.trainingPhrase, exports.Intent.TrainingPhrase.toBinaryWriter);
            }
            if (instance.score) {
                writer.writeFloat(2, instance.score);
            }
        };
        Object.defineProperty(AltTrainingPhrase.prototype, "trainingPhrase", {
            get: function () {
                return this._trainingPhrase;
            },
            set: function (value) {
                this._trainingPhrase = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AltTrainingPhrase.prototype, "score", {
            get: function () {
                return this._score;
            },
            set: function (value) {
                this._score = value;
            },
            enumerable: false,
            configurable: true
        });
        AltTrainingPhrase.prototype.toObject = function () {
            return {
                trainingPhrase: this.trainingPhrase
                    ? this.trainingPhrase.toObject()
                    : undefined,
                score: this.score
            };
        };
        AltTrainingPhrase.prototype.toJSON = function () {
            return this.toObject();
        };
        return AltTrainingPhrase;
    }());
    var DataEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DataEnrichmentConfig value
         */
        function DataEnrichmentConfig(value) {
            value = value || {};
            this.entityEnrichment = value.entityEnrichment
                ? new EntityEnrichmentConfig(value.entityEnrichment)
                : undefined;
            this.thesaurusEnrichment = value.thesaurusEnrichment
                ? new ThesaurusEnrichmentConfig(value.thesaurusEnrichment)
                : undefined;
            this.word2vecEnrichment = value.word2vecEnrichment
                ? new Word2VecEnrichmentConfig(value.word2vecEnrichment)
                : undefined;
            this.wordNetEnrichment = value.wordNetEnrichment
                ? new WordNetAugEnrichmentConfig(value.wordNetEnrichment)
                : undefined;
            this.gpt2Enrichment = value.gpt2Enrichment
                ? new GPT2EnrichmentConfig(value.gpt2Enrichment)
                : undefined;
            this.gloveEnrichment = value.gloveEnrichment
                ? new GloVeEnrichmentConfig(value.gloveEnrichment)
                : undefined;
            this.fasttextEnrichment = value.fasttextEnrichment
                ? new FastTextEnrichmentConfig(value.fasttextEnrichment)
                : undefined;
            this.bertEnrichment = value.bertEnrichment
                ? new BertAugEnrichmentConfig(value.bertEnrichment)
                : undefined;
            this.xlnetEnrichment = value.xlnetEnrichment
                ? new XLNetAugEnrichmentConfig(value.xlnetEnrichment)
                : undefined;
            DataEnrichmentConfig.refineValues(this);
        }
        DataEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DataEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DataEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new DataEnrichmentConfig();
            DataEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DataEnrichmentConfig.refineValues = function (instance) {
            instance.entityEnrichment = instance.entityEnrichment || undefined;
            instance.thesaurusEnrichment = instance.thesaurusEnrichment || undefined;
            instance.word2vecEnrichment = instance.word2vecEnrichment || undefined;
            instance.wordNetEnrichment = instance.wordNetEnrichment || undefined;
            instance.gpt2Enrichment = instance.gpt2Enrichment || undefined;
            instance.gloveEnrichment = instance.gloveEnrichment || undefined;
            instance.fasttextEnrichment = instance.fasttextEnrichment || undefined;
            instance.bertEnrichment = instance.bertEnrichment || undefined;
            instance.xlnetEnrichment = instance.xlnetEnrichment || undefined;
        };
        DataEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.entityEnrichment = new EntityEnrichmentConfig();
                        reader.readMessage(instance.entityEnrichment, EntityEnrichmentConfig.fromBinaryReader);
                        break;
                    case 2:
                        instance.thesaurusEnrichment = new ThesaurusEnrichmentConfig();
                        reader.readMessage(instance.thesaurusEnrichment, ThesaurusEnrichmentConfig.fromBinaryReader);
                        break;
                    case 3:
                        instance.word2vecEnrichment = new Word2VecEnrichmentConfig();
                        reader.readMessage(instance.word2vecEnrichment, Word2VecEnrichmentConfig.fromBinaryReader);
                        break;
                    case 4:
                        instance.wordNetEnrichment = new WordNetAugEnrichmentConfig();
                        reader.readMessage(instance.wordNetEnrichment, WordNetAugEnrichmentConfig.fromBinaryReader);
                        break;
                    case 5:
                        instance.gpt2Enrichment = new GPT2EnrichmentConfig();
                        reader.readMessage(instance.gpt2Enrichment, GPT2EnrichmentConfig.fromBinaryReader);
                        break;
                    case 6:
                        instance.gloveEnrichment = new GloVeEnrichmentConfig();
                        reader.readMessage(instance.gloveEnrichment, GloVeEnrichmentConfig.fromBinaryReader);
                        break;
                    case 7:
                        instance.fasttextEnrichment = new FastTextEnrichmentConfig();
                        reader.readMessage(instance.fasttextEnrichment, FastTextEnrichmentConfig.fromBinaryReader);
                        break;
                    case 8:
                        instance.bertEnrichment = new BertAugEnrichmentConfig();
                        reader.readMessage(instance.bertEnrichment, BertAugEnrichmentConfig.fromBinaryReader);
                        break;
                    case 9:
                        instance.xlnetEnrichment = new XLNetAugEnrichmentConfig();
                        reader.readMessage(instance.xlnetEnrichment, XLNetAugEnrichmentConfig.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            DataEnrichmentConfig.refineValues(instance);
        };
        DataEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.entityEnrichment) {
                writer.writeMessage(1, instance.entityEnrichment, EntityEnrichmentConfig.toBinaryWriter);
            }
            if (instance.thesaurusEnrichment) {
                writer.writeMessage(2, instance.thesaurusEnrichment, ThesaurusEnrichmentConfig.toBinaryWriter);
            }
            if (instance.word2vecEnrichment) {
                writer.writeMessage(3, instance.word2vecEnrichment, Word2VecEnrichmentConfig.toBinaryWriter);
            }
            if (instance.wordNetEnrichment) {
                writer.writeMessage(4, instance.wordNetEnrichment, WordNetAugEnrichmentConfig.toBinaryWriter);
            }
            if (instance.gpt2Enrichment) {
                writer.writeMessage(5, instance.gpt2Enrichment, GPT2EnrichmentConfig.toBinaryWriter);
            }
            if (instance.gloveEnrichment) {
                writer.writeMessage(6, instance.gloveEnrichment, GloVeEnrichmentConfig.toBinaryWriter);
            }
            if (instance.fasttextEnrichment) {
                writer.writeMessage(7, instance.fasttextEnrichment, FastTextEnrichmentConfig.toBinaryWriter);
            }
            if (instance.bertEnrichment) {
                writer.writeMessage(8, instance.bertEnrichment, BertAugEnrichmentConfig.toBinaryWriter);
            }
            if (instance.xlnetEnrichment) {
                writer.writeMessage(9, instance.xlnetEnrichment, XLNetAugEnrichmentConfig.toBinaryWriter);
            }
        };
        Object.defineProperty(DataEnrichmentConfig.prototype, "entityEnrichment", {
            get: function () {
                return this._entityEnrichment;
            },
            set: function (value) {
                this._entityEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "thesaurusEnrichment", {
            get: function () {
                return this._thesaurusEnrichment;
            },
            set: function (value) {
                this._thesaurusEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "word2vecEnrichment", {
            get: function () {
                return this._word2vecEnrichment;
            },
            set: function (value) {
                this._word2vecEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "wordNetEnrichment", {
            get: function () {
                return this._wordNetEnrichment;
            },
            set: function (value) {
                this._wordNetEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "gpt2Enrichment", {
            get: function () {
                return this._gpt2Enrichment;
            },
            set: function (value) {
                this._gpt2Enrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "gloveEnrichment", {
            get: function () {
                return this._gloveEnrichment;
            },
            set: function (value) {
                this._gloveEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "fasttextEnrichment", {
            get: function () {
                return this._fasttextEnrichment;
            },
            set: function (value) {
                this._fasttextEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "bertEnrichment", {
            get: function () {
                return this._bertEnrichment;
            },
            set: function (value) {
                this._bertEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataEnrichmentConfig.prototype, "xlnetEnrichment", {
            get: function () {
                return this._xlnetEnrichment;
            },
            set: function (value) {
                this._xlnetEnrichment = value;
            },
            enumerable: false,
            configurable: true
        });
        DataEnrichmentConfig.prototype.toObject = function () {
            return {
                entityEnrichment: this.entityEnrichment
                    ? this.entityEnrichment.toObject()
                    : undefined,
                thesaurusEnrichment: this.thesaurusEnrichment
                    ? this.thesaurusEnrichment.toObject()
                    : undefined,
                word2vecEnrichment: this.word2vecEnrichment
                    ? this.word2vecEnrichment.toObject()
                    : undefined,
                wordNetEnrichment: this.wordNetEnrichment
                    ? this.wordNetEnrichment.toObject()
                    : undefined,
                gpt2Enrichment: this.gpt2Enrichment
                    ? this.gpt2Enrichment.toObject()
                    : undefined,
                gloveEnrichment: this.gloveEnrichment
                    ? this.gloveEnrichment.toObject()
                    : undefined,
                fasttextEnrichment: this.fasttextEnrichment
                    ? this.fasttextEnrichment.toObject()
                    : undefined,
                bertEnrichment: this.bertEnrichment
                    ? this.bertEnrichment.toObject()
                    : undefined,
                xlnetEnrichment: this.xlnetEnrichment
                    ? this.xlnetEnrichment.toObject()
                    : undefined
            };
        };
        DataEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return DataEnrichmentConfig;
    }());
    var EntityEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EntityEnrichmentConfig value
         */
        function EntityEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            EntityEnrichmentConfig.refineValues(this);
        }
        EntityEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EntityEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EntityEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new EntityEnrichmentConfig();
            EntityEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EntityEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        EntityEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            EntityEnrichmentConfig.refineValues(instance);
        };
        EntityEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(EntityEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EntityEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        EntityEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        EntityEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return EntityEnrichmentConfig;
    }());
    var ThesaurusEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ThesaurusEnrichmentConfig value
         */
        function ThesaurusEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            ThesaurusEnrichmentConfig.refineValues(this);
        }
        ThesaurusEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ThesaurusEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ThesaurusEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new ThesaurusEnrichmentConfig();
            ThesaurusEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ThesaurusEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        ThesaurusEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ThesaurusEnrichmentConfig.refineValues(instance);
        };
        ThesaurusEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(ThesaurusEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThesaurusEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThesaurusEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        ThesaurusEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        ThesaurusEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return ThesaurusEnrichmentConfig;
    }());
    var FastTextEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FastTextEnrichmentConfig value
         */
        function FastTextEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            FastTextEnrichmentConfig.refineValues(this);
        }
        FastTextEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FastTextEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FastTextEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new FastTextEnrichmentConfig();
            FastTextEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FastTextEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        FastTextEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            FastTextEnrichmentConfig.refineValues(instance);
        };
        FastTextEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(FastTextEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FastTextEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FastTextEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        FastTextEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        FastTextEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return FastTextEnrichmentConfig;
    }());
    var BertAugEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param BertAugEnrichmentConfig value
         */
        function BertAugEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            BertAugEnrichmentConfig.refineValues(this);
        }
        BertAugEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            BertAugEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        BertAugEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new BertAugEnrichmentConfig();
            BertAugEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        BertAugEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        BertAugEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            BertAugEnrichmentConfig.refineValues(instance);
        };
        BertAugEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(BertAugEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BertAugEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BertAugEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        BertAugEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        BertAugEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return BertAugEnrichmentConfig;
    }());
    var GloVeEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GloVeEnrichmentConfig value
         */
        function GloVeEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            GloVeEnrichmentConfig.refineValues(this);
        }
        GloVeEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GloVeEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GloVeEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new GloVeEnrichmentConfig();
            GloVeEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GloVeEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        GloVeEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GloVeEnrichmentConfig.refineValues(instance);
        };
        GloVeEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(GloVeEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GloVeEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GloVeEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        GloVeEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        GloVeEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return GloVeEnrichmentConfig;
    }());
    var GPT2EnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GPT2EnrichmentConfig value
         */
        function GPT2EnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            GPT2EnrichmentConfig.refineValues(this);
        }
        GPT2EnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GPT2EnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GPT2EnrichmentConfig.fromBinary = function (bytes) {
            var instance = new GPT2EnrichmentConfig();
            GPT2EnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GPT2EnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        GPT2EnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GPT2EnrichmentConfig.refineValues(instance);
        };
        GPT2EnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(GPT2EnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GPT2EnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GPT2EnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        GPT2EnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        GPT2EnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return GPT2EnrichmentConfig;
    }());
    var Word2VecEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Word2VecEnrichmentConfig value
         */
        function Word2VecEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            Word2VecEnrichmentConfig.refineValues(this);
        }
        Word2VecEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Word2VecEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Word2VecEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new Word2VecEnrichmentConfig();
            Word2VecEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Word2VecEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        Word2VecEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Word2VecEnrichmentConfig.refineValues(instance);
        };
        Word2VecEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(Word2VecEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Word2VecEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Word2VecEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        Word2VecEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        Word2VecEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return Word2VecEnrichmentConfig;
    }());
    var WordNetAugEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param WordNetAugEnrichmentConfig value
         */
        function WordNetAugEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            WordNetAugEnrichmentConfig.refineValues(this);
        }
        WordNetAugEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            WordNetAugEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        WordNetAugEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new WordNetAugEnrichmentConfig();
            WordNetAugEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        WordNetAugEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        WordNetAugEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            WordNetAugEnrichmentConfig.refineValues(instance);
        };
        WordNetAugEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(WordNetAugEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WordNetAugEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(WordNetAugEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        WordNetAugEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        WordNetAugEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return WordNetAugEnrichmentConfig;
    }());
    var XLNetAugEnrichmentConfig = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param XLNetAugEnrichmentConfig value
         */
        function XLNetAugEnrichmentConfig(value) {
            value = value || {};
            this.isActive = value.isActive;
            this.enrichmentFactor = value.enrichmentFactor;
            this.executionOrder = value.executionOrder;
            XLNetAugEnrichmentConfig.refineValues(this);
        }
        XLNetAugEnrichmentConfig.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            XLNetAugEnrichmentConfig.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        XLNetAugEnrichmentConfig.fromBinary = function (bytes) {
            var instance = new XLNetAugEnrichmentConfig();
            XLNetAugEnrichmentConfig.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        XLNetAugEnrichmentConfig.refineValues = function (instance) {
            instance.isActive = instance.isActive || false;
            instance.enrichmentFactor = instance.enrichmentFactor || 0;
            instance.executionOrder = instance.executionOrder || 0;
        };
        XLNetAugEnrichmentConfig.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.isActive = reader.readBool();
                        break;
                    case 2:
                        instance.enrichmentFactor = reader.readInt32();
                        break;
                    case 3:
                        instance.executionOrder = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            XLNetAugEnrichmentConfig.refineValues(instance);
        };
        XLNetAugEnrichmentConfig.toBinaryWriter = function (instance, writer) {
            if (instance.isActive) {
                writer.writeBool(1, instance.isActive);
            }
            if (instance.enrichmentFactor) {
                writer.writeInt32(2, instance.enrichmentFactor);
            }
            if (instance.executionOrder) {
                writer.writeInt32(3, instance.executionOrder);
            }
        };
        Object.defineProperty(XLNetAugEnrichmentConfig.prototype, "isActive", {
            get: function () {
                return this._isActive;
            },
            set: function (value) {
                this._isActive = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(XLNetAugEnrichmentConfig.prototype, "enrichmentFactor", {
            get: function () {
                return this._enrichmentFactor;
            },
            set: function (value) {
                this._enrichmentFactor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(XLNetAugEnrichmentConfig.prototype, "executionOrder", {
            get: function () {
                return this._executionOrder;
            },
            set: function (value) {
                this._executionOrder = value;
            },
            enumerable: false,
            configurable: true
        });
        XLNetAugEnrichmentConfig.prototype.toObject = function () {
            return {
                isActive: this.isActive,
                enrichmentFactor: this.enrichmentFactor,
                executionOrder: this.executionOrder
            };
        };
        XLNetAugEnrichmentConfig.prototype.toJSON = function () {
            return this.toObject();
        };
        return XLNetAugEnrichmentConfig;
    }());

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_SESSIONS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_SESSIONS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_SESSIONS_CLIENT_SETTINGS');

    /* tslint:disable */
    var SessionsClient = /** @class */ (function () {
        function SessionsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Sessions', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DetectIntentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.DetectIntentResponse>
         */
        SessionsClient.prototype.detectIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.detectIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DetectIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.DetectIntentResponse>>
         */
        SessionsClient.prototype.detectIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/DetectIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DetectIntentRequest,
                responseClass: DetectIntentResponse
            });
        };
        /**
         * Server streaming RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.StreamingDetectIntentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.StreamingDetectIntentResponse>
         */
        SessionsClient.prototype.streamingDetectIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.streamingDetectIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Server streaming RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.StreamingDetectIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.StreamingDetectIntentResponse>>
         */
        SessionsClient.prototype.streamingDetectIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.serverStream,
                client: this.client,
                path: '/ondewo.nlu.Sessions/StreamingDetectIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: StreamingDetectIntentRequest,
                responseClass: StreamingDetectIntentResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListSessionsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListSessionsResponse>
         */
        SessionsClient.prototype.listSessions = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listSessions$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListSessionsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListSessionsResponse>>
         */
        SessionsClient.prototype.listSessions$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/ListSessions',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListSessionsRequest,
                responseClass: ListSessionsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetSessionRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Session>
         */
        SessionsClient.prototype.getSession = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getSession$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetSessionRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Session>>
         */
        SessionsClient.prototype.getSession$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/GetSession',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetSessionRequest,
                responseClass: exports.Session
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.TrackSessionStepRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Session>
         */
        SessionsClient.prototype.trackSessionStep = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.trackSessionStep$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.TrackSessionStepRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Session>>
         */
        SessionsClient.prototype.trackSessionStep$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/TrackSessionStep',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: TrackSessionStepRequest,
                responseClass: exports.Session
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteSessionRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        SessionsClient.prototype.deleteSession = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteSession$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteSessionRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        SessionsClient.prototype.deleteSession$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/DeleteSession',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteSessionRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListSessionLabelsResponse>
         */
        SessionsClient.prototype.listSessionLabels = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listSessionLabels$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListSessionLabelsResponse>>
         */
        SessionsClient.prototype.listSessionLabels$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/ListSessionLabels',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListSessionLabelsRequest,
                responseClass: ListSessionLabelsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.AddSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Session>
         */
        SessionsClient.prototype.addSessionLabels = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.addSessionLabels$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.AddSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Session>>
         */
        SessionsClient.prototype.addSessionLabels$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/AddSessionLabels',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: AddSessionLabelsRequest,
                responseClass: exports.Session
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.RemoveSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Session>
         */
        SessionsClient.prototype.removeSessionLabels = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.removeSessionLabels$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.RemoveSessionLabelsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Session>>
         */
        SessionsClient.prototype.removeSessionLabels$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/RemoveSessionLabels',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: RemoveSessionLabelsRequest,
                responseClass: exports.Session
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListSessionReviewsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListSessionReviewsResponse>
         */
        SessionsClient.prototype.listSessionReviews = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listSessionReviews$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListSessionReviewsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListSessionReviewsResponse>>
         */
        SessionsClient.prototype.listSessionReviews$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/ListSessionReviews',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListSessionReviewsRequest,
                responseClass: ListSessionReviewsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.SessionReview>
         */
        SessionsClient.prototype.getSessionReview = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getSessionReview$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.SessionReview>>
         */
        SessionsClient.prototype.getSessionReview$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/GetSessionReview',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetSessionReviewRequest,
                responseClass: exports.SessionReview
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetLatestSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.SessionReview>
         */
        SessionsClient.prototype.getLatestSessionReview = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getLatestSessionReview$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetLatestSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.SessionReview>>
         */
        SessionsClient.prototype.getLatestSessionReview$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/GetLatestSessionReview',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetLatestSessionReviewRequest,
                responseClass: exports.SessionReview
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.SessionReview>
         */
        SessionsClient.prototype.createSessionReview = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createSessionReview$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateSessionReviewRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.SessionReview>>
         */
        SessionsClient.prototype.createSessionReview$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Sessions/CreateSessionReview',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateSessionReviewRequest,
                responseClass: exports.SessionReview
            });
        };
        return SessionsClient;
    }());
    SessionsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SessionsClient_Factory() { return new SessionsClient(i0__namespace.ɵɵinject(GRPC_SESSIONS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: SessionsClient, providedIn: "root" });
    SessionsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SessionsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_SESSIONS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_AI_SERVICES_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_AI_SERVICES_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_AI_SERVICES_CLIENT_SETTINGS');

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_USERS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_USERS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_USERS_CLIENT_SETTINGS');

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_CONTEXTS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_CONTEXTS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_CONTEXTS_CLIENT_SETTINGS');

    /* tslint:disable */
    var ContextsClient = /** @class */ (function () {
        function ContextsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Contexts', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListContextsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListContextsResponse>
         */
        ContextsClient.prototype.listContexts = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listContexts$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListContextsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListContextsResponse>>
         */
        ContextsClient.prototype.listContexts$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/ListContexts',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListContextsRequest,
                responseClass: ListContextsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetContextRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Context>
         */
        ContextsClient.prototype.getContext = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getContext$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetContextRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Context>>
         */
        ContextsClient.prototype.getContext$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/GetContext',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetContextRequest,
                responseClass: exports.Context
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateContextRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Context>
         */
        ContextsClient.prototype.createContext = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createContext$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateContextRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Context>>
         */
        ContextsClient.prototype.createContext$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/CreateContext',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateContextRequest,
                responseClass: exports.Context
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateContextRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Context>
         */
        ContextsClient.prototype.updateContext = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateContext$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateContextRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Context>>
         */
        ContextsClient.prototype.updateContext$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/UpdateContext',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateContextRequest,
                responseClass: exports.Context
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteContextRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        ContextsClient.prototype.deleteContext = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteContext$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteContextRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        ContextsClient.prototype.deleteContext$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/DeleteContext',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteContextRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteAllContextsRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        ContextsClient.prototype.deleteAllContexts = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteAllContexts$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteAllContextsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        ContextsClient.prototype.deleteAllContexts$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Contexts/DeleteAllContexts',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteAllContextsRequest,
                responseClass: Empty
            });
        };
        return ContextsClient;
    }());
    ContextsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ContextsClient_Factory() { return new ContextsClient(i0__namespace.ɵɵinject(GRPC_CONTEXTS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: ContextsClient, providedIn: "root" });
    ContextsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ContextsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_CONTEXTS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    var AiServicesClient = /** @class */ (function () {
        function AiServicesClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.AiServices', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ExtractEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ExtractEntitiesResponse>
         */
        AiServicesClient.prototype.extractEntities = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.extractEntities$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ExtractEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ExtractEntitiesResponse>>
         */
        AiServicesClient.prototype.extractEntities$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/ExtractEntities',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ExtractEntitiesRequest,
                responseClass: ExtractEntitiesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GenerateUserSaysRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GenerateUserSaysResponse>
         */
        AiServicesClient.prototype.generateUserSays = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.generateUserSays$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GenerateUserSaysRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GenerateUserSaysResponse>>
         */
        AiServicesClient.prototype.generateUserSays$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/GenerateUserSays',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GenerateUserSaysRequest,
                responseClass: GenerateUserSaysResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GenerateResponsesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GenerateResponsesResponse>
         */
        AiServicesClient.prototype.generateResponses = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.generateResponses$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GenerateResponsesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GenerateResponsesResponse>>
         */
        AiServicesClient.prototype.generateResponses$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/GenerateResponses',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GenerateResponsesRequest,
                responseClass: GenerateResponsesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetAlternativeSentencesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GetAlternativeSentencesResponse>
         */
        AiServicesClient.prototype.getAlternativeSentences = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getAlternativeSentences$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetAlternativeSentencesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetAlternativeSentencesResponse>>
         */
        AiServicesClient.prototype.getAlternativeSentences$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/GetAlternativeSentences',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetAlternativeSentencesRequest,
                responseClass: GetAlternativeSentencesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetAlternativeTrainingPhrasesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GetAlternativeTrainingPhrasesResponse>
         */
        AiServicesClient.prototype.getAlternativeTrainingPhrases = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getAlternativeTrainingPhrases$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetAlternativeTrainingPhrasesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetAlternativeTrainingPhrasesResponse>>
         */
        AiServicesClient.prototype.getAlternativeTrainingPhrases$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/GetAlternativeTrainingPhrases',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetAlternativeTrainingPhrasesRequest,
                responseClass: GetAlternativeTrainingPhrasesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetSynonymsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GetSynonymsResponse>
         */
        AiServicesClient.prototype.getSynonyms = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getSynonyms$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetSynonymsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetSynonymsResponse>>
         */
        AiServicesClient.prototype.getSynonyms$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.AiServices/GetSynonyms',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetSynonymsRequest,
                responseClass: GetSynonymsResponse
            });
        };
        return AiServicesClient;
    }());
    AiServicesClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AiServicesClient_Factory() { return new AiServicesClient(i0__namespace.ɵɵinject(GRPC_AI_SERVICES_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: AiServicesClient, providedIn: "root" });
    AiServicesClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AiServicesClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_AI_SERVICES_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    var GetUserProjectCountRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetUserProjectCountRequest value
         */
        function GetUserProjectCountRequest(value) {
            value = value || {};
            this.userId = value.userId;
            GetUserProjectCountRequest.refineValues(this);
        }
        GetUserProjectCountRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetUserProjectCountRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetUserProjectCountRequest.fromBinary = function (bytes) {
            var instance = new GetUserProjectCountRequest();
            GetUserProjectCountRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetUserProjectCountRequest.refineValues = function (instance) {
            instance.userId = instance.userId || '';
        };
        GetUserProjectCountRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.userId = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetUserProjectCountRequest.refineValues(instance);
        };
        GetUserProjectCountRequest.toBinaryWriter = function (instance, writer) {
            if (instance.userId) {
                writer.writeString(1, instance.userId);
            }
        };
        Object.defineProperty(GetUserProjectCountRequest.prototype, "userId", {
            get: function () {
                return this._userId;
            },
            set: function (value) {
                this._userId = value;
            },
            enumerable: false,
            configurable: true
        });
        GetUserProjectCountRequest.prototype.toObject = function () {
            return {
                userId: this.userId
            };
        };
        GetUserProjectCountRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetUserProjectCountRequest;
    }());

    var GetIntentCountRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetIntentCountRequest value
         */
        function GetIntentCountRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.filterByCategory = value.filterByCategory;
            GetIntentCountRequest.refineValues(this);
        }
        GetIntentCountRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetIntentCountRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetIntentCountRequest.fromBinary = function (bytes) {
            var instance = new GetIntentCountRequest();
            GetIntentCountRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetIntentCountRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.filterByCategory = instance.filterByCategory || 0;
        };
        GetIntentCountRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.filterByCategory = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetIntentCountRequest.refineValues(instance);
        };
        GetIntentCountRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.filterByCategory) {
                writer.writeEnum(2, instance.filterByCategory);
            }
        };
        Object.defineProperty(GetIntentCountRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetIntentCountRequest.prototype, "filterByCategory", {
            get: function () {
                return this._filterByCategory;
            },
            set: function (value) {
                this._filterByCategory = value;
            },
            enumerable: false,
            configurable: true
        });
        GetIntentCountRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                filterByCategory: this.filterByCategory
            };
        };
        GetIntentCountRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetIntentCountRequest;
    }());
    var GetEntityTypeCountRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetEntityTypeCountRequest value
         */
        function GetEntityTypeCountRequest(value) {
            value = value || {};
            this.parent = value.parent;
            this.filterByCategory = value.filterByCategory;
            GetEntityTypeCountRequest.refineValues(this);
        }
        GetEntityTypeCountRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetEntityTypeCountRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetEntityTypeCountRequest.fromBinary = function (bytes) {
            var instance = new GetEntityTypeCountRequest();
            GetEntityTypeCountRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetEntityTypeCountRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
            instance.filterByCategory = instance.filterByCategory || 0;
        };
        GetEntityTypeCountRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    case 2:
                        instance.filterByCategory = reader.readEnum();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetEntityTypeCountRequest.refineValues(instance);
        };
        GetEntityTypeCountRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
            if (instance.filterByCategory) {
                writer.writeEnum(2, instance.filterByCategory);
            }
        };
        Object.defineProperty(GetEntityTypeCountRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetEntityTypeCountRequest.prototype, "filterByCategory", {
            get: function () {
                return this._filterByCategory;
            },
            set: function (value) {
                this._filterByCategory = value;
            },
            enumerable: false,
            configurable: true
        });
        GetEntityTypeCountRequest.prototype.toObject = function () {
            return {
                parent: this.parent,
                filterByCategory: this.filterByCategory
            };
        };
        GetEntityTypeCountRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetEntityTypeCountRequest;
    }());
    var GetProjectStatRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetProjectStatRequest value
         */
        function GetProjectStatRequest(value) {
            value = value || {};
            this.parent = value.parent;
            GetProjectStatRequest.refineValues(this);
        }
        GetProjectStatRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetProjectStatRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetProjectStatRequest.fromBinary = function (bytes) {
            var instance = new GetProjectStatRequest();
            GetProjectStatRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetProjectStatRequest.refineValues = function (instance) {
            instance.parent = instance.parent || '';
        };
        GetProjectStatRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.parent = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetProjectStatRequest.refineValues(instance);
        };
        GetProjectStatRequest.toBinaryWriter = function (instance, writer) {
            if (instance.parent) {
                writer.writeString(1, instance.parent);
            }
        };
        Object.defineProperty(GetProjectStatRequest.prototype, "parent", {
            get: function () {
                return this._parent;
            },
            set: function (value) {
                this._parent = value;
            },
            enumerable: false,
            configurable: true
        });
        GetProjectStatRequest.prototype.toObject = function () {
            return {
                parent: this.parent
            };
        };
        GetProjectStatRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetProjectStatRequest;
    }());
    var GetProjectElementStatRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetProjectElementStatRequest value
         */
        function GetProjectElementStatRequest(value) {
            value = value || {};
            this.name = value.name;
            this.languageCode = value.languageCode;
            GetProjectElementStatRequest.refineValues(this);
        }
        GetProjectElementStatRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetProjectElementStatRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetProjectElementStatRequest.fromBinary = function (bytes) {
            var instance = new GetProjectElementStatRequest();
            GetProjectElementStatRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetProjectElementStatRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.languageCode = instance.languageCode || '';
        };
        GetProjectElementStatRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.languageCode = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetProjectElementStatRequest.refineValues(instance);
        };
        GetProjectElementStatRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.languageCode) {
                writer.writeString(2, instance.languageCode);
            }
        };
        Object.defineProperty(GetProjectElementStatRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(GetProjectElementStatRequest.prototype, "languageCode", {
            get: function () {
                return this._languageCode;
            },
            set: function (value) {
                this._languageCode = value;
            },
            enumerable: false,
            configurable: true
        });
        GetProjectElementStatRequest.prototype.toObject = function () {
            return {
                name: this.name,
                languageCode: this.languageCode
            };
        };
        GetProjectElementStatRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetProjectElementStatRequest;
    }());

    /* tslint:disable */
    var ProjectStatisticsClient = /** @class */ (function () {
        function ProjectStatisticsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.ProjectStatistics', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetIntentCountRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getIntentCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getIntentCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetIntentCountRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getIntentCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetIntentCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetIntentCountRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetEntityTypeCountRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getEntityTypeCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getEntityTypeCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetEntityTypeCountRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getEntityTypeCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetEntityTypeCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetEntityTypeCountRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getUserCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getUserCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getUserCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetUserCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectStatRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getSessionCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getSessionCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getSessionCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetSessionCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectStatRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getTrainingPhraseCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getTrainingPhraseCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getTrainingPhraseCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetTrainingPhraseCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectElementStatRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getResponseCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getResponseCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getResponseCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetResponseCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectElementStatRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getEntityValueCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getEntityValueCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getEntityValueCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetEntityValueCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectElementStatRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ProjectStatisticsClient.prototype.getEntitySynonymCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getEntitySynonymCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectElementStatRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ProjectStatisticsClient.prototype.getEntitySynonymCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectStatistics/GetEntitySynonymCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetProjectElementStatRequest,
                responseClass: StatResponse
            });
        };
        return ProjectStatisticsClient;
    }());
    ProjectStatisticsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ProjectStatisticsClient_Factory() { return new ProjectStatisticsClient(i0__namespace.ɵɵinject(GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: ProjectStatisticsClient, providedIn: "root" });
    ProjectStatisticsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ProjectStatisticsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_SERVER_STATISTICS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_SERVER_STATISTICS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_SERVER_STATISTICS_CLIENT_SETTINGS');

    /* tslint:disable */
    var ServerStatisticsClient = /** @class */ (function () {
        function ServerStatisticsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.ServerStatistics', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ServerStatisticsClient.prototype.getProjectCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getProjectCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ServerStatisticsClient.prototype.getProjectCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ServerStatistics/GetProjectCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetUserProjectCountRequest request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ServerStatisticsClient.prototype.getUserProjectCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getUserProjectCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetUserProjectCountRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ServerStatisticsClient.prototype.getUserProjectCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ServerStatistics/GetUserProjectCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetUserProjectCountRequest,
                responseClass: StatResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<ondewoNlu002.StatResponse>
         */
        ServerStatisticsClient.prototype.getUserCount = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getUserCount$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<ondewoNlu002.StatResponse>>
         */
        ServerStatisticsClient.prototype.getUserCount$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ServerStatistics/GetUserCount',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: StatResponse
            });
        };
        return ServerStatisticsClient;
    }());
    ServerStatisticsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ServerStatisticsClient_Factory() { return new ServerStatisticsClient(i0__namespace.ɵɵinject(GRPC_SERVER_STATISTICS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: ServerStatisticsClient, providedIn: "root" });
    ServerStatisticsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ServerStatisticsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_SERVER_STATISTICS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_ENTITY_TYPES_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_ENTITY_TYPES_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_ENTITY_TYPES_CLIENT_SETTINGS');

    exports.Operation = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Operation value
         */
        function Operation(value) {
            this._result = Operation.ResultCase.none;
            value = value || {};
            this.name = value.name;
            this.metadata = value.metadata
                ? new Any(value.metadata)
                : undefined;
            this.done = value.done;
            this.error = value.error ? new Status(value.error) : undefined;
            this.response = value.response
                ? new Any(value.response)
                : undefined;
            Operation.refineValues(this);
        }
        Operation.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Operation.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Operation.fromBinary = function (bytes) {
            var instance = new Operation();
            Operation.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Operation.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.metadata = instance.metadata || undefined;
            instance.done = instance.done || false;
        };
        Operation.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.metadata = new Any();
                        reader.readMessage(instance.metadata, Any.fromBinaryReader);
                        break;
                    case 3:
                        instance.done = reader.readBool();
                        break;
                    case 4:
                        instance.error = new Status();
                        reader.readMessage(instance.error, Status.fromBinaryReader);
                        break;
                    case 5:
                        instance.response = new Any();
                        reader.readMessage(instance.response, Any.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            Operation.refineValues(instance);
        };
        Operation.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.metadata) {
                writer.writeMessage(2, instance.metadata, Any.toBinaryWriter);
            }
            if (instance.done) {
                writer.writeBool(3, instance.done);
            }
            if (instance.error) {
                writer.writeMessage(4, instance.error, Status.toBinaryWriter);
            }
            if (instance.response) {
                writer.writeMessage(5, instance.response, Any.toBinaryWriter);
            }
        };
        Object.defineProperty(Operation.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Operation.prototype, "metadata", {
            get: function () {
                return this._metadata;
            },
            set: function (value) {
                this._metadata = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Operation.prototype, "done", {
            get: function () {
                return this._done;
            },
            set: function (value) {
                this._done = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Operation.prototype, "error", {
            get: function () {
                return this._error;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._response = undefined;
                    this._result = Operation.ResultCase.error;
                }
                this._error = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Operation.prototype, "response", {
            get: function () {
                return this._response;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._error = undefined;
                    this._result = Operation.ResultCase.response;
                }
                this._response = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Operation.prototype, "result", {
            get: function () {
                return this._result;
            },
            enumerable: false,
            configurable: true
        });
        Operation.prototype.toObject = function () {
            return {
                name: this.name,
                metadata: this.metadata ? this.metadata.toObject() : undefined,
                done: this.done,
                error: this.error ? this.error.toObject() : undefined,
                response: this.response ? this.response.toObject() : undefined
            };
        };
        Operation.prototype.toJSON = function () {
            return this.toObject();
        };
        return Operation;
    }());
    (function (Operation) {
        var ResultCase;
        (function (ResultCase) {
            ResultCase[ResultCase["none"] = 0] = "none";
            ResultCase[ResultCase["error"] = 1] = "error";
            ResultCase[ResultCase["response"] = 2] = "response";
        })(ResultCase = Operation.ResultCase || (Operation.ResultCase = {}));
    })(exports.Operation || (exports.Operation = {}));
    var GetOperationRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GetOperationRequest value
         */
        function GetOperationRequest(value) {
            value = value || {};
            this.name = value.name;
            GetOperationRequest.refineValues(this);
        }
        GetOperationRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GetOperationRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GetOperationRequest.fromBinary = function (bytes) {
            var instance = new GetOperationRequest();
            GetOperationRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GetOperationRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        GetOperationRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            GetOperationRequest.refineValues(instance);
        };
        GetOperationRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(GetOperationRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        GetOperationRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        GetOperationRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return GetOperationRequest;
    }());
    var ListOperationsRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListOperationsRequest value
         */
        function ListOperationsRequest(value) {
            value = value || {};
            this.name = value.name;
            this.filter = value.filter;
            this.pageSize = value.pageSize;
            this.pageToken = value.pageToken;
            ListOperationsRequest.refineValues(this);
        }
        ListOperationsRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListOperationsRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListOperationsRequest.fromBinary = function (bytes) {
            var instance = new ListOperationsRequest();
            ListOperationsRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListOperationsRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.filter = instance.filter || '';
            instance.pageSize = instance.pageSize || 0;
            instance.pageToken = instance.pageToken || '';
        };
        ListOperationsRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 4:
                        instance.name = reader.readString();
                        break;
                    case 1:
                        instance.filter = reader.readString();
                        break;
                    case 2:
                        instance.pageSize = reader.readInt32();
                        break;
                    case 3:
                        instance.pageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListOperationsRequest.refineValues(instance);
        };
        ListOperationsRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(4, instance.name);
            }
            if (instance.filter) {
                writer.writeString(1, instance.filter);
            }
            if (instance.pageSize) {
                writer.writeInt32(2, instance.pageSize);
            }
            if (instance.pageToken) {
                writer.writeString(3, instance.pageToken);
            }
        };
        Object.defineProperty(ListOperationsRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListOperationsRequest.prototype, "filter", {
            get: function () {
                return this._filter;
            },
            set: function (value) {
                this._filter = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListOperationsRequest.prototype, "pageSize", {
            get: function () {
                return this._pageSize;
            },
            set: function (value) {
                this._pageSize = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListOperationsRequest.prototype, "pageToken", {
            get: function () {
                return this._pageToken;
            },
            set: function (value) {
                this._pageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListOperationsRequest.prototype.toObject = function () {
            return {
                name: this.name,
                filter: this.filter,
                pageSize: this.pageSize,
                pageToken: this.pageToken
            };
        };
        ListOperationsRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListOperationsRequest;
    }());
    var ListOperationsResponse = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ListOperationsResponse value
         */
        function ListOperationsResponse(value) {
            value = value || {};
            this.operations = (value.operations || []).map(function (m) { return new exports.Operation(m); });
            this.nextPageToken = value.nextPageToken;
            ListOperationsResponse.refineValues(this);
        }
        ListOperationsResponse.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ListOperationsResponse.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ListOperationsResponse.fromBinary = function (bytes) {
            var instance = new ListOperationsResponse();
            ListOperationsResponse.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ListOperationsResponse.refineValues = function (instance) {
            instance.operations = instance.operations || [];
            instance.nextPageToken = instance.nextPageToken || '';
        };
        ListOperationsResponse.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.Operation();
                        reader.readMessage(messageInitializer1, exports.Operation.fromBinaryReader);
                        (instance.operations = instance.operations || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.nextPageToken = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            ListOperationsResponse.refineValues(instance);
        };
        ListOperationsResponse.toBinaryWriter = function (instance, writer) {
            if (instance.operations && instance.operations.length) {
                writer.writeRepeatedMessage(1, instance.operations, exports.Operation.toBinaryWriter);
            }
            if (instance.nextPageToken) {
                writer.writeString(2, instance.nextPageToken);
            }
        };
        Object.defineProperty(ListOperationsResponse.prototype, "operations", {
            get: function () {
                return this._operations;
            },
            set: function (value) {
                this._operations = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListOperationsResponse.prototype, "nextPageToken", {
            get: function () {
                return this._nextPageToken;
            },
            set: function (value) {
                this._nextPageToken = value;
            },
            enumerable: false,
            configurable: true
        });
        ListOperationsResponse.prototype.toObject = function () {
            return {
                operations: (this.operations || []).map(function (m) { return m.toObject(); }),
                nextPageToken: this.nextPageToken
            };
        };
        ListOperationsResponse.prototype.toJSON = function () {
            return this.toObject();
        };
        return ListOperationsResponse;
    }());
    var CancelOperationRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CancelOperationRequest value
         */
        function CancelOperationRequest(value) {
            value = value || {};
            this.name = value.name;
            CancelOperationRequest.refineValues(this);
        }
        CancelOperationRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CancelOperationRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CancelOperationRequest.fromBinary = function (bytes) {
            var instance = new CancelOperationRequest();
            CancelOperationRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CancelOperationRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        CancelOperationRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CancelOperationRequest.refineValues(instance);
        };
        CancelOperationRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(CancelOperationRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        CancelOperationRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        CancelOperationRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return CancelOperationRequest;
    }());
    var DeleteOperationRequest = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DeleteOperationRequest value
         */
        function DeleteOperationRequest(value) {
            value = value || {};
            this.name = value.name;
            DeleteOperationRequest.refineValues(this);
        }
        DeleteOperationRequest.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DeleteOperationRequest.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DeleteOperationRequest.fromBinary = function (bytes) {
            var instance = new DeleteOperationRequest();
            DeleteOperationRequest.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DeleteOperationRequest.refineValues = function (instance) {
            instance.name = instance.name || '';
        };
        DeleteOperationRequest.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            DeleteOperationRequest.refineValues(instance);
        };
        DeleteOperationRequest.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
        };
        Object.defineProperty(DeleteOperationRequest.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        DeleteOperationRequest.prototype.toObject = function () {
            return {
                name: this.name
            };
        };
        DeleteOperationRequest.prototype.toJSON = function () {
            return this.toObject();
        };
        return DeleteOperationRequest;
    }());

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_INTENTS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_INTENTS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_INTENTS_CLIENT_SETTINGS');

    /* tslint:disable */
    var IntentsClient = /** @class */ (function () {
        function IntentsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Intents', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListIntentsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListIntentsResponse>
         */
        IntentsClient.prototype.listIntents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listIntents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListIntentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListIntentsResponse>>
         */
        IntentsClient.prototype.listIntents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/ListIntents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListIntentsRequest,
                responseClass: ListIntentsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetIntentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Intent>
         */
        IntentsClient.prototype.getIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Intent>>
         */
        IntentsClient.prototype.getIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/GetIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetIntentRequest,
                responseClass: exports.Intent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateIntentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Intent>
         */
        IntentsClient.prototype.createIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Intent>>
         */
        IntentsClient.prototype.createIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/CreateIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateIntentRequest,
                responseClass: exports.Intent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateIntentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Intent>
         */
        IntentsClient.prototype.updateIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Intent>>
         */
        IntentsClient.prototype.updateIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/UpdateIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateIntentRequest,
                responseClass: exports.Intent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteIntentRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf004.Empty>
         */
        IntentsClient.prototype.deleteIntent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteIntent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteIntentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf004.Empty>>
         */
        IntentsClient.prototype.deleteIntent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/DeleteIntent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteIntentRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchUpdateIntentsRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning003.Operation>
         */
        IntentsClient.prototype.batchUpdateIntents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchUpdateIntents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchUpdateIntentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning003.Operation>>
         */
        IntentsClient.prototype.batchUpdateIntents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/BatchUpdateIntents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.BatchUpdateIntentsRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchDeleteIntentsRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning003.Operation>
         */
        IntentsClient.prototype.batchDeleteIntents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchDeleteIntents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchDeleteIntentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning003.Operation>>
         */
        IntentsClient.prototype.batchDeleteIntents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Intents/BatchDeleteIntents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BatchDeleteIntentsRequest,
                responseClass: exports.Operation
            });
        };
        return IntentsClient;
    }());
    IntentsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function IntentsClient_Factory() { return new IntentsClient(i0__namespace.ɵɵinject(GRPC_INTENTS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: IntentsClient, providedIn: "root" });
    IntentsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    IntentsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_INTENTS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    var UsersClient = /** @class */ (function () {
        function UsersClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Users', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateUserRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.User>
         */
        UsersClient.prototype.createUser = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createUser$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateUserRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.User>>
         */
        UsersClient.prototype.createUser$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/CreateUser',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateUserRequest,
                responseClass: User
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.User>
         */
        UsersClient.prototype.getUser = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getUser$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.User>>
         */
        UsersClient.prototype.getUser$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/GetUser',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.GetUserRequest,
                responseClass: User
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.UserInfo>
         */
        UsersClient.prototype.getUserInfo = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getUserInfo$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.UserInfo>>
         */
        UsersClient.prototype.getUserInfo$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/GetUserInfo',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.GetUserRequest,
                responseClass: exports.UserInfo
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        UsersClient.prototype.deleteUser = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteUser$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetUserRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        UsersClient.prototype.deleteUser$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/DeleteUser',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.GetUserRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateUserRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.User>
         */
        UsersClient.prototype.updateUser = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateUser$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateUserRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.User>>
         */
        UsersClient.prototype.updateUser$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/UpdateUser',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateUserRequest,
                responseClass: User
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListUsersRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListUsersResponse>
         */
        UsersClient.prototype.listUsers = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listUsers$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListUsersRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListUsersResponse>>
         */
        UsersClient.prototype.listUsers$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/ListUsers',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListUsersRequest,
                responseClass: ListUsersResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListUsersRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListUserInfosResponse>
         */
        UsersClient.prototype.listUserInfos = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listUserInfos$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListUsersRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListUserInfosResponse>>
         */
        UsersClient.prototype.listUserInfos$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/ListUserInfos',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListUsersRequest,
                responseClass: ListUserInfosResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ServerRole>
         */
        UsersClient.prototype.createServerRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createServerRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ServerRole>>
         */
        UsersClient.prototype.createServerRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/CreateServerRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateServerRoleRequest,
                responseClass: ServerRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ServerRole>
         */
        UsersClient.prototype.getServerRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getServerRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ServerRole>>
         */
        UsersClient.prototype.getServerRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/GetServerRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.GetServerRoleRequest,
                responseClass: ServerRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        UsersClient.prototype.deleteServerRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteServerRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        UsersClient.prototype.deleteServerRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/DeleteServerRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteServerRoleRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ServerRole>
         */
        UsersClient.prototype.updateServerRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateServerRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateServerRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ServerRole>>
         */
        UsersClient.prototype.updateServerRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/UpdateServerRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateServerRoleRequest,
                responseClass: ServerRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListServerRolesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListServerRolesResponse>
         */
        UsersClient.prototype.listServerRoles = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listServerRoles$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListServerRolesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListServerRolesResponse>>
         */
        UsersClient.prototype.listServerRoles$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/ListServerRoles',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListServerRolesRequest,
                responseClass: ListServerRolesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListServerPermissionsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListServerPermissionsResponse>
         */
        UsersClient.prototype.listServerPermissions = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listServerPermissions$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListServerPermissionsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListServerPermissionsResponse>>
         */
        UsersClient.prototype.listServerPermissions$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/ListServerPermissions',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListServerPermissionsRequest,
                responseClass: ListServerPermissionsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.LoginRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.LoginResponse>
         */
        UsersClient.prototype.login = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.login$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.LoginRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.LoginResponse>>
         */
        UsersClient.prototype.login$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/Login',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: LoginRequest,
                responseClass: LoginResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<googleProtobuf001.Empty>
         */
        UsersClient.prototype.checkLogin = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.checkLogin$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf001.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf001.Empty>>
         */
        UsersClient.prototype.checkLogin$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Users/CheckLogin',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: Empty
            });
        };
        return UsersClient;
    }());
    UsersClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UsersClient_Factory() { return new UsersClient(i0__namespace.ɵɵinject(GRPC_USERS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: UsersClient, providedIn: "root" });
    UsersClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    UsersClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_USERS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_PROJECT_ROLES_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_PROJECT_ROLES_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_PROJECT_ROLES_CLIENT_SETTINGS');

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_AGENTS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_AGENTS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_AGENTS_CLIENT_SETTINGS');

    /* tslint:disable */
    var AgentsClient = /** @class */ (function () {
        function AgentsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.Agents', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateAgentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Agent>
         */
        AgentsClient.prototype.createAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Agent>>
         */
        AgentsClient.prototype.createAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/CreateAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateAgentRequest,
                responseClass: Agent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateAgentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Agent>
         */
        AgentsClient.prototype.updateAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Agent>>
         */
        AgentsClient.prototype.updateAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/UpdateAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateAgentRequest,
                responseClass: Agent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetAgentRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Agent>
         */
        AgentsClient.prototype.getAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Agent>>
         */
        AgentsClient.prototype.getAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/GetAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetAgentRequest,
                responseClass: Agent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteAgentRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.deleteAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.deleteAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/DeleteAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteAgentRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf003.Empty request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.deleteAllAgents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteAllAgents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf003.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.deleteAllAgents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/DeleteAllAgents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListAgentsResponse>
         */
        AgentsClient.prototype.listAgents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listAgents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListAgentsResponse>>
         */
        AgentsClient.prototype.listAgents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ListAgents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListAgentsRequest,
                responseClass: ListAgentsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListAgentsOfUserResponse>
         */
        AgentsClient.prototype.listAgentsOfUser = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listAgentsOfUser$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListAgentsOfUserResponse>>
         */
        AgentsClient.prototype.listAgentsOfUser$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ListAgentsOfUser',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListAgentsRequest,
                responseClass: ListAgentsOfUserResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListAgentsResponse>
         */
        AgentsClient.prototype.listAllAgents = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listAllAgents$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListAgentsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListAgentsResponse>>
         */
        AgentsClient.prototype.listAllAgents$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ListAllAgents',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListAgentsRequest,
                responseClass: ListAgentsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.AddUserToProjectRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.addUserToProject = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.addUserToProject$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.AddUserToProjectRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.addUserToProject$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/AddUserToProject',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: AddUserToProjectRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.RemoveUserFromProjectRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.removeUserFromProject = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.removeUserFromProject$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.RemoveUserFromProjectRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.removeUserFromProject$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/RemoveUserFromProject',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: RemoveUserFromProjectRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListUsersInProjectRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListUsersInProjectResponse>
         */
        AgentsClient.prototype.listUsersInProject = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listUsersInProject$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListUsersInProjectRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListUsersInProjectResponse>>
         */
        AgentsClient.prototype.listUsersInProject$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ListUsersInProject',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListUsersInProjectRequest,
                responseClass: ListUsersInProjectResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param googleProtobuf003.Empty request
         * @param Metadata metadata
         * @return Observable<thisProto.GetPlatformInfoResponse>
         */
        AgentsClient.prototype.getPlatformInfo = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getPlatformInfo$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param googleProtobuf003.Empty request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetPlatformInfoResponse>>
         */
        AgentsClient.prototype.getPlatformInfo$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/GetPlatformInfo',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: Empty,
                responseClass: GetPlatformInfoResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListProjectPermissionsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListProjectPermissionsResponse>
         */
        AgentsClient.prototype.listProjectPermissions = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listProjectPermissions$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListProjectPermissionsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListProjectPermissionsResponse>>
         */
        AgentsClient.prototype.listProjectPermissions$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ListProjectPermissions',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListProjectPermissionsRequest,
                responseClass: ListProjectPermissionsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.TrainAgentRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.trainAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.trainAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.TrainAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.trainAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/TrainAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: TrainAgentRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BuildCacheRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.buildCache = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.buildCache$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BuildCacheRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.buildCache$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/BuildCache',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BuildCacheRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ExportAgentRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.exportAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.exportAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ExportAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.exportAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ExportAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ExportAgentRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ImportAgentRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.importAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.importAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ImportAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.importAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ImportAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.ImportAgentRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.OptimizeRankingMatchRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.optimizeRankingMatch = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.optimizeRankingMatch$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.OptimizeRankingMatchRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.optimizeRankingMatch$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/OptimizeRankingMatch',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: OptimizeRankingMatchRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.RestoreAgentRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        AgentsClient.prototype.restoreAgent = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.restoreAgent$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.RestoreAgentRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        AgentsClient.prototype.restoreAgent$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/RestoreAgent',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.RestoreAgentRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetAgentStatisticsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.GetAgentStatisticsResponse>
         */
        AgentsClient.prototype.getAgentStatistics = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getAgentStatistics$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetAgentStatisticsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.GetAgentStatisticsResponse>>
         */
        AgentsClient.prototype.getAgentStatistics$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/GetAgentStatistics',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetAgentStatisticsRequest,
                responseClass: GetAgentStatisticsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.SetAgentStatusRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Agent>
         */
        AgentsClient.prototype.setAgentStatus = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.setAgentStatus$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.SetAgentStatusRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Agent>>
         */
        AgentsClient.prototype.setAgentStatus$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/SetAgentStatus',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: SetAgentStatusRequest,
                responseClass: Agent
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.SetResourcesRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.setResources = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.setResources$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.SetResourcesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.setResources$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/SetResources',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: SetResourcesRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteResourcesRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf003.Empty>
         */
        AgentsClient.prototype.deleteResources = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteResources$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteResourcesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf003.Empty>>
         */
        AgentsClient.prototype.deleteResources$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/DeleteResources',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteResourcesRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ExportResourcesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ExportResourcesResponse>
         */
        AgentsClient.prototype.exportResources = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.exportResources$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ExportResourcesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ExportResourcesResponse>>
         */
        AgentsClient.prototype.exportResources$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.Agents/ExportResources',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ExportResourcesRequest,
                responseClass: ExportResourcesResponse
            });
        };
        return AgentsClient;
    }());
    AgentsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AgentsClient_Factory() { return new AgentsClient(i0__namespace.ɵɵinject(GRPC_AGENTS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: AgentsClient, providedIn: "root" });
    AgentsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AgentsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_AGENTS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    var EntityTypesClient = /** @class */ (function () {
        function EntityTypesClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.EntityTypes', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListEntityTypesResponse>
         */
        EntityTypesClient.prototype.listEntityTypes = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listEntityTypes$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListEntityTypesResponse>>
         */
        EntityTypesClient.prototype.listEntityTypes$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/ListEntityTypes',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListEntityTypesRequest,
                responseClass: ListEntityTypesResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.EntityType>
         */
        EntityTypesClient.prototype.getEntityType = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getEntityType$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.EntityType>>
         */
        EntityTypesClient.prototype.getEntityType$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/GetEntityType',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetEntityTypeRequest,
                responseClass: exports.EntityType
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.EntityType>
         */
        EntityTypesClient.prototype.createEntityType = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createEntityType$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.EntityType>>
         */
        EntityTypesClient.prototype.createEntityType$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/CreateEntityType',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateEntityTypeRequest,
                responseClass: exports.EntityType
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.EntityType>
         */
        EntityTypesClient.prototype.updateEntityType = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateEntityType$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.EntityType>>
         */
        EntityTypesClient.prototype.updateEntityType$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/UpdateEntityType',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateEntityTypeRequest,
                responseClass: exports.EntityType
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf002.Empty>
         */
        EntityTypesClient.prototype.deleteEntityType = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteEntityType$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteEntityTypeRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf002.Empty>>
         */
        EntityTypesClient.prototype.deleteEntityType$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/DeleteEntityType',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteEntityTypeRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchUpdateEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        EntityTypesClient.prototype.batchUpdateEntityTypes = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchUpdateEntityTypes$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchUpdateEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        EntityTypesClient.prototype.batchUpdateEntityTypes$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/BatchUpdateEntityTypes',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.BatchUpdateEntityTypesRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchDeleteEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        EntityTypesClient.prototype.batchDeleteEntityTypes = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchDeleteEntityTypes$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchDeleteEntityTypesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        EntityTypesClient.prototype.batchDeleteEntityTypes$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/BatchDeleteEntityTypes',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BatchDeleteEntityTypesRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchCreateEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        EntityTypesClient.prototype.batchCreateEntities = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchCreateEntities$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchCreateEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        EntityTypesClient.prototype.batchCreateEntities$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/BatchCreateEntities',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BatchCreateEntitiesRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchUpdateEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        EntityTypesClient.prototype.batchUpdateEntities = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchUpdateEntities$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchUpdateEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        EntityTypesClient.prototype.batchUpdateEntities$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/BatchUpdateEntities',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BatchUpdateEntitiesRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.BatchDeleteEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<googleLongrunning001.Operation>
         */
        EntityTypesClient.prototype.batchDeleteEntities = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.batchDeleteEntities$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.BatchDeleteEntitiesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleLongrunning001.Operation>>
         */
        EntityTypesClient.prototype.batchDeleteEntities$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.EntityTypes/BatchDeleteEntities',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: BatchDeleteEntitiesRequest,
                responseClass: exports.Operation
            });
        };
        return EntityTypesClient;
    }());
    EntityTypesClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EntityTypesClient_Factory() { return new EntityTypesClient(i0__namespace.ɵɵinject(GRPC_ENTITY_TYPES_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: EntityTypesClient, providedIn: "root" });
    EntityTypesClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EntityTypesClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_ENTITY_TYPES_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    /* tslint:disable */
    var ProjectRolesClient = /** @class */ (function () {
        function ProjectRolesClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('ondewo.nlu.ProjectRoles', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CreateProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ProjectRole>
         */
        ProjectRolesClient.prototype.createProjectRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.createProjectRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CreateProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ProjectRole>>
         */
        ProjectRolesClient.prototype.createProjectRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectRoles/CreateProjectRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CreateProjectRoleRequest,
                responseClass: ProjectRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ProjectRole>
         */
        ProjectRolesClient.prototype.getProjectRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getProjectRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ProjectRole>>
         */
        ProjectRolesClient.prototype.getProjectRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectRoles/GetProjectRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: exports.GetProjectRoleRequest,
                responseClass: ProjectRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf002.Empty>
         */
        ProjectRolesClient.prototype.deleteProjectRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteProjectRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf002.Empty>>
         */
        ProjectRolesClient.prototype.deleteProjectRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectRoles/DeleteProjectRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteProjectRoleRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.UpdateProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ProjectRole>
         */
        ProjectRolesClient.prototype.updateProjectRole = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.updateProjectRole$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.UpdateProjectRoleRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ProjectRole>>
         */
        ProjectRolesClient.prototype.updateProjectRole$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectRoles/UpdateProjectRole',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: UpdateProjectRoleRequest,
                responseClass: ProjectRole
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListProjectRolesRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListProjectRolesResponse>
         */
        ProjectRolesClient.prototype.listProjectRoles = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listProjectRoles$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListProjectRolesRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListProjectRolesResponse>>
         */
        ProjectRolesClient.prototype.listProjectRoles$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/ondewo.nlu.ProjectRoles/ListProjectRoles',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListProjectRolesRequest,
                responseClass: ListProjectRolesResponse
            });
        };
        return ProjectRolesClient;
    }());
    ProjectRolesClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ProjectRolesClient_Factory() { return new ProjectRolesClient(i0__namespace.ɵɵinject(GRPC_PROJECT_ROLES_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: ProjectRolesClient, providedIn: "root" });
    ProjectRolesClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ProjectRolesClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_PROJECT_ROLES_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    var Timestamp = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Timestamp value
         */
        function Timestamp(value) {
            value = value || {};
            this.seconds = value.seconds;
            this.nanos = value.nanos;
            Timestamp.refineValues(this);
        }
        Timestamp.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Timestamp.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Timestamp.fromBinary = function (bytes) {
            var instance = new Timestamp();
            Timestamp.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Timestamp.fromDate = function (date) {
            var timestamp = new Timestamp();
            timestamp.fromDate(date);
            return timestamp;
        };
        Timestamp.fromISOString = function (isoDate) {
            var timestamp = new Timestamp();
            timestamp.fromISOString(isoDate);
            return timestamp;
        };
        Timestamp.refineValues = function (instance) {
            instance.seconds = instance.seconds || '0';
            instance.nanos = instance.nanos || 0;
        };
        Timestamp.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.seconds = reader.readInt64String();
                        break;
                    case 2:
                        instance.nanos = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Timestamp.refineValues(instance);
        };
        Timestamp.toBinaryWriter = function (instance, writer) {
            if (instance.seconds) {
                writer.writeInt64String(1, instance.seconds);
            }
            if (instance.nanos) {
                writer.writeInt32(2, instance.nanos);
            }
        };
        Object.defineProperty(Timestamp.prototype, "seconds", {
            get: function () {
                return this._seconds;
            },
            set: function (value) {
                this._seconds = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Timestamp.prototype, "nanos", {
            get: function () {
                return this._nanos;
            },
            set: function (value) {
                this._nanos = value;
            },
            enumerable: false,
            configurable: true
        });
        Timestamp.prototype.toObject = function () {
            return {
                seconds: this.seconds,
                nanos: this.nanos
            };
        };
        Timestamp.prototype.toJSON = function () {
            return this.toObject();
        };
        Timestamp.prototype.fromDate = function (date) {
            this.seconds = '' + Math.floor(date.getTime() / 1e3);
            this.nanos = date.getMilliseconds() * 1e6;
        };
        Timestamp.prototype.toDate = function () {
            return new Date(parseInt(this.seconds || '0') * 1e3 + (this.nanos || 0) / 1e6);
        };
        Timestamp.prototype.fromISOString = function (isoDate) {
            this.fromDate(new Date(isoDate));
        };
        Timestamp.prototype.toISOString = function () {
            return this.toDate().toISOString();
        };
        return Timestamp;
    }());

    exports.OperationMetadata = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OperationMetadata value
         */
        function OperationMetadata(value) {
            value = value || {};
            this.status = value.status;
            this.parentOperationName = value.parentOperationName;
            this.subOperationNames = (value.subOperationNames || []).slice();
            this.createTime = value.createTime
                ? new Timestamp(value.createTime)
                : undefined;
            this.startTime = value.startTime
                ? new Timestamp(value.startTime)
                : undefined;
            this.endTime = value.endTime
                ? new Timestamp(value.endTime)
                : undefined;
            this.isCancellationRequested = value.isCancellationRequested;
            this.cancelCommand = value.cancelCommand;
            this.userIdCreated = value.userIdCreated;
            this.userIdCancelled = value.userIdCancelled;
            this.projectParent = value.projectParent;
            this.operationType = value.operationType;
            this.hostName = value.hostName;
            this.numReruns = value.numReruns;
            this.maxNumReruns = value.maxNumReruns;
            OperationMetadata.refineValues(this);
        }
        OperationMetadata.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OperationMetadata.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OperationMetadata.fromBinary = function (bytes) {
            var instance = new OperationMetadata();
            OperationMetadata.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OperationMetadata.refineValues = function (instance) {
            instance.status = instance.status || 0;
            instance.parentOperationName = instance.parentOperationName || '';
            instance.subOperationNames = instance.subOperationNames || [];
            instance.createTime = instance.createTime || undefined;
            instance.startTime = instance.startTime || undefined;
            instance.endTime = instance.endTime || undefined;
            instance.isCancellationRequested =
                instance.isCancellationRequested || false;
            instance.cancelCommand = instance.cancelCommand || '';
            instance.userIdCreated = instance.userIdCreated || '';
            instance.userIdCancelled = instance.userIdCancelled || '';
            instance.projectParent = instance.projectParent || '';
            instance.operationType = instance.operationType || 0;
            instance.hostName = instance.hostName || '';
            instance.numReruns = instance.numReruns || 0;
            instance.maxNumReruns = instance.maxNumReruns || 0;
        };
        OperationMetadata.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.status = reader.readEnum();
                        break;
                    case 2:
                        instance.parentOperationName = reader.readString();
                        break;
                    case 3:
                        (instance.subOperationNames = instance.subOperationNames || []).push(reader.readString());
                        break;
                    case 4:
                        instance.createTime = new Timestamp();
                        reader.readMessage(instance.createTime, Timestamp.fromBinaryReader);
                        break;
                    case 5:
                        instance.startTime = new Timestamp();
                        reader.readMessage(instance.startTime, Timestamp.fromBinaryReader);
                        break;
                    case 6:
                        instance.endTime = new Timestamp();
                        reader.readMessage(instance.endTime, Timestamp.fromBinaryReader);
                        break;
                    case 7:
                        instance.isCancellationRequested = reader.readBool();
                        break;
                    case 8:
                        instance.cancelCommand = reader.readString();
                        break;
                    case 9:
                        instance.userIdCreated = reader.readString();
                        break;
                    case 10:
                        instance.userIdCancelled = reader.readString();
                        break;
                    case 11:
                        instance.projectParent = reader.readString();
                        break;
                    case 12:
                        instance.operationType = reader.readEnum();
                        break;
                    case 13:
                        instance.hostName = reader.readString();
                        break;
                    case 14:
                        instance.numReruns = reader.readInt32();
                        break;
                    case 15:
                        instance.maxNumReruns = reader.readInt32();
                        break;
                    default:
                        reader.skipField();
                }
            }
            OperationMetadata.refineValues(instance);
        };
        OperationMetadata.toBinaryWriter = function (instance, writer) {
            if (instance.status) {
                writer.writeEnum(1, instance.status);
            }
            if (instance.parentOperationName) {
                writer.writeString(2, instance.parentOperationName);
            }
            if (instance.subOperationNames && instance.subOperationNames.length) {
                writer.writeRepeatedString(3, instance.subOperationNames);
            }
            if (instance.createTime) {
                writer.writeMessage(4, instance.createTime, Timestamp.toBinaryWriter);
            }
            if (instance.startTime) {
                writer.writeMessage(5, instance.startTime, Timestamp.toBinaryWriter);
            }
            if (instance.endTime) {
                writer.writeMessage(6, instance.endTime, Timestamp.toBinaryWriter);
            }
            if (instance.isCancellationRequested) {
                writer.writeBool(7, instance.isCancellationRequested);
            }
            if (instance.cancelCommand) {
                writer.writeString(8, instance.cancelCommand);
            }
            if (instance.userIdCreated) {
                writer.writeString(9, instance.userIdCreated);
            }
            if (instance.userIdCancelled) {
                writer.writeString(10, instance.userIdCancelled);
            }
            if (instance.projectParent) {
                writer.writeString(11, instance.projectParent);
            }
            if (instance.operationType) {
                writer.writeEnum(12, instance.operationType);
            }
            if (instance.hostName) {
                writer.writeString(13, instance.hostName);
            }
            if (instance.numReruns) {
                writer.writeInt32(14, instance.numReruns);
            }
            if (instance.maxNumReruns) {
                writer.writeInt32(15, instance.maxNumReruns);
            }
        };
        Object.defineProperty(OperationMetadata.prototype, "status", {
            get: function () {
                return this._status;
            },
            set: function (value) {
                this._status = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "parentOperationName", {
            get: function () {
                return this._parentOperationName;
            },
            set: function (value) {
                this._parentOperationName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "subOperationNames", {
            get: function () {
                return this._subOperationNames;
            },
            set: function (value) {
                this._subOperationNames = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "createTime", {
            get: function () {
                return this._createTime;
            },
            set: function (value) {
                this._createTime = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "startTime", {
            get: function () {
                return this._startTime;
            },
            set: function (value) {
                this._startTime = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "endTime", {
            get: function () {
                return this._endTime;
            },
            set: function (value) {
                this._endTime = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "isCancellationRequested", {
            get: function () {
                return this._isCancellationRequested;
            },
            set: function (value) {
                this._isCancellationRequested = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "cancelCommand", {
            get: function () {
                return this._cancelCommand;
            },
            set: function (value) {
                this._cancelCommand = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "userIdCreated", {
            get: function () {
                return this._userIdCreated;
            },
            set: function (value) {
                this._userIdCreated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "userIdCancelled", {
            get: function () {
                return this._userIdCancelled;
            },
            set: function (value) {
                this._userIdCancelled = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "projectParent", {
            get: function () {
                return this._projectParent;
            },
            set: function (value) {
                this._projectParent = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "operationType", {
            get: function () {
                return this._operationType;
            },
            set: function (value) {
                this._operationType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "hostName", {
            get: function () {
                return this._hostName;
            },
            set: function (value) {
                this._hostName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "numReruns", {
            get: function () {
                return this._numReruns;
            },
            set: function (value) {
                this._numReruns = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OperationMetadata.prototype, "maxNumReruns", {
            get: function () {
                return this._maxNumReruns;
            },
            set: function (value) {
                this._maxNumReruns = value;
            },
            enumerable: false,
            configurable: true
        });
        OperationMetadata.prototype.toObject = function () {
            return {
                status: this.status,
                parentOperationName: this.parentOperationName,
                subOperationNames: (this.subOperationNames || []).slice(),
                createTime: this.createTime ? this.createTime.toObject() : undefined,
                startTime: this.startTime ? this.startTime.toObject() : undefined,
                endTime: this.endTime ? this.endTime.toObject() : undefined,
                isCancellationRequested: this.isCancellationRequested,
                cancelCommand: this.cancelCommand,
                userIdCreated: this.userIdCreated,
                userIdCancelled: this.userIdCancelled,
                projectParent: this.projectParent,
                operationType: this.operationType,
                hostName: this.hostName,
                numReruns: this.numReruns,
                maxNumReruns: this.maxNumReruns
            };
        };
        OperationMetadata.prototype.toJSON = function () {
            return this.toObject();
        };
        return OperationMetadata;
    }());
    (function (OperationMetadata) {
        var Status;
        (function (Status) {
            Status[Status["statusUnspecified"] = 0] = "statusUnspecified";
            Status[Status["notStarted"] = 1] = "notStarted";
            Status[Status["inProgress"] = 2] = "inProgress";
            Status[Status["done"] = 3] = "done";
            Status[Status["cancelled"] = 4] = "cancelled";
            Status[Status["failed"] = 5] = "failed";
        })(Status = OperationMetadata.Status || (OperationMetadata.Status = {}));
        var OperationType;
        (function (OperationType) {
            OperationType[OperationType["operationTypeUnspecified"] = 0] = "operationTypeUnspecified";
            OperationType[OperationType["createAgent"] = 1] = "createAgent";
            OperationType[OperationType["importAgent"] = 2] = "importAgent";
            OperationType[OperationType["exportAgent"] = 3] = "exportAgent";
            OperationType[OperationType["deleteAgent"] = 4] = "deleteAgent";
            OperationType[OperationType["restoreAgent"] = 5] = "restoreAgent";
            OperationType[OperationType["buildAgentCache"] = 6] = "buildAgentCache";
            OperationType[OperationType["trainAgent"] = 7] = "trainAgent";
        })(OperationType = OperationMetadata.OperationType || (OperationMetadata.OperationType = {}));
    })(exports.OperationMetadata || (exports.OperationMetadata = {}));

    var FileDescriptorSet = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FileDescriptorSet value
         */
        function FileDescriptorSet(value) {
            value = value || {};
            this.file = (value.file || []).map(function (m) { return new FileDescriptorProto(m); });
            FileDescriptorSet.refineValues(this);
        }
        FileDescriptorSet.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FileDescriptorSet.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FileDescriptorSet.fromBinary = function (bytes) {
            var instance = new FileDescriptorSet();
            FileDescriptorSet.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FileDescriptorSet.refineValues = function (instance) {
            instance.file = instance.file || [];
        };
        FileDescriptorSet.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new FileDescriptorProto();
                        reader.readMessage(messageInitializer1, FileDescriptorProto.fromBinaryReader);
                        (instance.file = instance.file || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            FileDescriptorSet.refineValues(instance);
        };
        FileDescriptorSet.toBinaryWriter = function (instance, writer) {
            if (instance.file && instance.file.length) {
                writer.writeRepeatedMessage(1, instance.file, FileDescriptorProto.toBinaryWriter);
            }
        };
        Object.defineProperty(FileDescriptorSet.prototype, "file", {
            get: function () {
                return this._file;
            },
            set: function (value) {
                this._file = value;
            },
            enumerable: false,
            configurable: true
        });
        FileDescriptorSet.prototype.toObject = function () {
            return {
                file: (this.file || []).map(function (m) { return m.toObject(); })
            };
        };
        FileDescriptorSet.prototype.toJSON = function () {
            return this.toObject();
        };
        return FileDescriptorSet;
    }());
    var FileDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FileDescriptorProto value
         */
        function FileDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.package = value.package;
            this.dependency = (value.dependency || []).slice();
            this.publicDependency = (value.publicDependency || []).slice();
            this.weakDependency = (value.weakDependency || []).slice();
            this.messageType = (value.messageType || []).map(function (m) { return new exports.DescriptorProto(m); });
            this.enumType = (value.enumType || []).map(function (m) { return new exports.EnumDescriptorProto(m); });
            this.service = (value.service || []).map(function (m) { return new ServiceDescriptorProto(m); });
            this.extension = (value.extension || []).map(function (m) { return new exports.FieldDescriptorProto(m); });
            this.options = value.options ? new exports.FileOptions(value.options) : undefined;
            this.sourceCodeInfo = value.sourceCodeInfo
                ? new exports.SourceCodeInfo(value.sourceCodeInfo)
                : undefined;
            this.syntax = value.syntax;
            FileDescriptorProto.refineValues(this);
        }
        FileDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FileDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FileDescriptorProto.fromBinary = function (bytes) {
            var instance = new FileDescriptorProto();
            FileDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FileDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.package = instance.package || '';
            instance.dependency = instance.dependency || [];
            instance.publicDependency = instance.publicDependency || [];
            instance.weakDependency = instance.weakDependency || [];
            instance.messageType = instance.messageType || [];
            instance.enumType = instance.enumType || [];
            instance.service = instance.service || [];
            instance.extension = instance.extension || [];
            instance.options = instance.options || undefined;
            instance.sourceCodeInfo = instance.sourceCodeInfo || undefined;
            instance.syntax = instance.syntax || '';
        };
        FileDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.package = reader.readString();
                        break;
                    case 3:
                        (instance.dependency = instance.dependency || []).push(reader.readString());
                        break;
                    case 10:
                        (instance.publicDependency = instance.publicDependency || []).push(reader.readInt32());
                        break;
                    case 11:
                        (instance.weakDependency = instance.weakDependency || []).push(reader.readInt32());
                        break;
                    case 4:
                        var messageInitializer4 = new exports.DescriptorProto();
                        reader.readMessage(messageInitializer4, exports.DescriptorProto.fromBinaryReader);
                        (instance.messageType = instance.messageType || []).push(messageInitializer4);
                        break;
                    case 5:
                        var messageInitializer5 = new exports.EnumDescriptorProto();
                        reader.readMessage(messageInitializer5, exports.EnumDescriptorProto.fromBinaryReader);
                        (instance.enumType = instance.enumType || []).push(messageInitializer5);
                        break;
                    case 6:
                        var messageInitializer6 = new ServiceDescriptorProto();
                        reader.readMessage(messageInitializer6, ServiceDescriptorProto.fromBinaryReader);
                        (instance.service = instance.service || []).push(messageInitializer6);
                        break;
                    case 7:
                        var messageInitializer7 = new exports.FieldDescriptorProto();
                        reader.readMessage(messageInitializer7, exports.FieldDescriptorProto.fromBinaryReader);
                        (instance.extension = instance.extension || []).push(messageInitializer7);
                        break;
                    case 8:
                        instance.options = new exports.FileOptions();
                        reader.readMessage(instance.options, exports.FileOptions.fromBinaryReader);
                        break;
                    case 9:
                        instance.sourceCodeInfo = new exports.SourceCodeInfo();
                        reader.readMessage(instance.sourceCodeInfo, exports.SourceCodeInfo.fromBinaryReader);
                        break;
                    case 12:
                        instance.syntax = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            FileDescriptorProto.refineValues(instance);
        };
        FileDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.package) {
                writer.writeString(2, instance.package);
            }
            if (instance.dependency && instance.dependency.length) {
                writer.writeRepeatedString(3, instance.dependency);
            }
            if (instance.publicDependency && instance.publicDependency.length) {
                writer.writeRepeatedInt32(10, instance.publicDependency);
            }
            if (instance.weakDependency && instance.weakDependency.length) {
                writer.writeRepeatedInt32(11, instance.weakDependency);
            }
            if (instance.messageType && instance.messageType.length) {
                writer.writeRepeatedMessage(4, instance.messageType, exports.DescriptorProto.toBinaryWriter);
            }
            if (instance.enumType && instance.enumType.length) {
                writer.writeRepeatedMessage(5, instance.enumType, exports.EnumDescriptorProto.toBinaryWriter);
            }
            if (instance.service && instance.service.length) {
                writer.writeRepeatedMessage(6, instance.service, ServiceDescriptorProto.toBinaryWriter);
            }
            if (instance.extension && instance.extension.length) {
                writer.writeRepeatedMessage(7, instance.extension, exports.FieldDescriptorProto.toBinaryWriter);
            }
            if (instance.options) {
                writer.writeMessage(8, instance.options, exports.FileOptions.toBinaryWriter);
            }
            if (instance.sourceCodeInfo) {
                writer.writeMessage(9, instance.sourceCodeInfo, exports.SourceCodeInfo.toBinaryWriter);
            }
            if (instance.syntax) {
                writer.writeString(12, instance.syntax);
            }
        };
        Object.defineProperty(FileDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "package", {
            get: function () {
                return this._package;
            },
            set: function (value) {
                this._package = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "dependency", {
            get: function () {
                return this._dependency;
            },
            set: function (value) {
                this._dependency = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "publicDependency", {
            get: function () {
                return this._publicDependency;
            },
            set: function (value) {
                this._publicDependency = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "weakDependency", {
            get: function () {
                return this._weakDependency;
            },
            set: function (value) {
                this._weakDependency = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "messageType", {
            get: function () {
                return this._messageType;
            },
            set: function (value) {
                this._messageType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "enumType", {
            get: function () {
                return this._enumType;
            },
            set: function (value) {
                this._enumType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "service", {
            get: function () {
                return this._service;
            },
            set: function (value) {
                this._service = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "extension", {
            get: function () {
                return this._extension;
            },
            set: function (value) {
                this._extension = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "sourceCodeInfo", {
            get: function () {
                return this._sourceCodeInfo;
            },
            set: function (value) {
                this._sourceCodeInfo = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileDescriptorProto.prototype, "syntax", {
            get: function () {
                return this._syntax;
            },
            set: function (value) {
                this._syntax = value;
            },
            enumerable: false,
            configurable: true
        });
        FileDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                package: this.package,
                dependency: (this.dependency || []).slice(),
                publicDependency: (this.publicDependency || []).slice(),
                weakDependency: (this.weakDependency || []).slice(),
                messageType: (this.messageType || []).map(function (m) { return m.toObject(); }),
                enumType: (this.enumType || []).map(function (m) { return m.toObject(); }),
                service: (this.service || []).map(function (m) { return m.toObject(); }),
                extension: (this.extension || []).map(function (m) { return m.toObject(); }),
                options: this.options ? this.options.toObject() : undefined,
                sourceCodeInfo: this.sourceCodeInfo
                    ? this.sourceCodeInfo.toObject()
                    : undefined,
                syntax: this.syntax
            };
        };
        FileDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return FileDescriptorProto;
    }());
    exports.DescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param DescriptorProto value
         */
        function DescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.field = (value.field || []).map(function (m) { return new exports.FieldDescriptorProto(m); });
            this.extension = (value.extension || []).map(function (m) { return new exports.FieldDescriptorProto(m); });
            this.nestedType = (value.nestedType || []).map(function (m) { return new DescriptorProto(m); });
            this.enumType = (value.enumType || []).map(function (m) { return new exports.EnumDescriptorProto(m); });
            this.extensionRange = (value.extensionRange || []).map(function (m) { return new DescriptorProto.ExtensionRange(m); });
            this.oneofDecl = (value.oneofDecl || []).map(function (m) { return new OneofDescriptorProto(m); });
            this.options = value.options
                ? new MessageOptions(value.options)
                : undefined;
            this.reservedRange = (value.reservedRange || []).map(function (m) { return new DescriptorProto.ReservedRange(m); });
            this.reservedName = (value.reservedName || []).slice();
            DescriptorProto.refineValues(this);
        }
        DescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            DescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        DescriptorProto.fromBinary = function (bytes) {
            var instance = new DescriptorProto();
            DescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        DescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.field = instance.field || [];
            instance.extension = instance.extension || [];
            instance.nestedType = instance.nestedType || [];
            instance.enumType = instance.enumType || [];
            instance.extensionRange = instance.extensionRange || [];
            instance.oneofDecl = instance.oneofDecl || [];
            instance.options = instance.options || undefined;
            instance.reservedRange = instance.reservedRange || [];
            instance.reservedName = instance.reservedName || [];
        };
        DescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new exports.FieldDescriptorProto();
                        reader.readMessage(messageInitializer2, exports.FieldDescriptorProto.fromBinaryReader);
                        (instance.field = instance.field || []).push(messageInitializer2);
                        break;
                    case 6:
                        var messageInitializer6 = new exports.FieldDescriptorProto();
                        reader.readMessage(messageInitializer6, exports.FieldDescriptorProto.fromBinaryReader);
                        (instance.extension = instance.extension || []).push(messageInitializer6);
                        break;
                    case 3:
                        var messageInitializer3 = new DescriptorProto();
                        reader.readMessage(messageInitializer3, DescriptorProto.fromBinaryReader);
                        (instance.nestedType = instance.nestedType || []).push(messageInitializer3);
                        break;
                    case 4:
                        var messageInitializer4 = new exports.EnumDescriptorProto();
                        reader.readMessage(messageInitializer4, exports.EnumDescriptorProto.fromBinaryReader);
                        (instance.enumType = instance.enumType || []).push(messageInitializer4);
                        break;
                    case 5:
                        var messageInitializer5 = new DescriptorProto.ExtensionRange();
                        reader.readMessage(messageInitializer5, DescriptorProto.ExtensionRange.fromBinaryReader);
                        (instance.extensionRange = instance.extensionRange || []).push(messageInitializer5);
                        break;
                    case 8:
                        var messageInitializer8 = new OneofDescriptorProto();
                        reader.readMessage(messageInitializer8, OneofDescriptorProto.fromBinaryReader);
                        (instance.oneofDecl = instance.oneofDecl || []).push(messageInitializer8);
                        break;
                    case 7:
                        instance.options = new MessageOptions();
                        reader.readMessage(instance.options, MessageOptions.fromBinaryReader);
                        break;
                    case 9:
                        var messageInitializer9 = new DescriptorProto.ReservedRange();
                        reader.readMessage(messageInitializer9, DescriptorProto.ReservedRange.fromBinaryReader);
                        (instance.reservedRange = instance.reservedRange || []).push(messageInitializer9);
                        break;
                    case 10:
                        (instance.reservedName = instance.reservedName || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            DescriptorProto.refineValues(instance);
        };
        DescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.field && instance.field.length) {
                writer.writeRepeatedMessage(2, instance.field, exports.FieldDescriptorProto.toBinaryWriter);
            }
            if (instance.extension && instance.extension.length) {
                writer.writeRepeatedMessage(6, instance.extension, exports.FieldDescriptorProto.toBinaryWriter);
            }
            if (instance.nestedType && instance.nestedType.length) {
                writer.writeRepeatedMessage(3, instance.nestedType, DescriptorProto.toBinaryWriter);
            }
            if (instance.enumType && instance.enumType.length) {
                writer.writeRepeatedMessage(4, instance.enumType, exports.EnumDescriptorProto.toBinaryWriter);
            }
            if (instance.extensionRange && instance.extensionRange.length) {
                writer.writeRepeatedMessage(5, instance.extensionRange, DescriptorProto.ExtensionRange.toBinaryWriter);
            }
            if (instance.oneofDecl && instance.oneofDecl.length) {
                writer.writeRepeatedMessage(8, instance.oneofDecl, OneofDescriptorProto.toBinaryWriter);
            }
            if (instance.options) {
                writer.writeMessage(7, instance.options, MessageOptions.toBinaryWriter);
            }
            if (instance.reservedRange && instance.reservedRange.length) {
                writer.writeRepeatedMessage(9, instance.reservedRange, DescriptorProto.ReservedRange.toBinaryWriter);
            }
            if (instance.reservedName && instance.reservedName.length) {
                writer.writeRepeatedString(10, instance.reservedName);
            }
        };
        Object.defineProperty(DescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "field", {
            get: function () {
                return this._field;
            },
            set: function (value) {
                this._field = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "extension", {
            get: function () {
                return this._extension;
            },
            set: function (value) {
                this._extension = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "nestedType", {
            get: function () {
                return this._nestedType;
            },
            set: function (value) {
                this._nestedType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "enumType", {
            get: function () {
                return this._enumType;
            },
            set: function (value) {
                this._enumType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "extensionRange", {
            get: function () {
                return this._extensionRange;
            },
            set: function (value) {
                this._extensionRange = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "oneofDecl", {
            get: function () {
                return this._oneofDecl;
            },
            set: function (value) {
                this._oneofDecl = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "reservedRange", {
            get: function () {
                return this._reservedRange;
            },
            set: function (value) {
                this._reservedRange = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DescriptorProto.prototype, "reservedName", {
            get: function () {
                return this._reservedName;
            },
            set: function (value) {
                this._reservedName = value;
            },
            enumerable: false,
            configurable: true
        });
        DescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                field: (this.field || []).map(function (m) { return m.toObject(); }),
                extension: (this.extension || []).map(function (m) { return m.toObject(); }),
                nestedType: (this.nestedType || []).map(function (m) { return m.toObject(); }),
                enumType: (this.enumType || []).map(function (m) { return m.toObject(); }),
                extensionRange: (this.extensionRange || []).map(function (m) { return m.toObject(); }),
                oneofDecl: (this.oneofDecl || []).map(function (m) { return m.toObject(); }),
                options: this.options ? this.options.toObject() : undefined,
                reservedRange: (this.reservedRange || []).map(function (m) { return m.toObject(); }),
                reservedName: (this.reservedName || []).slice()
            };
        };
        DescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return DescriptorProto;
    }());
    (function (DescriptorProto) {
        var ExtensionRange = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param ExtensionRange value
             */
            function ExtensionRange(value) {
                value = value || {};
                this.start = value.start;
                this.end = value.end;
                this.options = value.options
                    ? new ExtensionRangeOptions(value.options)
                    : undefined;
                ExtensionRange.refineValues(this);
            }
            ExtensionRange.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                ExtensionRange.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            ExtensionRange.fromBinary = function (bytes) {
                var instance = new ExtensionRange();
                ExtensionRange.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            ExtensionRange.refineValues = function (instance) {
                instance.start = instance.start || 0;
                instance.end = instance.end || 0;
                instance.options = instance.options || undefined;
            };
            ExtensionRange.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.start = reader.readInt32();
                            break;
                        case 2:
                            instance.end = reader.readInt32();
                            break;
                        case 3:
                            instance.options = new ExtensionRangeOptions();
                            reader.readMessage(instance.options, ExtensionRangeOptions.fromBinaryReader);
                            break;
                        default:
                            reader.skipField();
                    }
                }
                ExtensionRange.refineValues(instance);
            };
            ExtensionRange.toBinaryWriter = function (instance, writer) {
                if (instance.start) {
                    writer.writeInt32(1, instance.start);
                }
                if (instance.end) {
                    writer.writeInt32(2, instance.end);
                }
                if (instance.options) {
                    writer.writeMessage(3, instance.options, ExtensionRangeOptions.toBinaryWriter);
                }
            };
            Object.defineProperty(ExtensionRange.prototype, "start", {
                get: function () {
                    return this._start;
                },
                set: function (value) {
                    this._start = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(ExtensionRange.prototype, "end", {
                get: function () {
                    return this._end;
                },
                set: function (value) {
                    this._end = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(ExtensionRange.prototype, "options", {
                get: function () {
                    return this._options;
                },
                set: function (value) {
                    this._options = value;
                },
                enumerable: false,
                configurable: true
            });
            ExtensionRange.prototype.toObject = function () {
                return {
                    start: this.start,
                    end: this.end,
                    options: this.options ? this.options.toObject() : undefined
                };
            };
            ExtensionRange.prototype.toJSON = function () {
                return this.toObject();
            };
            return ExtensionRange;
        }());
        DescriptorProto.ExtensionRange = ExtensionRange;
        var ReservedRange = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param ReservedRange value
             */
            function ReservedRange(value) {
                value = value || {};
                this.start = value.start;
                this.end = value.end;
                ReservedRange.refineValues(this);
            }
            ReservedRange.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                ReservedRange.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            ReservedRange.fromBinary = function (bytes) {
                var instance = new ReservedRange();
                ReservedRange.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            ReservedRange.refineValues = function (instance) {
                instance.start = instance.start || 0;
                instance.end = instance.end || 0;
            };
            ReservedRange.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.start = reader.readInt32();
                            break;
                        case 2:
                            instance.end = reader.readInt32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                ReservedRange.refineValues(instance);
            };
            ReservedRange.toBinaryWriter = function (instance, writer) {
                if (instance.start) {
                    writer.writeInt32(1, instance.start);
                }
                if (instance.end) {
                    writer.writeInt32(2, instance.end);
                }
            };
            Object.defineProperty(ReservedRange.prototype, "start", {
                get: function () {
                    return this._start;
                },
                set: function (value) {
                    this._start = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(ReservedRange.prototype, "end", {
                get: function () {
                    return this._end;
                },
                set: function (value) {
                    this._end = value;
                },
                enumerable: false,
                configurable: true
            });
            ReservedRange.prototype.toObject = function () {
                return {
                    start: this.start,
                    end: this.end
                };
            };
            ReservedRange.prototype.toJSON = function () {
                return this.toObject();
            };
            return ReservedRange;
        }());
        DescriptorProto.ReservedRange = ReservedRange;
    })(exports.DescriptorProto || (exports.DescriptorProto = {}));
    var ExtensionRangeOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ExtensionRangeOptions value
         */
        function ExtensionRangeOptions(value) {
            value = value || {};
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            ExtensionRangeOptions.refineValues(this);
        }
        ExtensionRangeOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ExtensionRangeOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ExtensionRangeOptions.fromBinary = function (bytes) {
            var instance = new ExtensionRangeOptions();
            ExtensionRangeOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ExtensionRangeOptions.refineValues = function (instance) {
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        ExtensionRangeOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ExtensionRangeOptions.refineValues(instance);
        };
        ExtensionRangeOptions.toBinaryWriter = function (instance, writer) {
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(ExtensionRangeOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        ExtensionRangeOptions.prototype.toObject = function () {
            return {
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        ExtensionRangeOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return ExtensionRangeOptions;
    }());
    exports.FieldDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FieldDescriptorProto value
         */
        function FieldDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.number = value.number;
            this.label = value.label;
            this.type = value.type;
            this.typeName = value.typeName;
            this.extendee = value.extendee;
            this.defaultValue = value.defaultValue;
            this.oneofIndex = value.oneofIndex;
            this.jsonName = value.jsonName;
            this.options = value.options ? new exports.FieldOptions(value.options) : undefined;
            this.proto3Optional = value.proto3Optional;
            FieldDescriptorProto.refineValues(this);
        }
        FieldDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FieldDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FieldDescriptorProto.fromBinary = function (bytes) {
            var instance = new FieldDescriptorProto();
            FieldDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FieldDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.number = instance.number || 0;
            instance.label = instance.label || 0;
            instance.type = instance.type || 0;
            instance.typeName = instance.typeName || '';
            instance.extendee = instance.extendee || '';
            instance.defaultValue = instance.defaultValue || '';
            instance.oneofIndex = instance.oneofIndex || 0;
            instance.jsonName = instance.jsonName || '';
            instance.options = instance.options || undefined;
            instance.proto3Optional = instance.proto3Optional || false;
        };
        FieldDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 3:
                        instance.number = reader.readInt32();
                        break;
                    case 4:
                        instance.label = reader.readEnum();
                        break;
                    case 5:
                        instance.type = reader.readEnum();
                        break;
                    case 6:
                        instance.typeName = reader.readString();
                        break;
                    case 2:
                        instance.extendee = reader.readString();
                        break;
                    case 7:
                        instance.defaultValue = reader.readString();
                        break;
                    case 9:
                        instance.oneofIndex = reader.readInt32();
                        break;
                    case 10:
                        instance.jsonName = reader.readString();
                        break;
                    case 8:
                        instance.options = new exports.FieldOptions();
                        reader.readMessage(instance.options, exports.FieldOptions.fromBinaryReader);
                        break;
                    case 17:
                        instance.proto3Optional = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            FieldDescriptorProto.refineValues(instance);
        };
        FieldDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.number) {
                writer.writeInt32(3, instance.number);
            }
            if (instance.label) {
                writer.writeEnum(4, instance.label);
            }
            if (instance.type) {
                writer.writeEnum(5, instance.type);
            }
            if (instance.typeName) {
                writer.writeString(6, instance.typeName);
            }
            if (instance.extendee) {
                writer.writeString(2, instance.extendee);
            }
            if (instance.defaultValue) {
                writer.writeString(7, instance.defaultValue);
            }
            if (instance.oneofIndex) {
                writer.writeInt32(9, instance.oneofIndex);
            }
            if (instance.jsonName) {
                writer.writeString(10, instance.jsonName);
            }
            if (instance.options) {
                writer.writeMessage(8, instance.options, exports.FieldOptions.toBinaryWriter);
            }
            if (instance.proto3Optional) {
                writer.writeBool(17, instance.proto3Optional);
            }
        };
        Object.defineProperty(FieldDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "number", {
            get: function () {
                return this._number;
            },
            set: function (value) {
                this._number = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "label", {
            get: function () {
                return this._label;
            },
            set: function (value) {
                this._label = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "type", {
            get: function () {
                return this._type;
            },
            set: function (value) {
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "typeName", {
            get: function () {
                return this._typeName;
            },
            set: function (value) {
                this._typeName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "extendee", {
            get: function () {
                return this._extendee;
            },
            set: function (value) {
                this._extendee = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "defaultValue", {
            get: function () {
                return this._defaultValue;
            },
            set: function (value) {
                this._defaultValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "oneofIndex", {
            get: function () {
                return this._oneofIndex;
            },
            set: function (value) {
                this._oneofIndex = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "jsonName", {
            get: function () {
                return this._jsonName;
            },
            set: function (value) {
                this._jsonName = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldDescriptorProto.prototype, "proto3Optional", {
            get: function () {
                return this._proto3Optional;
            },
            set: function (value) {
                this._proto3Optional = value;
            },
            enumerable: false,
            configurable: true
        });
        FieldDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                number: this.number,
                label: this.label,
                type: this.type,
                typeName: this.typeName,
                extendee: this.extendee,
                defaultValue: this.defaultValue,
                oneofIndex: this.oneofIndex,
                jsonName: this.jsonName,
                options: this.options ? this.options.toObject() : undefined,
                proto3Optional: this.proto3Optional
            };
        };
        FieldDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return FieldDescriptorProto;
    }());
    (function (FieldDescriptorProto) {
        var Type;
        (function (Type) {
            Type[Type["typeDouble"] = 1] = "typeDouble";
            Type[Type["typeFloat"] = 2] = "typeFloat";
            Type[Type["typeInt64"] = 3] = "typeInt64";
            Type[Type["typeUint64"] = 4] = "typeUint64";
            Type[Type["typeInt32"] = 5] = "typeInt32";
            Type[Type["typeFixed64"] = 6] = "typeFixed64";
            Type[Type["typeFixed32"] = 7] = "typeFixed32";
            Type[Type["typeBool"] = 8] = "typeBool";
            Type[Type["typeString"] = 9] = "typeString";
            Type[Type["typeGroup"] = 10] = "typeGroup";
            Type[Type["typeMessage"] = 11] = "typeMessage";
            Type[Type["typeBytes"] = 12] = "typeBytes";
            Type[Type["typeUint32"] = 13] = "typeUint32";
            Type[Type["typeEnum"] = 14] = "typeEnum";
            Type[Type["typeSfixed32"] = 15] = "typeSfixed32";
            Type[Type["typeSfixed64"] = 16] = "typeSfixed64";
            Type[Type["typeSint32"] = 17] = "typeSint32";
            Type[Type["typeSint64"] = 18] = "typeSint64";
        })(Type = FieldDescriptorProto.Type || (FieldDescriptorProto.Type = {}));
        var Label;
        (function (Label) {
            Label[Label["labelOptional"] = 1] = "labelOptional";
            Label[Label["labelRequired"] = 2] = "labelRequired";
            Label[Label["labelRepeated"] = 3] = "labelRepeated";
        })(Label = FieldDescriptorProto.Label || (FieldDescriptorProto.Label = {}));
    })(exports.FieldDescriptorProto || (exports.FieldDescriptorProto = {}));
    var OneofDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OneofDescriptorProto value
         */
        function OneofDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.options = value.options ? new OneofOptions(value.options) : undefined;
            OneofDescriptorProto.refineValues(this);
        }
        OneofDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OneofDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OneofDescriptorProto.fromBinary = function (bytes) {
            var instance = new OneofDescriptorProto();
            OneofDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OneofDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.options = instance.options || undefined;
        };
        OneofDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.options = new OneofOptions();
                        reader.readMessage(instance.options, OneofOptions.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            OneofDescriptorProto.refineValues(instance);
        };
        OneofDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.options) {
                writer.writeMessage(2, instance.options, OneofOptions.toBinaryWriter);
            }
        };
        Object.defineProperty(OneofDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OneofDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        OneofDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                options: this.options ? this.options.toObject() : undefined
            };
        };
        OneofDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return OneofDescriptorProto;
    }());
    exports.EnumDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EnumDescriptorProto value
         */
        function EnumDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.value = (value.value || []).map(function (m) { return new EnumValueDescriptorProto(m); });
            this.options = value.options ? new EnumOptions(value.options) : undefined;
            this.reservedRange = (value.reservedRange || []).map(function (m) { return new EnumDescriptorProto.EnumReservedRange(m); });
            this.reservedName = (value.reservedName || []).slice();
            EnumDescriptorProto.refineValues(this);
        }
        EnumDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EnumDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EnumDescriptorProto.fromBinary = function (bytes) {
            var instance = new EnumDescriptorProto();
            EnumDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EnumDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.value = instance.value || [];
            instance.options = instance.options || undefined;
            instance.reservedRange = instance.reservedRange || [];
            instance.reservedName = instance.reservedName || [];
        };
        EnumDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new EnumValueDescriptorProto();
                        reader.readMessage(messageInitializer2, EnumValueDescriptorProto.fromBinaryReader);
                        (instance.value = instance.value || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.options = new EnumOptions();
                        reader.readMessage(instance.options, EnumOptions.fromBinaryReader);
                        break;
                    case 4:
                        var messageInitializer4 = new EnumDescriptorProto.EnumReservedRange();
                        reader.readMessage(messageInitializer4, EnumDescriptorProto.EnumReservedRange.fromBinaryReader);
                        (instance.reservedRange = instance.reservedRange || []).push(messageInitializer4);
                        break;
                    case 5:
                        (instance.reservedName = instance.reservedName || []).push(reader.readString());
                        break;
                    default:
                        reader.skipField();
                }
            }
            EnumDescriptorProto.refineValues(instance);
        };
        EnumDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.value && instance.value.length) {
                writer.writeRepeatedMessage(2, instance.value, EnumValueDescriptorProto.toBinaryWriter);
            }
            if (instance.options) {
                writer.writeMessage(3, instance.options, EnumOptions.toBinaryWriter);
            }
            if (instance.reservedRange && instance.reservedRange.length) {
                writer.writeRepeatedMessage(4, instance.reservedRange, EnumDescriptorProto.EnumReservedRange.toBinaryWriter);
            }
            if (instance.reservedName && instance.reservedName.length) {
                writer.writeRepeatedString(5, instance.reservedName);
            }
        };
        Object.defineProperty(EnumDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumDescriptorProto.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (value) {
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumDescriptorProto.prototype, "reservedRange", {
            get: function () {
                return this._reservedRange;
            },
            set: function (value) {
                this._reservedRange = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumDescriptorProto.prototype, "reservedName", {
            get: function () {
                return this._reservedName;
            },
            set: function (value) {
                this._reservedName = value;
            },
            enumerable: false,
            configurable: true
        });
        EnumDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                value: (this.value || []).map(function (m) { return m.toObject(); }),
                options: this.options ? this.options.toObject() : undefined,
                reservedRange: (this.reservedRange || []).map(function (m) { return m.toObject(); }),
                reservedName: (this.reservedName || []).slice()
            };
        };
        EnumDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return EnumDescriptorProto;
    }());
    (function (EnumDescriptorProto) {
        var EnumReservedRange = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param EnumReservedRange value
             */
            function EnumReservedRange(value) {
                value = value || {};
                this.start = value.start;
                this.end = value.end;
                EnumReservedRange.refineValues(this);
            }
            EnumReservedRange.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                EnumReservedRange.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            EnumReservedRange.fromBinary = function (bytes) {
                var instance = new EnumReservedRange();
                EnumReservedRange.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            EnumReservedRange.refineValues = function (instance) {
                instance.start = instance.start || 0;
                instance.end = instance.end || 0;
            };
            EnumReservedRange.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.start = reader.readInt32();
                            break;
                        case 2:
                            instance.end = reader.readInt32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                EnumReservedRange.refineValues(instance);
            };
            EnumReservedRange.toBinaryWriter = function (instance, writer) {
                if (instance.start) {
                    writer.writeInt32(1, instance.start);
                }
                if (instance.end) {
                    writer.writeInt32(2, instance.end);
                }
            };
            Object.defineProperty(EnumReservedRange.prototype, "start", {
                get: function () {
                    return this._start;
                },
                set: function (value) {
                    this._start = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(EnumReservedRange.prototype, "end", {
                get: function () {
                    return this._end;
                },
                set: function (value) {
                    this._end = value;
                },
                enumerable: false,
                configurable: true
            });
            EnumReservedRange.prototype.toObject = function () {
                return {
                    start: this.start,
                    end: this.end
                };
            };
            EnumReservedRange.prototype.toJSON = function () {
                return this.toObject();
            };
            return EnumReservedRange;
        }());
        EnumDescriptorProto.EnumReservedRange = EnumReservedRange;
    })(exports.EnumDescriptorProto || (exports.EnumDescriptorProto = {}));
    var EnumValueDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EnumValueDescriptorProto value
         */
        function EnumValueDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.number = value.number;
            this.options = value.options
                ? new EnumValueOptions(value.options)
                : undefined;
            EnumValueDescriptorProto.refineValues(this);
        }
        EnumValueDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EnumValueDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EnumValueDescriptorProto.fromBinary = function (bytes) {
            var instance = new EnumValueDescriptorProto();
            EnumValueDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EnumValueDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.number = instance.number || 0;
            instance.options = instance.options || undefined;
        };
        EnumValueDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.number = reader.readInt32();
                        break;
                    case 3:
                        instance.options = new EnumValueOptions();
                        reader.readMessage(instance.options, EnumValueOptions.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            EnumValueDescriptorProto.refineValues(instance);
        };
        EnumValueDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.number) {
                writer.writeInt32(2, instance.number);
            }
            if (instance.options) {
                writer.writeMessage(3, instance.options, EnumValueOptions.toBinaryWriter);
            }
        };
        Object.defineProperty(EnumValueDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumValueDescriptorProto.prototype, "number", {
            get: function () {
                return this._number;
            },
            set: function (value) {
                this._number = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumValueDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        EnumValueDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                number: this.number,
                options: this.options ? this.options.toObject() : undefined
            };
        };
        EnumValueDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return EnumValueDescriptorProto;
    }());
    var ServiceDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ServiceDescriptorProto value
         */
        function ServiceDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.method = (value.method || []).map(function (m) { return new MethodDescriptorProto(m); });
            this.options = value.options
                ? new ServiceOptions(value.options)
                : undefined;
            ServiceDescriptorProto.refineValues(this);
        }
        ServiceDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ServiceDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ServiceDescriptorProto.fromBinary = function (bytes) {
            var instance = new ServiceDescriptorProto();
            ServiceDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ServiceDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.method = instance.method || [];
            instance.options = instance.options || undefined;
        };
        ServiceDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        var messageInitializer2 = new MethodDescriptorProto();
                        reader.readMessage(messageInitializer2, MethodDescriptorProto.fromBinaryReader);
                        (instance.method = instance.method || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.options = new ServiceOptions();
                        reader.readMessage(instance.options, ServiceOptions.fromBinaryReader);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ServiceDescriptorProto.refineValues(instance);
        };
        ServiceDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.method && instance.method.length) {
                writer.writeRepeatedMessage(2, instance.method, MethodDescriptorProto.toBinaryWriter);
            }
            if (instance.options) {
                writer.writeMessage(3, instance.options, ServiceOptions.toBinaryWriter);
            }
        };
        Object.defineProperty(ServiceDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ServiceDescriptorProto.prototype, "method", {
            get: function () {
                return this._method;
            },
            set: function (value) {
                this._method = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ServiceDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        ServiceDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                method: (this.method || []).map(function (m) { return m.toObject(); }),
                options: this.options ? this.options.toObject() : undefined
            };
        };
        ServiceDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return ServiceDescriptorProto;
    }());
    var MethodDescriptorProto = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param MethodDescriptorProto value
         */
        function MethodDescriptorProto(value) {
            value = value || {};
            this.name = value.name;
            this.inputType = value.inputType;
            this.outputType = value.outputType;
            this.options = value.options ? new exports.MethodOptions(value.options) : undefined;
            this.clientStreaming = value.clientStreaming;
            this.serverStreaming = value.serverStreaming;
            MethodDescriptorProto.refineValues(this);
        }
        MethodDescriptorProto.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            MethodDescriptorProto.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        MethodDescriptorProto.fromBinary = function (bytes) {
            var instance = new MethodDescriptorProto();
            MethodDescriptorProto.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        MethodDescriptorProto.refineValues = function (instance) {
            instance.name = instance.name || '';
            instance.inputType = instance.inputType || '';
            instance.outputType = instance.outputType || '';
            instance.options = instance.options || undefined;
            instance.clientStreaming = instance.clientStreaming || false;
            instance.serverStreaming = instance.serverStreaming || false;
        };
        MethodDescriptorProto.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.name = reader.readString();
                        break;
                    case 2:
                        instance.inputType = reader.readString();
                        break;
                    case 3:
                        instance.outputType = reader.readString();
                        break;
                    case 4:
                        instance.options = new exports.MethodOptions();
                        reader.readMessage(instance.options, exports.MethodOptions.fromBinaryReader);
                        break;
                    case 5:
                        instance.clientStreaming = reader.readBool();
                        break;
                    case 6:
                        instance.serverStreaming = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            MethodDescriptorProto.refineValues(instance);
        };
        MethodDescriptorProto.toBinaryWriter = function (instance, writer) {
            if (instance.name) {
                writer.writeString(1, instance.name);
            }
            if (instance.inputType) {
                writer.writeString(2, instance.inputType);
            }
            if (instance.outputType) {
                writer.writeString(3, instance.outputType);
            }
            if (instance.options) {
                writer.writeMessage(4, instance.options, exports.MethodOptions.toBinaryWriter);
            }
            if (instance.clientStreaming) {
                writer.writeBool(5, instance.clientStreaming);
            }
            if (instance.serverStreaming) {
                writer.writeBool(6, instance.serverStreaming);
            }
        };
        Object.defineProperty(MethodDescriptorProto.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodDescriptorProto.prototype, "inputType", {
            get: function () {
                return this._inputType;
            },
            set: function (value) {
                this._inputType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodDescriptorProto.prototype, "outputType", {
            get: function () {
                return this._outputType;
            },
            set: function (value) {
                this._outputType = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodDescriptorProto.prototype, "options", {
            get: function () {
                return this._options;
            },
            set: function (value) {
                this._options = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodDescriptorProto.prototype, "clientStreaming", {
            get: function () {
                return this._clientStreaming;
            },
            set: function (value) {
                this._clientStreaming = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodDescriptorProto.prototype, "serverStreaming", {
            get: function () {
                return this._serverStreaming;
            },
            set: function (value) {
                this._serverStreaming = value;
            },
            enumerable: false,
            configurable: true
        });
        MethodDescriptorProto.prototype.toObject = function () {
            return {
                name: this.name,
                inputType: this.inputType,
                outputType: this.outputType,
                options: this.options ? this.options.toObject() : undefined,
                clientStreaming: this.clientStreaming,
                serverStreaming: this.serverStreaming
            };
        };
        MethodDescriptorProto.prototype.toJSON = function () {
            return this.toObject();
        };
        return MethodDescriptorProto;
    }());
    exports.FileOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FileOptions value
         */
        function FileOptions(value) {
            value = value || {};
            this.javaPackage = value.javaPackage;
            this.javaOuterClassname = value.javaOuterClassname;
            this.javaMultipleFiles = value.javaMultipleFiles;
            this.javaGenerateEqualsAndHash = value.javaGenerateEqualsAndHash;
            this.javaStringCheckUtf8 = value.javaStringCheckUtf8;
            this.optimizeFor = value.optimizeFor;
            this.goPackage = value.goPackage;
            this.ccGenericServices = value.ccGenericServices;
            this.javaGenericServices = value.javaGenericServices;
            this.pyGenericServices = value.pyGenericServices;
            this.phpGenericServices = value.phpGenericServices;
            this.deprecated = value.deprecated;
            this.ccEnableArenas = value.ccEnableArenas;
            this.objcClassPrefix = value.objcClassPrefix;
            this.csharpNamespace = value.csharpNamespace;
            this.swiftPrefix = value.swiftPrefix;
            this.phpClassPrefix = value.phpClassPrefix;
            this.phpNamespace = value.phpNamespace;
            this.phpMetadataNamespace = value.phpMetadataNamespace;
            this.rubyPackage = value.rubyPackage;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            FileOptions.refineValues(this);
        }
        FileOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FileOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FileOptions.fromBinary = function (bytes) {
            var instance = new FileOptions();
            FileOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FileOptions.refineValues = function (instance) {
            instance.javaPackage = instance.javaPackage || '';
            instance.javaOuterClassname = instance.javaOuterClassname || '';
            instance.javaMultipleFiles = instance.javaMultipleFiles || false;
            instance.javaGenerateEqualsAndHash =
                instance.javaGenerateEqualsAndHash || false;
            instance.javaStringCheckUtf8 = instance.javaStringCheckUtf8 || false;
            instance.optimizeFor = instance.optimizeFor || 0;
            instance.goPackage = instance.goPackage || '';
            instance.ccGenericServices = instance.ccGenericServices || false;
            instance.javaGenericServices = instance.javaGenericServices || false;
            instance.pyGenericServices = instance.pyGenericServices || false;
            instance.phpGenericServices = instance.phpGenericServices || false;
            instance.deprecated = instance.deprecated || false;
            instance.ccEnableArenas = instance.ccEnableArenas || false;
            instance.objcClassPrefix = instance.objcClassPrefix || '';
            instance.csharpNamespace = instance.csharpNamespace || '';
            instance.swiftPrefix = instance.swiftPrefix || '';
            instance.phpClassPrefix = instance.phpClassPrefix || '';
            instance.phpNamespace = instance.phpNamespace || '';
            instance.phpMetadataNamespace = instance.phpMetadataNamespace || '';
            instance.rubyPackage = instance.rubyPackage || '';
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        FileOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.javaPackage = reader.readString();
                        break;
                    case 8:
                        instance.javaOuterClassname = reader.readString();
                        break;
                    case 10:
                        instance.javaMultipleFiles = reader.readBool();
                        break;
                    case 20:
                        instance.javaGenerateEqualsAndHash = reader.readBool();
                        break;
                    case 27:
                        instance.javaStringCheckUtf8 = reader.readBool();
                        break;
                    case 9:
                        instance.optimizeFor = reader.readEnum();
                        break;
                    case 11:
                        instance.goPackage = reader.readString();
                        break;
                    case 16:
                        instance.ccGenericServices = reader.readBool();
                        break;
                    case 17:
                        instance.javaGenericServices = reader.readBool();
                        break;
                    case 18:
                        instance.pyGenericServices = reader.readBool();
                        break;
                    case 42:
                        instance.phpGenericServices = reader.readBool();
                        break;
                    case 23:
                        instance.deprecated = reader.readBool();
                        break;
                    case 31:
                        instance.ccEnableArenas = reader.readBool();
                        break;
                    case 36:
                        instance.objcClassPrefix = reader.readString();
                        break;
                    case 37:
                        instance.csharpNamespace = reader.readString();
                        break;
                    case 39:
                        instance.swiftPrefix = reader.readString();
                        break;
                    case 40:
                        instance.phpClassPrefix = reader.readString();
                        break;
                    case 41:
                        instance.phpNamespace = reader.readString();
                        break;
                    case 44:
                        instance.phpMetadataNamespace = reader.readString();
                        break;
                    case 45:
                        instance.rubyPackage = reader.readString();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            FileOptions.refineValues(instance);
        };
        FileOptions.toBinaryWriter = function (instance, writer) {
            if (instance.javaPackage) {
                writer.writeString(1, instance.javaPackage);
            }
            if (instance.javaOuterClassname) {
                writer.writeString(8, instance.javaOuterClassname);
            }
            if (instance.javaMultipleFiles) {
                writer.writeBool(10, instance.javaMultipleFiles);
            }
            if (instance.javaGenerateEqualsAndHash) {
                writer.writeBool(20, instance.javaGenerateEqualsAndHash);
            }
            if (instance.javaStringCheckUtf8) {
                writer.writeBool(27, instance.javaStringCheckUtf8);
            }
            if (instance.optimizeFor) {
                writer.writeEnum(9, instance.optimizeFor);
            }
            if (instance.goPackage) {
                writer.writeString(11, instance.goPackage);
            }
            if (instance.ccGenericServices) {
                writer.writeBool(16, instance.ccGenericServices);
            }
            if (instance.javaGenericServices) {
                writer.writeBool(17, instance.javaGenericServices);
            }
            if (instance.pyGenericServices) {
                writer.writeBool(18, instance.pyGenericServices);
            }
            if (instance.phpGenericServices) {
                writer.writeBool(42, instance.phpGenericServices);
            }
            if (instance.deprecated) {
                writer.writeBool(23, instance.deprecated);
            }
            if (instance.ccEnableArenas) {
                writer.writeBool(31, instance.ccEnableArenas);
            }
            if (instance.objcClassPrefix) {
                writer.writeString(36, instance.objcClassPrefix);
            }
            if (instance.csharpNamespace) {
                writer.writeString(37, instance.csharpNamespace);
            }
            if (instance.swiftPrefix) {
                writer.writeString(39, instance.swiftPrefix);
            }
            if (instance.phpClassPrefix) {
                writer.writeString(40, instance.phpClassPrefix);
            }
            if (instance.phpNamespace) {
                writer.writeString(41, instance.phpNamespace);
            }
            if (instance.phpMetadataNamespace) {
                writer.writeString(44, instance.phpMetadataNamespace);
            }
            if (instance.rubyPackage) {
                writer.writeString(45, instance.rubyPackage);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(FileOptions.prototype, "javaPackage", {
            get: function () {
                return this._javaPackage;
            },
            set: function (value) {
                this._javaPackage = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "javaOuterClassname", {
            get: function () {
                return this._javaOuterClassname;
            },
            set: function (value) {
                this._javaOuterClassname = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "javaMultipleFiles", {
            get: function () {
                return this._javaMultipleFiles;
            },
            set: function (value) {
                this._javaMultipleFiles = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "javaGenerateEqualsAndHash", {
            get: function () {
                return this._javaGenerateEqualsAndHash;
            },
            set: function (value) {
                this._javaGenerateEqualsAndHash = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "javaStringCheckUtf8", {
            get: function () {
                return this._javaStringCheckUtf8;
            },
            set: function (value) {
                this._javaStringCheckUtf8 = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "optimizeFor", {
            get: function () {
                return this._optimizeFor;
            },
            set: function (value) {
                this._optimizeFor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "goPackage", {
            get: function () {
                return this._goPackage;
            },
            set: function (value) {
                this._goPackage = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "ccGenericServices", {
            get: function () {
                return this._ccGenericServices;
            },
            set: function (value) {
                this._ccGenericServices = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "javaGenericServices", {
            get: function () {
                return this._javaGenericServices;
            },
            set: function (value) {
                this._javaGenericServices = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "pyGenericServices", {
            get: function () {
                return this._pyGenericServices;
            },
            set: function (value) {
                this._pyGenericServices = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "phpGenericServices", {
            get: function () {
                return this._phpGenericServices;
            },
            set: function (value) {
                this._phpGenericServices = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "ccEnableArenas", {
            get: function () {
                return this._ccEnableArenas;
            },
            set: function (value) {
                this._ccEnableArenas = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "objcClassPrefix", {
            get: function () {
                return this._objcClassPrefix;
            },
            set: function (value) {
                this._objcClassPrefix = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "csharpNamespace", {
            get: function () {
                return this._csharpNamespace;
            },
            set: function (value) {
                this._csharpNamespace = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "swiftPrefix", {
            get: function () {
                return this._swiftPrefix;
            },
            set: function (value) {
                this._swiftPrefix = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "phpClassPrefix", {
            get: function () {
                return this._phpClassPrefix;
            },
            set: function (value) {
                this._phpClassPrefix = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "phpNamespace", {
            get: function () {
                return this._phpNamespace;
            },
            set: function (value) {
                this._phpNamespace = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "phpMetadataNamespace", {
            get: function () {
                return this._phpMetadataNamespace;
            },
            set: function (value) {
                this._phpMetadataNamespace = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "rubyPackage", {
            get: function () {
                return this._rubyPackage;
            },
            set: function (value) {
                this._rubyPackage = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FileOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        FileOptions.prototype.toObject = function () {
            return {
                javaPackage: this.javaPackage,
                javaOuterClassname: this.javaOuterClassname,
                javaMultipleFiles: this.javaMultipleFiles,
                javaGenerateEqualsAndHash: this.javaGenerateEqualsAndHash,
                javaStringCheckUtf8: this.javaStringCheckUtf8,
                optimizeFor: this.optimizeFor,
                goPackage: this.goPackage,
                ccGenericServices: this.ccGenericServices,
                javaGenericServices: this.javaGenericServices,
                pyGenericServices: this.pyGenericServices,
                phpGenericServices: this.phpGenericServices,
                deprecated: this.deprecated,
                ccEnableArenas: this.ccEnableArenas,
                objcClassPrefix: this.objcClassPrefix,
                csharpNamespace: this.csharpNamespace,
                swiftPrefix: this.swiftPrefix,
                phpClassPrefix: this.phpClassPrefix,
                phpNamespace: this.phpNamespace,
                phpMetadataNamespace: this.phpMetadataNamespace,
                rubyPackage: this.rubyPackage,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        FileOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return FileOptions;
    }());
    (function (FileOptions) {
        var OptimizeMode;
        (function (OptimizeMode) {
            OptimizeMode[OptimizeMode["speed"] = 1] = "speed";
            OptimizeMode[OptimizeMode["codeSize"] = 2] = "codeSize";
            OptimizeMode[OptimizeMode["liteRuntime"] = 3] = "liteRuntime";
        })(OptimizeMode = FileOptions.OptimizeMode || (FileOptions.OptimizeMode = {}));
    })(exports.FileOptions || (exports.FileOptions = {}));
    var MessageOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param MessageOptions value
         */
        function MessageOptions(value) {
            value = value || {};
            this.messageSetWireFormat = value.messageSetWireFormat;
            this.noStandardDescriptorAccessor = value.noStandardDescriptorAccessor;
            this.deprecated = value.deprecated;
            this.mapEntry = value.mapEntry;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            MessageOptions.refineValues(this);
        }
        MessageOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            MessageOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        MessageOptions.fromBinary = function (bytes) {
            var instance = new MessageOptions();
            MessageOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        MessageOptions.refineValues = function (instance) {
            instance.messageSetWireFormat = instance.messageSetWireFormat || false;
            instance.noStandardDescriptorAccessor =
                instance.noStandardDescriptorAccessor || false;
            instance.deprecated = instance.deprecated || false;
            instance.mapEntry = instance.mapEntry || false;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        MessageOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.messageSetWireFormat = reader.readBool();
                        break;
                    case 2:
                        instance.noStandardDescriptorAccessor = reader.readBool();
                        break;
                    case 3:
                        instance.deprecated = reader.readBool();
                        break;
                    case 7:
                        instance.mapEntry = reader.readBool();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            MessageOptions.refineValues(instance);
        };
        MessageOptions.toBinaryWriter = function (instance, writer) {
            if (instance.messageSetWireFormat) {
                writer.writeBool(1, instance.messageSetWireFormat);
            }
            if (instance.noStandardDescriptorAccessor) {
                writer.writeBool(2, instance.noStandardDescriptorAccessor);
            }
            if (instance.deprecated) {
                writer.writeBool(3, instance.deprecated);
            }
            if (instance.mapEntry) {
                writer.writeBool(7, instance.mapEntry);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(MessageOptions.prototype, "messageSetWireFormat", {
            get: function () {
                return this._messageSetWireFormat;
            },
            set: function (value) {
                this._messageSetWireFormat = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MessageOptions.prototype, "noStandardDescriptorAccessor", {
            get: function () {
                return this._noStandardDescriptorAccessor;
            },
            set: function (value) {
                this._noStandardDescriptorAccessor = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MessageOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MessageOptions.prototype, "mapEntry", {
            get: function () {
                return this._mapEntry;
            },
            set: function (value) {
                this._mapEntry = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MessageOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        MessageOptions.prototype.toObject = function () {
            return {
                messageSetWireFormat: this.messageSetWireFormat,
                noStandardDescriptorAccessor: this.noStandardDescriptorAccessor,
                deprecated: this.deprecated,
                mapEntry: this.mapEntry,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        MessageOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return MessageOptions;
    }());
    exports.FieldOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param FieldOptions value
         */
        function FieldOptions(value) {
            value = value || {};
            this.ctype = value.ctype;
            this.packed = value.packed;
            this.jstype = value.jstype;
            this.lazy = value.lazy;
            this.deprecated = value.deprecated;
            this.weak = value.weak;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            FieldOptions.refineValues(this);
        }
        FieldOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            FieldOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        FieldOptions.fromBinary = function (bytes) {
            var instance = new FieldOptions();
            FieldOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        FieldOptions.refineValues = function (instance) {
            instance.ctype = instance.ctype || 0;
            instance.packed = instance.packed || false;
            instance.jstype = instance.jstype || 0;
            instance.lazy = instance.lazy || false;
            instance.deprecated = instance.deprecated || false;
            instance.weak = instance.weak || false;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        FieldOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.ctype = reader.readEnum();
                        break;
                    case 2:
                        instance.packed = reader.readBool();
                        break;
                    case 6:
                        instance.jstype = reader.readEnum();
                        break;
                    case 5:
                        instance.lazy = reader.readBool();
                        break;
                    case 3:
                        instance.deprecated = reader.readBool();
                        break;
                    case 10:
                        instance.weak = reader.readBool();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            FieldOptions.refineValues(instance);
        };
        FieldOptions.toBinaryWriter = function (instance, writer) {
            if (instance.ctype) {
                writer.writeEnum(1, instance.ctype);
            }
            if (instance.packed) {
                writer.writeBool(2, instance.packed);
            }
            if (instance.jstype) {
                writer.writeEnum(6, instance.jstype);
            }
            if (instance.lazy) {
                writer.writeBool(5, instance.lazy);
            }
            if (instance.deprecated) {
                writer.writeBool(3, instance.deprecated);
            }
            if (instance.weak) {
                writer.writeBool(10, instance.weak);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(FieldOptions.prototype, "ctype", {
            get: function () {
                return this._ctype;
            },
            set: function (value) {
                this._ctype = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "packed", {
            get: function () {
                return this._packed;
            },
            set: function (value) {
                this._packed = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "jstype", {
            get: function () {
                return this._jstype;
            },
            set: function (value) {
                this._jstype = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "lazy", {
            get: function () {
                return this._lazy;
            },
            set: function (value) {
                this._lazy = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "weak", {
            get: function () {
                return this._weak;
            },
            set: function (value) {
                this._weak = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        FieldOptions.prototype.toObject = function () {
            return {
                ctype: this.ctype,
                packed: this.packed,
                jstype: this.jstype,
                lazy: this.lazy,
                deprecated: this.deprecated,
                weak: this.weak,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        FieldOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return FieldOptions;
    }());
    (function (FieldOptions) {
        var CType;
        (function (CType) {
            CType[CType["string"] = 0] = "string";
            CType[CType["cord"] = 1] = "cord";
            CType[CType["stringPiece"] = 2] = "stringPiece";
        })(CType = FieldOptions.CType || (FieldOptions.CType = {}));
        var JSType;
        (function (JSType) {
            JSType[JSType["jsNormal"] = 0] = "jsNormal";
            JSType[JSType["jsString"] = 1] = "jsString";
            JSType[JSType["jsNumber"] = 2] = "jsNumber";
        })(JSType = FieldOptions.JSType || (FieldOptions.JSType = {}));
    })(exports.FieldOptions || (exports.FieldOptions = {}));
    var OneofOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param OneofOptions value
         */
        function OneofOptions(value) {
            value = value || {};
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            OneofOptions.refineValues(this);
        }
        OneofOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            OneofOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        OneofOptions.fromBinary = function (bytes) {
            var instance = new OneofOptions();
            OneofOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        OneofOptions.refineValues = function (instance) {
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        OneofOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            OneofOptions.refineValues(instance);
        };
        OneofOptions.toBinaryWriter = function (instance, writer) {
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(OneofOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        OneofOptions.prototype.toObject = function () {
            return {
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        OneofOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return OneofOptions;
    }());
    var EnumOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EnumOptions value
         */
        function EnumOptions(value) {
            value = value || {};
            this.allowAlias = value.allowAlias;
            this.deprecated = value.deprecated;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            EnumOptions.refineValues(this);
        }
        EnumOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EnumOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EnumOptions.fromBinary = function (bytes) {
            var instance = new EnumOptions();
            EnumOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EnumOptions.refineValues = function (instance) {
            instance.allowAlias = instance.allowAlias || false;
            instance.deprecated = instance.deprecated || false;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        EnumOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        instance.allowAlias = reader.readBool();
                        break;
                    case 3:
                        instance.deprecated = reader.readBool();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            EnumOptions.refineValues(instance);
        };
        EnumOptions.toBinaryWriter = function (instance, writer) {
            if (instance.allowAlias) {
                writer.writeBool(2, instance.allowAlias);
            }
            if (instance.deprecated) {
                writer.writeBool(3, instance.deprecated);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(EnumOptions.prototype, "allowAlias", {
            get: function () {
                return this._allowAlias;
            },
            set: function (value) {
                this._allowAlias = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        EnumOptions.prototype.toObject = function () {
            return {
                allowAlias: this.allowAlias,
                deprecated: this.deprecated,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        EnumOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return EnumOptions;
    }());
    var EnumValueOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param EnumValueOptions value
         */
        function EnumValueOptions(value) {
            value = value || {};
            this.deprecated = value.deprecated;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            EnumValueOptions.refineValues(this);
        }
        EnumValueOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            EnumValueOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        EnumValueOptions.fromBinary = function (bytes) {
            var instance = new EnumValueOptions();
            EnumValueOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        EnumValueOptions.refineValues = function (instance) {
            instance.deprecated = instance.deprecated || false;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        EnumValueOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.deprecated = reader.readBool();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            EnumValueOptions.refineValues(instance);
        };
        EnumValueOptions.toBinaryWriter = function (instance, writer) {
            if (instance.deprecated) {
                writer.writeBool(1, instance.deprecated);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(EnumValueOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EnumValueOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        EnumValueOptions.prototype.toObject = function () {
            return {
                deprecated: this.deprecated,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        EnumValueOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return EnumValueOptions;
    }());
    var ServiceOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param ServiceOptions value
         */
        function ServiceOptions(value) {
            value = value || {};
            this.deprecated = value.deprecated;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            ServiceOptions.refineValues(this);
        }
        ServiceOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            ServiceOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        ServiceOptions.fromBinary = function (bytes) {
            var instance = new ServiceOptions();
            ServiceOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        ServiceOptions.refineValues = function (instance) {
            instance.deprecated = instance.deprecated || false;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        ServiceOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 33:
                        instance.deprecated = reader.readBool();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            ServiceOptions.refineValues(instance);
        };
        ServiceOptions.toBinaryWriter = function (instance, writer) {
            if (instance.deprecated) {
                writer.writeBool(33, instance.deprecated);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(ServiceOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ServiceOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        ServiceOptions.prototype.toObject = function () {
            return {
                deprecated: this.deprecated,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        ServiceOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return ServiceOptions;
    }());
    exports.MethodOptions = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param MethodOptions value
         */
        function MethodOptions(value) {
            value = value || {};
            this.deprecated = value.deprecated;
            this.idempotencyLevel = value.idempotencyLevel;
            this.uninterpretedOption = (value.uninterpretedOption || []).map(function (m) { return new exports.UninterpretedOption(m); });
            MethodOptions.refineValues(this);
        }
        MethodOptions.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            MethodOptions.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        MethodOptions.fromBinary = function (bytes) {
            var instance = new MethodOptions();
            MethodOptions.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        MethodOptions.refineValues = function (instance) {
            instance.deprecated = instance.deprecated || false;
            instance.idempotencyLevel = instance.idempotencyLevel || 0;
            instance.uninterpretedOption = instance.uninterpretedOption || [];
        };
        MethodOptions.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 33:
                        instance.deprecated = reader.readBool();
                        break;
                    case 34:
                        instance.idempotencyLevel = reader.readEnum();
                        break;
                    case 999:
                        var messageInitializer999 = new exports.UninterpretedOption();
                        reader.readMessage(messageInitializer999, exports.UninterpretedOption.fromBinaryReader);
                        (instance.uninterpretedOption =
                            instance.uninterpretedOption || []).push(messageInitializer999);
                        break;
                    default:
                        reader.skipField();
                }
            }
            MethodOptions.refineValues(instance);
        };
        MethodOptions.toBinaryWriter = function (instance, writer) {
            if (instance.deprecated) {
                writer.writeBool(33, instance.deprecated);
            }
            if (instance.idempotencyLevel) {
                writer.writeEnum(34, instance.idempotencyLevel);
            }
            if (instance.uninterpretedOption && instance.uninterpretedOption.length) {
                writer.writeRepeatedMessage(999, instance.uninterpretedOption, exports.UninterpretedOption.toBinaryWriter);
            }
        };
        Object.defineProperty(MethodOptions.prototype, "deprecated", {
            get: function () {
                return this._deprecated;
            },
            set: function (value) {
                this._deprecated = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodOptions.prototype, "idempotencyLevel", {
            get: function () {
                return this._idempotencyLevel;
            },
            set: function (value) {
                this._idempotencyLevel = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MethodOptions.prototype, "uninterpretedOption", {
            get: function () {
                return this._uninterpretedOption;
            },
            set: function (value) {
                this._uninterpretedOption = value;
            },
            enumerable: false,
            configurable: true
        });
        MethodOptions.prototype.toObject = function () {
            return {
                deprecated: this.deprecated,
                idempotencyLevel: this.idempotencyLevel,
                uninterpretedOption: (this.uninterpretedOption || []).map(function (m) { return m.toObject(); })
            };
        };
        MethodOptions.prototype.toJSON = function () {
            return this.toObject();
        };
        return MethodOptions;
    }());
    (function (MethodOptions) {
        var IdempotencyLevel;
        (function (IdempotencyLevel) {
            IdempotencyLevel[IdempotencyLevel["idempotencyUnknown"] = 0] = "idempotencyUnknown";
            IdempotencyLevel[IdempotencyLevel["noSideEffects"] = 1] = "noSideEffects";
            IdempotencyLevel[IdempotencyLevel["idempotent"] = 2] = "idempotent";
        })(IdempotencyLevel = MethodOptions.IdempotencyLevel || (MethodOptions.IdempotencyLevel = {}));
    })(exports.MethodOptions || (exports.MethodOptions = {}));
    exports.UninterpretedOption = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param UninterpretedOption value
         */
        function UninterpretedOption(value) {
            value = value || {};
            this.name = (value.name || []).map(function (m) { return new UninterpretedOption.NamePart(m); });
            this.identifierValue = value.identifierValue;
            this.positiveIntValue = value.positiveIntValue;
            this.negativeIntValue = value.negativeIntValue;
            this.doubleValue = value.doubleValue;
            this.stringValue = value.stringValue;
            this.aggregateValue = value.aggregateValue;
            UninterpretedOption.refineValues(this);
        }
        UninterpretedOption.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            UninterpretedOption.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        UninterpretedOption.fromBinary = function (bytes) {
            var instance = new UninterpretedOption();
            UninterpretedOption.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        UninterpretedOption.refineValues = function (instance) {
            instance.name = instance.name || [];
            instance.identifierValue = instance.identifierValue || '';
            instance.positiveIntValue = instance.positiveIntValue || '0';
            instance.negativeIntValue = instance.negativeIntValue || '0';
            instance.doubleValue = instance.doubleValue || 0;
            instance.stringValue = instance.stringValue || new Uint8Array();
            instance.aggregateValue = instance.aggregateValue || '';
        };
        UninterpretedOption.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 2:
                        var messageInitializer2 = new UninterpretedOption.NamePart();
                        reader.readMessage(messageInitializer2, UninterpretedOption.NamePart.fromBinaryReader);
                        (instance.name = instance.name || []).push(messageInitializer2);
                        break;
                    case 3:
                        instance.identifierValue = reader.readString();
                        break;
                    case 4:
                        instance.positiveIntValue = reader.readUint64String();
                        break;
                    case 5:
                        instance.negativeIntValue = reader.readInt64String();
                        break;
                    case 6:
                        instance.doubleValue = reader.readDouble();
                        break;
                    case 7:
                        instance.stringValue = reader.readBytes();
                        break;
                    case 8:
                        instance.aggregateValue = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            UninterpretedOption.refineValues(instance);
        };
        UninterpretedOption.toBinaryWriter = function (instance, writer) {
            if (instance.name && instance.name.length) {
                writer.writeRepeatedMessage(2, instance.name, UninterpretedOption.NamePart.toBinaryWriter);
            }
            if (instance.identifierValue) {
                writer.writeString(3, instance.identifierValue);
            }
            if (instance.positiveIntValue) {
                writer.writeUint64String(4, instance.positiveIntValue);
            }
            if (instance.negativeIntValue) {
                writer.writeInt64String(5, instance.negativeIntValue);
            }
            if (instance.doubleValue) {
                writer.writeDouble(6, instance.doubleValue);
            }
            if (instance.stringValue && instance.stringValue.length) {
                writer.writeBytes(7, instance.stringValue);
            }
            if (instance.aggregateValue) {
                writer.writeString(8, instance.aggregateValue);
            }
        };
        Object.defineProperty(UninterpretedOption.prototype, "name", {
            get: function () {
                return this._name;
            },
            set: function (value) {
                this._name = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "identifierValue", {
            get: function () {
                return this._identifierValue;
            },
            set: function (value) {
                this._identifierValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "positiveIntValue", {
            get: function () {
                return this._positiveIntValue;
            },
            set: function (value) {
                this._positiveIntValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "negativeIntValue", {
            get: function () {
                return this._negativeIntValue;
            },
            set: function (value) {
                this._negativeIntValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "doubleValue", {
            get: function () {
                return this._doubleValue;
            },
            set: function (value) {
                this._doubleValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "stringValue", {
            get: function () {
                return this._stringValue;
            },
            set: function (value) {
                this._stringValue = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(UninterpretedOption.prototype, "aggregateValue", {
            get: function () {
                return this._aggregateValue;
            },
            set: function (value) {
                this._aggregateValue = value;
            },
            enumerable: false,
            configurable: true
        });
        UninterpretedOption.prototype.toObject = function () {
            return {
                name: (this.name || []).map(function (m) { return m.toObject(); }),
                identifierValue: this.identifierValue,
                positiveIntValue: this.positiveIntValue,
                negativeIntValue: this.negativeIntValue,
                doubleValue: this.doubleValue,
                stringValue: this.stringValue
                    ? this.stringValue.subarray(0)
                    : new Uint8Array(),
                aggregateValue: this.aggregateValue
            };
        };
        UninterpretedOption.prototype.toJSON = function () {
            return this.toObject();
        };
        return UninterpretedOption;
    }());
    (function (UninterpretedOption) {
        var NamePart = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param NamePart value
             */
            function NamePart(value) {
                value = value || {};
                this.namePart = value.namePart;
                this.isExtension = value.isExtension;
                NamePart.refineValues(this);
            }
            NamePart.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                NamePart.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            NamePart.fromBinary = function (bytes) {
                var instance = new NamePart();
                NamePart.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            NamePart.refineValues = function (instance) {
                instance.namePart = instance.namePart || '';
                instance.isExtension = instance.isExtension || false;
            };
            NamePart.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            instance.namePart = reader.readString();
                            break;
                        case 2:
                            instance.isExtension = reader.readBool();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                NamePart.refineValues(instance);
            };
            NamePart.toBinaryWriter = function (instance, writer) {
                if (instance.namePart) {
                    writer.writeString(1, instance.namePart);
                }
                if (instance.isExtension) {
                    writer.writeBool(2, instance.isExtension);
                }
            };
            Object.defineProperty(NamePart.prototype, "namePart", {
                get: function () {
                    return this._namePart;
                },
                set: function (value) {
                    this._namePart = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(NamePart.prototype, "isExtension", {
                get: function () {
                    return this._isExtension;
                },
                set: function (value) {
                    this._isExtension = value;
                },
                enumerable: false,
                configurable: true
            });
            NamePart.prototype.toObject = function () {
                return {
                    namePart: this.namePart,
                    isExtension: this.isExtension
                };
            };
            NamePart.prototype.toJSON = function () {
                return this.toObject();
            };
            return NamePart;
        }());
        UninterpretedOption.NamePart = NamePart;
    })(exports.UninterpretedOption || (exports.UninterpretedOption = {}));
    exports.SourceCodeInfo = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param SourceCodeInfo value
         */
        function SourceCodeInfo(value) {
            value = value || {};
            this.location = (value.location || []).map(function (m) { return new SourceCodeInfo.Location(m); });
            SourceCodeInfo.refineValues(this);
        }
        SourceCodeInfo.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            SourceCodeInfo.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        SourceCodeInfo.fromBinary = function (bytes) {
            var instance = new SourceCodeInfo();
            SourceCodeInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        SourceCodeInfo.refineValues = function (instance) {
            instance.location = instance.location || [];
        };
        SourceCodeInfo.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new SourceCodeInfo.Location();
                        reader.readMessage(messageInitializer1, SourceCodeInfo.Location.fromBinaryReader);
                        (instance.location = instance.location || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            SourceCodeInfo.refineValues(instance);
        };
        SourceCodeInfo.toBinaryWriter = function (instance, writer) {
            if (instance.location && instance.location.length) {
                writer.writeRepeatedMessage(1, instance.location, SourceCodeInfo.Location.toBinaryWriter);
            }
        };
        Object.defineProperty(SourceCodeInfo.prototype, "location", {
            get: function () {
                return this._location;
            },
            set: function (value) {
                this._location = value;
            },
            enumerable: false,
            configurable: true
        });
        SourceCodeInfo.prototype.toObject = function () {
            return {
                location: (this.location || []).map(function (m) { return m.toObject(); })
            };
        };
        SourceCodeInfo.prototype.toJSON = function () {
            return this.toObject();
        };
        return SourceCodeInfo;
    }());
    (function (SourceCodeInfo) {
        var Location = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Location value
             */
            function Location(value) {
                value = value || {};
                this.path = (value.path || []).slice();
                this.span = (value.span || []).slice();
                this.leadingComments = value.leadingComments;
                this.trailingComments = value.trailingComments;
                this.leadingDetachedComments = (value.leadingDetachedComments || []).slice();
                Location.refineValues(this);
            }
            Location.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Location.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Location.fromBinary = function (bytes) {
                var instance = new Location();
                Location.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Location.refineValues = function (instance) {
                instance.path = instance.path || [];
                instance.span = instance.span || [];
                instance.leadingComments = instance.leadingComments || '';
                instance.trailingComments = instance.trailingComments || '';
                instance.leadingDetachedComments = instance.leadingDetachedComments || [];
            };
            Location.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            (instance.path = instance.path || []).push(reader.readInt32());
                            break;
                        case 2:
                            (instance.span = instance.span || []).push(reader.readInt32());
                            break;
                        case 3:
                            instance.leadingComments = reader.readString();
                            break;
                        case 4:
                            instance.trailingComments = reader.readString();
                            break;
                        case 6:
                            (instance.leadingDetachedComments =
                                instance.leadingDetachedComments || []).push(reader.readString());
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Location.refineValues(instance);
            };
            Location.toBinaryWriter = function (instance, writer) {
                if (instance.path && instance.path.length) {
                    writer.writeRepeatedInt32(1, instance.path);
                }
                if (instance.span && instance.span.length) {
                    writer.writeRepeatedInt32(2, instance.span);
                }
                if (instance.leadingComments) {
                    writer.writeString(3, instance.leadingComments);
                }
                if (instance.trailingComments) {
                    writer.writeString(4, instance.trailingComments);
                }
                if (instance.leadingDetachedComments &&
                    instance.leadingDetachedComments.length) {
                    writer.writeRepeatedString(6, instance.leadingDetachedComments);
                }
            };
            Object.defineProperty(Location.prototype, "path", {
                get: function () {
                    return this._path;
                },
                set: function (value) {
                    this._path = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Location.prototype, "span", {
                get: function () {
                    return this._span;
                },
                set: function (value) {
                    this._span = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Location.prototype, "leadingComments", {
                get: function () {
                    return this._leadingComments;
                },
                set: function (value) {
                    this._leadingComments = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Location.prototype, "trailingComments", {
                get: function () {
                    return this._trailingComments;
                },
                set: function (value) {
                    this._trailingComments = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Location.prototype, "leadingDetachedComments", {
                get: function () {
                    return this._leadingDetachedComments;
                },
                set: function (value) {
                    this._leadingDetachedComments = value;
                },
                enumerable: false,
                configurable: true
            });
            Location.prototype.toObject = function () {
                return {
                    path: (this.path || []).slice(),
                    span: (this.span || []).slice(),
                    leadingComments: this.leadingComments,
                    trailingComments: this.trailingComments,
                    leadingDetachedComments: (this.leadingDetachedComments || []).slice()
                };
            };
            Location.prototype.toJSON = function () {
                return this.toObject();
            };
            return Location;
        }());
        SourceCodeInfo.Location = Location;
    })(exports.SourceCodeInfo || (exports.SourceCodeInfo = {}));
    exports.GeneratedCodeInfo = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param GeneratedCodeInfo value
         */
        function GeneratedCodeInfo(value) {
            value = value || {};
            this.annotation = (value.annotation || []).map(function (m) { return new GeneratedCodeInfo.Annotation(m); });
            GeneratedCodeInfo.refineValues(this);
        }
        GeneratedCodeInfo.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            GeneratedCodeInfo.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        GeneratedCodeInfo.fromBinary = function (bytes) {
            var instance = new GeneratedCodeInfo();
            GeneratedCodeInfo.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        GeneratedCodeInfo.refineValues = function (instance) {
            instance.annotation = instance.annotation || [];
        };
        GeneratedCodeInfo.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new GeneratedCodeInfo.Annotation();
                        reader.readMessage(messageInitializer1, GeneratedCodeInfo.Annotation.fromBinaryReader);
                        (instance.annotation = instance.annotation || []).push(messageInitializer1);
                        break;
                    default:
                        reader.skipField();
                }
            }
            GeneratedCodeInfo.refineValues(instance);
        };
        GeneratedCodeInfo.toBinaryWriter = function (instance, writer) {
            if (instance.annotation && instance.annotation.length) {
                writer.writeRepeatedMessage(1, instance.annotation, GeneratedCodeInfo.Annotation.toBinaryWriter);
            }
        };
        Object.defineProperty(GeneratedCodeInfo.prototype, "annotation", {
            get: function () {
                return this._annotation;
            },
            set: function (value) {
                this._annotation = value;
            },
            enumerable: false,
            configurable: true
        });
        GeneratedCodeInfo.prototype.toObject = function () {
            return {
                annotation: (this.annotation || []).map(function (m) { return m.toObject(); })
            };
        };
        GeneratedCodeInfo.prototype.toJSON = function () {
            return this.toObject();
        };
        return GeneratedCodeInfo;
    }());
    (function (GeneratedCodeInfo) {
        var Annotation = /** @class */ (function () {
            /**
             * Creates an object and applies default Protobuf values
             * @param Annotation value
             */
            function Annotation(value) {
                value = value || {};
                this.path = (value.path || []).slice();
                this.sourceFile = value.sourceFile;
                this.begin = value.begin;
                this.end = value.end;
                Annotation.refineValues(this);
            }
            Annotation.toBinary = function (instance) {
                var writer = new googleProtobuf.BinaryWriter();
                Annotation.toBinaryWriter(instance, writer);
                return writer.getResultBuffer();
            };
            Annotation.fromBinary = function (bytes) {
                var instance = new Annotation();
                Annotation.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
                return instance;
            };
            Annotation.refineValues = function (instance) {
                instance.path = instance.path || [];
                instance.sourceFile = instance.sourceFile || '';
                instance.begin = instance.begin || 0;
                instance.end = instance.end || 0;
            };
            Annotation.fromBinaryReader = function (instance, reader) {
                while (reader.nextField()) {
                    if (reader.isEndGroup())
                        break;
                    switch (reader.getFieldNumber()) {
                        case 1:
                            (instance.path = instance.path || []).push(reader.readInt32());
                            break;
                        case 2:
                            instance.sourceFile = reader.readString();
                            break;
                        case 3:
                            instance.begin = reader.readInt32();
                            break;
                        case 4:
                            instance.end = reader.readInt32();
                            break;
                        default:
                            reader.skipField();
                    }
                }
                Annotation.refineValues(instance);
            };
            Annotation.toBinaryWriter = function (instance, writer) {
                if (instance.path && instance.path.length) {
                    writer.writeRepeatedInt32(1, instance.path);
                }
                if (instance.sourceFile) {
                    writer.writeString(2, instance.sourceFile);
                }
                if (instance.begin) {
                    writer.writeInt32(3, instance.begin);
                }
                if (instance.end) {
                    writer.writeInt32(4, instance.end);
                }
            };
            Object.defineProperty(Annotation.prototype, "path", {
                get: function () {
                    return this._path;
                },
                set: function (value) {
                    this._path = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Annotation.prototype, "sourceFile", {
                get: function () {
                    return this._sourceFile;
                },
                set: function (value) {
                    this._sourceFile = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Annotation.prototype, "begin", {
                get: function () {
                    return this._begin;
                },
                set: function (value) {
                    this._begin = value;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(Annotation.prototype, "end", {
                get: function () {
                    return this._end;
                },
                set: function (value) {
                    this._end = value;
                },
                enumerable: false,
                configurable: true
            });
            Annotation.prototype.toObject = function () {
                return {
                    path: (this.path || []).slice(),
                    sourceFile: this.sourceFile,
                    begin: this.begin,
                    end: this.end
                };
            };
            Annotation.prototype.toJSON = function () {
                return this.toObject();
            };
            return Annotation;
        }());
        GeneratedCodeInfo.Annotation = Annotation;
    })(exports.GeneratedCodeInfo || (exports.GeneratedCodeInfo = {}));

    /* tslint:disable */
    /*
      To configure the services you need to provide a configuration for each of them.

      E.g. you can create a module where you configure all of them and then import this module into your AppModule:

      const grpcSettings = { host: environment.grpcHost };

      @NgModule({
        providers: [
          { provide: GRPC_OPERATIONS_CLIENT_SETTINGS, useValue: grpcSettings },
        ],
      })
      export class GrpcConfigModule { }
    */
    var GRPC_OPERATIONS_CLIENT_SETTINGS = new i0.InjectionToken('GRPC_OPERATIONS_CLIENT_SETTINGS');

    /* tslint:disable */
    var OperationsClient = /** @class */ (function () {
        function OperationsClient(settings, clientFactory, handler) {
            this.handler = handler;
            this.client = clientFactory.createClient('google.longrunning.Operations', settings);
        }
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.ListOperationsRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.ListOperationsResponse>
         */
        OperationsClient.prototype.listOperations = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.listOperations$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.ListOperationsRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.ListOperationsResponse>>
         */
        OperationsClient.prototype.listOperations$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/google.longrunning.Operations/ListOperations',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: ListOperationsRequest,
                responseClass: ListOperationsResponse
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.GetOperationRequest request
         * @param Metadata metadata
         * @return Observable<thisProto.Operation>
         */
        OperationsClient.prototype.getOperation = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.getOperation$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.GetOperationRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<thisProto.Operation>>
         */
        OperationsClient.prototype.getOperation$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/google.longrunning.Operations/GetOperation',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: GetOperationRequest,
                responseClass: exports.Operation
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.DeleteOperationRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf002.Empty>
         */
        OperationsClient.prototype.deleteOperation = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.deleteOperation$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.DeleteOperationRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf002.Empty>>
         */
        OperationsClient.prototype.deleteOperation$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/google.longrunning.Operations/DeleteOperation',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: DeleteOperationRequest,
                responseClass: Empty
            });
        };
        /**
         * Unary RPC. Emits messages and throws errors on non-zero status codes
         * @param thisProto.CancelOperationRequest request
         * @param Metadata metadata
         * @return Observable<googleProtobuf002.Empty>
         */
        OperationsClient.prototype.cancelOperation = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.cancelOperation$eventStream(requestData, requestMetadata).pipe(i2.throwStatusErrors(), i2.takeMessages());
        };
        /**
         * Unary RPC. Emits data and status events; does not throw errors by design
         * @param thisProto.CancelOperationRequest request
         * @param Metadata metadata
         * @return Observable<GrpcEvent<googleProtobuf002.Empty>>
         */
        OperationsClient.prototype.cancelOperation$eventStream = function (requestData, requestMetadata) {
            if (requestMetadata === void 0) { requestMetadata = {}; }
            return this.handler.handle({
                type: common.GrpcCallType.unary,
                client: this.client,
                path: '/google.longrunning.Operations/CancelOperation',
                requestData: requestData,
                requestMetadata: requestMetadata,
                requestClass: CancelOperationRequest,
                responseClass: Empty
            });
        };
        return OperationsClient;
    }());
    OperationsClient.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function OperationsClient_Factory() { return new OperationsClient(i0__namespace.ɵɵinject(GRPC_OPERATIONS_CLIENT_SETTINGS, 8), i0__namespace.ɵɵinject(i2__namespace.GRPC_CLIENT_FACTORY), i0__namespace.ɵɵinject(i2__namespace.GrpcHandler)); }, token: OperationsClient, providedIn: "root" });
    OperationsClient.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    OperationsClient.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [GRPC_OPERATIONS_CLIENT_SETTINGS,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [i2.GRPC_CLIENT_FACTORY,] }] },
        { type: i2.GrpcHandler }
    ]; };

    var Http = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param Http value
         */
        function Http(value) {
            value = value || {};
            this.rules = (value.rules || []).map(function (m) { return new exports.HttpRule(m); });
            this.fullyDecodeReservedExpansion = value.fullyDecodeReservedExpansion;
            Http.refineValues(this);
        }
        Http.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            Http.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        Http.fromBinary = function (bytes) {
            var instance = new Http();
            Http.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        Http.refineValues = function (instance) {
            instance.rules = instance.rules || [];
            instance.fullyDecodeReservedExpansion =
                instance.fullyDecodeReservedExpansion || false;
        };
        Http.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        var messageInitializer1 = new exports.HttpRule();
                        reader.readMessage(messageInitializer1, exports.HttpRule.fromBinaryReader);
                        (instance.rules = instance.rules || []).push(messageInitializer1);
                        break;
                    case 2:
                        instance.fullyDecodeReservedExpansion = reader.readBool();
                        break;
                    default:
                        reader.skipField();
                }
            }
            Http.refineValues(instance);
        };
        Http.toBinaryWriter = function (instance, writer) {
            if (instance.rules && instance.rules.length) {
                writer.writeRepeatedMessage(1, instance.rules, exports.HttpRule.toBinaryWriter);
            }
            if (instance.fullyDecodeReservedExpansion) {
                writer.writeBool(2, instance.fullyDecodeReservedExpansion);
            }
        };
        Object.defineProperty(Http.prototype, "rules", {
            get: function () {
                return this._rules;
            },
            set: function (value) {
                this._rules = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Http.prototype, "fullyDecodeReservedExpansion", {
            get: function () {
                return this._fullyDecodeReservedExpansion;
            },
            set: function (value) {
                this._fullyDecodeReservedExpansion = value;
            },
            enumerable: false,
            configurable: true
        });
        Http.prototype.toObject = function () {
            return {
                rules: (this.rules || []).map(function (m) { return m.toObject(); }),
                fullyDecodeReservedExpansion: this.fullyDecodeReservedExpansion
            };
        };
        Http.prototype.toJSON = function () {
            return this.toObject();
        };
        return Http;
    }());
    exports.HttpRule = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param HttpRule value
         */
        function HttpRule(value) {
            this._pattern = HttpRule.PatternCase.none;
            value = value || {};
            this.selector = value.selector;
            this.get = value.get;
            this.put = value.put;
            this.post = value.post;
            this.delete = value.delete;
            this.patch = value.patch;
            this.custom = value.custom
                ? new CustomHttpPattern(value.custom)
                : undefined;
            this.body = value.body;
            this.responseBody = value.responseBody;
            this.additionalBindings = (value.additionalBindings || []).map(function (m) { return new HttpRule(m); });
            HttpRule.refineValues(this);
        }
        HttpRule.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            HttpRule.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        HttpRule.fromBinary = function (bytes) {
            var instance = new HttpRule();
            HttpRule.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        HttpRule.refineValues = function (instance) {
            instance.selector = instance.selector || '';
            instance.body = instance.body || '';
            instance.responseBody = instance.responseBody || '';
            instance.additionalBindings = instance.additionalBindings || [];
        };
        HttpRule.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.selector = reader.readString();
                        break;
                    case 2:
                        instance.get = reader.readString();
                        break;
                    case 3:
                        instance.put = reader.readString();
                        break;
                    case 4:
                        instance.post = reader.readString();
                        break;
                    case 5:
                        instance.delete = reader.readString();
                        break;
                    case 6:
                        instance.patch = reader.readString();
                        break;
                    case 8:
                        instance.custom = new CustomHttpPattern();
                        reader.readMessage(instance.custom, CustomHttpPattern.fromBinaryReader);
                        break;
                    case 7:
                        instance.body = reader.readString();
                        break;
                    case 12:
                        instance.responseBody = reader.readString();
                        break;
                    case 11:
                        var messageInitializer11 = new HttpRule();
                        reader.readMessage(messageInitializer11, HttpRule.fromBinaryReader);
                        (instance.additionalBindings =
                            instance.additionalBindings || []).push(messageInitializer11);
                        break;
                    default:
                        reader.skipField();
                }
            }
            HttpRule.refineValues(instance);
        };
        HttpRule.toBinaryWriter = function (instance, writer) {
            if (instance.selector) {
                writer.writeString(1, instance.selector);
            }
            if (instance.get || instance.get === '') {
                writer.writeString(2, instance.get);
            }
            if (instance.put || instance.put === '') {
                writer.writeString(3, instance.put);
            }
            if (instance.post || instance.post === '') {
                writer.writeString(4, instance.post);
            }
            if (instance.delete || instance.delete === '') {
                writer.writeString(5, instance.delete);
            }
            if (instance.patch || instance.patch === '') {
                writer.writeString(6, instance.patch);
            }
            if (instance.custom) {
                writer.writeMessage(8, instance.custom, CustomHttpPattern.toBinaryWriter);
            }
            if (instance.body) {
                writer.writeString(7, instance.body);
            }
            if (instance.responseBody) {
                writer.writeString(12, instance.responseBody);
            }
            if (instance.additionalBindings && instance.additionalBindings.length) {
                writer.writeRepeatedMessage(11, instance.additionalBindings, HttpRule.toBinaryWriter);
            }
        };
        Object.defineProperty(HttpRule.prototype, "selector", {
            get: function () {
                return this._selector;
            },
            set: function (value) {
                this._selector = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "get", {
            get: function () {
                return this._get;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._put = this._post = this._delete = this._patch = this._custom = undefined;
                    this._pattern = HttpRule.PatternCase.get;
                }
                this._get = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "put", {
            get: function () {
                return this._put;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._get = this._post = this._delete = this._patch = this._custom = undefined;
                    this._pattern = HttpRule.PatternCase.put;
                }
                this._put = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "post", {
            get: function () {
                return this._post;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._get = this._put = this._delete = this._patch = this._custom = undefined;
                    this._pattern = HttpRule.PatternCase.post;
                }
                this._post = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "delete", {
            get: function () {
                return this._delete;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._get = this._put = this._post = this._patch = this._custom = undefined;
                    this._pattern = HttpRule.PatternCase.delete;
                }
                this._delete = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "patch", {
            get: function () {
                return this._patch;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._get = this._put = this._post = this._delete = this._custom = undefined;
                    this._pattern = HttpRule.PatternCase.patch;
                }
                this._patch = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "custom", {
            get: function () {
                return this._custom;
            },
            set: function (value) {
                if (value !== undefined && value !== null) {
                    this._get = this._put = this._post = this._delete = this._patch = undefined;
                    this._pattern = HttpRule.PatternCase.custom;
                }
                this._custom = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "body", {
            get: function () {
                return this._body;
            },
            set: function (value) {
                this._body = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "responseBody", {
            get: function () {
                return this._responseBody;
            },
            set: function (value) {
                this._responseBody = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "additionalBindings", {
            get: function () {
                return this._additionalBindings;
            },
            set: function (value) {
                this._additionalBindings = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HttpRule.prototype, "pattern", {
            get: function () {
                return this._pattern;
            },
            enumerable: false,
            configurable: true
        });
        HttpRule.prototype.toObject = function () {
            return {
                selector: this.selector,
                get: this.get,
                put: this.put,
                post: this.post,
                delete: this.delete,
                patch: this.patch,
                custom: this.custom ? this.custom.toObject() : undefined,
                body: this.body,
                responseBody: this.responseBody,
                additionalBindings: (this.additionalBindings || []).map(function (m) { return m.toObject(); })
            };
        };
        HttpRule.prototype.toJSON = function () {
            return this.toObject();
        };
        return HttpRule;
    }());
    (function (HttpRule) {
        var PatternCase;
        (function (PatternCase) {
            PatternCase[PatternCase["none"] = 0] = "none";
            PatternCase[PatternCase["get"] = 1] = "get";
            PatternCase[PatternCase["put"] = 2] = "put";
            PatternCase[PatternCase["post"] = 3] = "post";
            PatternCase[PatternCase["delete"] = 4] = "delete";
            PatternCase[PatternCase["patch"] = 5] = "patch";
            PatternCase[PatternCase["custom"] = 6] = "custom";
        })(PatternCase = HttpRule.PatternCase || (HttpRule.PatternCase = {}));
    })(exports.HttpRule || (exports.HttpRule = {}));
    var CustomHttpPattern = /** @class */ (function () {
        /**
         * Creates an object and applies default Protobuf values
         * @param CustomHttpPattern value
         */
        function CustomHttpPattern(value) {
            value = value || {};
            this.kind = value.kind;
            this.path = value.path;
            CustomHttpPattern.refineValues(this);
        }
        CustomHttpPattern.toBinary = function (instance) {
            var writer = new googleProtobuf.BinaryWriter();
            CustomHttpPattern.toBinaryWriter(instance, writer);
            return writer.getResultBuffer();
        };
        CustomHttpPattern.fromBinary = function (bytes) {
            var instance = new CustomHttpPattern();
            CustomHttpPattern.fromBinaryReader(instance, new googleProtobuf.BinaryReader(bytes));
            return instance;
        };
        CustomHttpPattern.refineValues = function (instance) {
            instance.kind = instance.kind || '';
            instance.path = instance.path || '';
        };
        CustomHttpPattern.fromBinaryReader = function (instance, reader) {
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        instance.kind = reader.readString();
                        break;
                    case 2:
                        instance.path = reader.readString();
                        break;
                    default:
                        reader.skipField();
                }
            }
            CustomHttpPattern.refineValues(instance);
        };
        CustomHttpPattern.toBinaryWriter = function (instance, writer) {
            if (instance.kind) {
                writer.writeString(1, instance.kind);
            }
            if (instance.path) {
                writer.writeString(2, instance.path);
            }
        };
        Object.defineProperty(CustomHttpPattern.prototype, "kind", {
            get: function () {
                return this._kind;
            },
            set: function (value) {
                this._kind = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(CustomHttpPattern.prototype, "path", {
            get: function () {
                return this._path;
            },
            set: function (value) {
                this._path = value;
            },
            enumerable: false,
            configurable: true
        });
        CustomHttpPattern.prototype.toObject = function () {
            return {
                kind: this.kind,
                path: this.path
            };
        };
        CustomHttpPattern.prototype.toJSON = function () {
            return this.toObject();
        };
        return CustomHttpPattern;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AddSessionLabelsRequest = AddSessionLabelsRequest;
    exports.AddUserToProjectRequest = AddUserToProjectRequest;
    exports.Agent = Agent;
    exports.AgentOfUserWithOwner = AgentOfUserWithOwner;
    exports.AgentWithOwner = AgentWithOwner;
    exports.AgentsClient = AgentsClient;
    exports.AiServicesClient = AiServicesClient;
    exports.AltSentence = AltSentence;
    exports.AltTrainingPhrase = AltTrainingPhrase;
    exports.Any = Any;
    exports.BatchCreateEntitiesRequest = BatchCreateEntitiesRequest;
    exports.BatchDeleteEntitiesRequest = BatchDeleteEntitiesRequest;
    exports.BatchDeleteEntityTypesRequest = BatchDeleteEntityTypesRequest;
    exports.BatchDeleteIntentsRequest = BatchDeleteIntentsRequest;
    exports.BatchUpdateEntitiesRequest = BatchUpdateEntitiesRequest;
    exports.BatchUpdateEntityTypesResponse = BatchUpdateEntityTypesResponse;
    exports.BatchUpdateIntentsResponse = BatchUpdateIntentsResponse;
    exports.BertAugEnrichmentConfig = BertAugEnrichmentConfig;
    exports.BuildCacheRequest = BuildCacheRequest;
    exports.CancelOperationRequest = CancelOperationRequest;
    exports.ContextsClient = ContextsClient;
    exports.CreateAgentRequest = CreateAgentRequest;
    exports.CreateContextRequest = CreateContextRequest;
    exports.CreateEntityTypeRequest = CreateEntityTypeRequest;
    exports.CreateIntentRequest = CreateIntentRequest;
    exports.CreateProjectRoleRequest = CreateProjectRoleRequest;
    exports.CreateServerRoleRequest = CreateServerRoleRequest;
    exports.CreateSessionReviewRequest = CreateSessionReviewRequest;
    exports.CreateUserRequest = CreateUserRequest;
    exports.CustomHttpPattern = CustomHttpPattern;
    exports.DataEnrichmentConfig = DataEnrichmentConfig;
    exports.DeleteAgentRequest = DeleteAgentRequest;
    exports.DeleteAllContextsRequest = DeleteAllContextsRequest;
    exports.DeleteContextRequest = DeleteContextRequest;
    exports.DeleteEntityTypeRequest = DeleteEntityTypeRequest;
    exports.DeleteIntentRequest = DeleteIntentRequest;
    exports.DeleteOperationRequest = DeleteOperationRequest;
    exports.DeleteProjectRoleRequest = DeleteProjectRoleRequest;
    exports.DeleteResourcesRequest = DeleteResourcesRequest;
    exports.DeleteServerRoleRequest = DeleteServerRoleRequest;
    exports.DeleteSessionRequest = DeleteSessionRequest;
    exports.DeleteUserRequest = DeleteUserRequest;
    exports.DetectIntentRequest = DetectIntentRequest;
    exports.DetectIntentResponse = DetectIntentResponse;
    exports.DetectedIntent = DetectedIntent;
    exports.Empty = Empty;
    exports.EntityEnrichmentConfig = EntityEnrichmentConfig;
    exports.EntityTypeBatch = EntityTypeBatch;
    exports.EntityTypesClient = EntityTypesClient;
    exports.EnumOptions = EnumOptions;
    exports.EnumValueDescriptorProto = EnumValueDescriptorProto;
    exports.EnumValueOptions = EnumValueOptions;
    exports.EventInput = EventInput;
    exports.ExportAgentRequest = ExportAgentRequest;
    exports.ExportResourcesRequest = ExportResourcesRequest;
    exports.ExportResourcesResponse = ExportResourcesResponse;
    exports.ExtensionRangeOptions = ExtensionRangeOptions;
    exports.ExtractEntitiesRequest = ExtractEntitiesRequest;
    exports.ExtractEntitiesResponse = ExtractEntitiesResponse;
    exports.FastTextEnrichmentConfig = FastTextEnrichmentConfig;
    exports.FieldMask = FieldMask;
    exports.FileDescriptorProto = FileDescriptorProto;
    exports.FileDescriptorSet = FileDescriptorSet;
    exports.GPT2EnrichmentConfig = GPT2EnrichmentConfig;
    exports.GRPC_AGENTS_CLIENT_SETTINGS = GRPC_AGENTS_CLIENT_SETTINGS;
    exports.GRPC_AI_SERVICES_CLIENT_SETTINGS = GRPC_AI_SERVICES_CLIENT_SETTINGS;
    exports.GRPC_CONTEXTS_CLIENT_SETTINGS = GRPC_CONTEXTS_CLIENT_SETTINGS;
    exports.GRPC_ENTITY_TYPES_CLIENT_SETTINGS = GRPC_ENTITY_TYPES_CLIENT_SETTINGS;
    exports.GRPC_INTENTS_CLIENT_SETTINGS = GRPC_INTENTS_CLIENT_SETTINGS;
    exports.GRPC_OPERATIONS_CLIENT_SETTINGS = GRPC_OPERATIONS_CLIENT_SETTINGS;
    exports.GRPC_PROJECT_ROLES_CLIENT_SETTINGS = GRPC_PROJECT_ROLES_CLIENT_SETTINGS;
    exports.GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS = GRPC_PROJECT_STATISTICS_CLIENT_SETTINGS;
    exports.GRPC_QA_CLIENT_SETTINGS = GRPC_QA_CLIENT_SETTINGS;
    exports.GRPC_SERVER_STATISTICS_CLIENT_SETTINGS = GRPC_SERVER_STATISTICS_CLIENT_SETTINGS;
    exports.GRPC_SESSIONS_CLIENT_SETTINGS = GRPC_SESSIONS_CLIENT_SETTINGS;
    exports.GRPC_USERS_CLIENT_SETTINGS = GRPC_USERS_CLIENT_SETTINGS;
    exports.GRPC_WEBHOOK_CLIENT_SETTINGS = GRPC_WEBHOOK_CLIENT_SETTINGS;
    exports.GenerateResponsesRequest = GenerateResponsesRequest;
    exports.GenerateResponsesResponse = GenerateResponsesResponse;
    exports.GenerateUserSaysRequest = GenerateUserSaysRequest;
    exports.GenerateUserSaysResponse = GenerateUserSaysResponse;
    exports.GetAgentRequest = GetAgentRequest;
    exports.GetAgentStatisticsRequest = GetAgentStatisticsRequest;
    exports.GetAgentStatisticsResponse = GetAgentStatisticsResponse;
    exports.GetAlternativeSentencesRequest = GetAlternativeSentencesRequest;
    exports.GetAlternativeSentencesResponse = GetAlternativeSentencesResponse;
    exports.GetAlternativeTrainingPhrasesRequest = GetAlternativeTrainingPhrasesRequest;
    exports.GetAlternativeTrainingPhrasesResponse = GetAlternativeTrainingPhrasesResponse;
    exports.GetAnswerRequest = GetAnswerRequest;
    exports.GetAnswerResponse = GetAnswerResponse;
    exports.GetContextRequest = GetContextRequest;
    exports.GetEntityTypeCountRequest = GetEntityTypeCountRequest;
    exports.GetEntityTypeRequest = GetEntityTypeRequest;
    exports.GetIntentCountRequest = GetIntentCountRequest;
    exports.GetIntentRequest = GetIntentRequest;
    exports.GetLatestSessionReviewRequest = GetLatestSessionReviewRequest;
    exports.GetOperationRequest = GetOperationRequest;
    exports.GetPlatformInfoResponse = GetPlatformInfoResponse;
    exports.GetProjectElementStatRequest = GetProjectElementStatRequest;
    exports.GetProjectStatRequest = GetProjectStatRequest;
    exports.GetSessionRequest = GetSessionRequest;
    exports.GetSessionReviewRequest = GetSessionReviewRequest;
    exports.GetSynonymsRequest = GetSynonymsRequest;
    exports.GetSynonymsResponse = GetSynonymsResponse;
    exports.GetUserProjectCountRequest = GetUserProjectCountRequest;
    exports.GloVeEnrichmentConfig = GloVeEnrichmentConfig;
    exports.Http = Http;
    exports.InputAudioConfig = InputAudioConfig;
    exports.IntentBatch = IntentBatch;
    exports.IntentsClient = IntentsClient;
    exports.LatLng = LatLng;
    exports.ListAgentsOfUserResponse = ListAgentsOfUserResponse;
    exports.ListAgentsRequest = ListAgentsRequest;
    exports.ListAgentsResponse = ListAgentsResponse;
    exports.ListContextsRequest = ListContextsRequest;
    exports.ListContextsResponse = ListContextsResponse;
    exports.ListEntityTypesRequest = ListEntityTypesRequest;
    exports.ListEntityTypesResponse = ListEntityTypesResponse;
    exports.ListIntentsRequest = ListIntentsRequest;
    exports.ListIntentsResponse = ListIntentsResponse;
    exports.ListOperationsRequest = ListOperationsRequest;
    exports.ListOperationsResponse = ListOperationsResponse;
    exports.ListProjectPermissionsRequest = ListProjectPermissionsRequest;
    exports.ListProjectPermissionsResponse = ListProjectPermissionsResponse;
    exports.ListProjectRolesRequest = ListProjectRolesRequest;
    exports.ListProjectRolesResponse = ListProjectRolesResponse;
    exports.ListServerPermissionsRequest = ListServerPermissionsRequest;
    exports.ListServerPermissionsResponse = ListServerPermissionsResponse;
    exports.ListServerRolesRequest = ListServerRolesRequest;
    exports.ListServerRolesResponse = ListServerRolesResponse;
    exports.ListSessionLabelsRequest = ListSessionLabelsRequest;
    exports.ListSessionLabelsResponse = ListSessionLabelsResponse;
    exports.ListSessionReviewsRequest = ListSessionReviewsRequest;
    exports.ListSessionReviewsResponse = ListSessionReviewsResponse;
    exports.ListSessionsRequest = ListSessionsRequest;
    exports.ListSessionsResponse = ListSessionsResponse;
    exports.ListUserInfosResponse = ListUserInfosResponse;
    exports.ListUsersInProjectRequest = ListUsersInProjectRequest;
    exports.ListUsersInProjectResponse = ListUsersInProjectResponse;
    exports.ListUsersRequest = ListUsersRequest;
    exports.ListUsersResponse = ListUsersResponse;
    exports.ListValue = ListValue;
    exports.LoginRequest = LoginRequest;
    exports.LoginResponse = LoginResponse;
    exports.MessageOptions = MessageOptions;
    exports.MethodDescriptorProto = MethodDescriptorProto;
    exports.OneofDescriptorProto = OneofDescriptorProto;
    exports.OneofOptions = OneofOptions;
    exports.OperationsClient = OperationsClient;
    exports.OptimizeRankingMatchRequest = OptimizeRankingMatchRequest;
    exports.OptimizeRankingMatchResponse = OptimizeRankingMatchResponse;
    exports.OriginalDetectIntentRequest = OriginalDetectIntentRequest;
    exports.PingRequest = PingRequest;
    exports.PingResponse = PingResponse;
    exports.ProjectRole = ProjectRole;
    exports.ProjectRolesClient = ProjectRolesClient;
    exports.ProjectStatisticsClient = ProjectStatisticsClient;
    exports.QAClient = QAClient;
    exports.QueryParameters = QueryParameters;
    exports.QueryResult = QueryResult;
    exports.RankingMatchOptimizationConfig = RankingMatchOptimizationConfig;
    exports.RemoveSessionLabelsRequest = RemoveSessionLabelsRequest;
    exports.RemoveUserFromProjectRequest = RemoveUserFromProjectRequest;
    exports.RunScraperResponse = RunScraperResponse;
    exports.RunTrainingResponse = RunTrainingResponse;
    exports.ServerRole = ServerRole;
    exports.ServerStatisticsClient = ServerStatisticsClient;
    exports.ServiceDescriptorProto = ServiceDescriptorProto;
    exports.ServiceOptions = ServiceOptions;
    exports.SessionFilter = SessionFilter;
    exports.SessionInfo = SessionInfo;
    exports.SessionReviewStep = SessionReviewStep;
    exports.SessionStep = SessionStep;
    exports.SessionsClient = SessionsClient;
    exports.SetAgentStatusRequest = SetAgentStatusRequest;
    exports.SetResourcesRequest = SetResourcesRequest;
    exports.StatResponse = StatResponse;
    exports.Status = Status;
    exports.StreamingDetectIntentRequest = StreamingDetectIntentRequest;
    exports.StreamingDetectIntentResponse = StreamingDetectIntentResponse;
    exports.Synonym = Synonym;
    exports.TextInput = TextInput;
    exports.ThesaurusEnrichmentConfig = ThesaurusEnrichmentConfig;
    exports.Timestamp = Timestamp;
    exports.TrackSessionStepRequest = TrackSessionStepRequest;
    exports.TrainAgentRequest = TrainAgentRequest;
    exports.UpdateAgentRequest = UpdateAgentRequest;
    exports.UpdateContextRequest = UpdateContextRequest;
    exports.UpdateEntityTypeRequest = UpdateEntityTypeRequest;
    exports.UpdateIntentRequest = UpdateIntentRequest;
    exports.UpdateProjectRoleRequest = UpdateProjectRoleRequest;
    exports.UpdateServerRoleRequest = UpdateServerRoleRequest;
    exports.UpdateUserRequest = UpdateUserRequest;
    exports.User = User;
    exports.UserInProject = UserInProject;
    exports.UsersClient = UsersClient;
    exports.WebhookClient = WebhookClient;
    exports.WebhookRequest = WebhookRequest;
    exports.WebhookResponse = WebhookResponse;
    exports.Word2VecEnrichmentConfig = Word2VecEnrichmentConfig;
    exports.WordNetAugEnrichmentConfig = WordNetAugEnrichmentConfig;
    exports.XLNetAugEnrichmentConfig = XLNetAugEnrichmentConfig;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ondewo-nlu-client-angular.umd.js.map
